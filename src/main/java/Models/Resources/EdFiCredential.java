/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.CredentialExtensions;
import Models.Resources.EdFiCredentialAcademicSubject;
import Models.Resources.EdFiCredentialEndorsement;
import Models.Resources.EdFiCredentialGradeLevel;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * EdFiCredential
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiCredential {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREDENTIAL_IDENTIFIER = "credentialIdentifier";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_IDENTIFIER)
  private String credentialIdentifier;

  public static final String SERIALIZED_NAME_GRADE_LEVELS = "gradeLevels";
  @SerializedName(SERIALIZED_NAME_GRADE_LEVELS)
  private List<EdFiCredentialGradeLevel> gradeLevels = new ArrayList<EdFiCredentialGradeLevel>();

  public static final String SERIALIZED_NAME_STATE_OF_ISSUE_STATE_ABBREVIATION_DESCRIPTOR = "stateOfIssueStateAbbreviationDescriptor";
  @SerializedName(SERIALIZED_NAME_STATE_OF_ISSUE_STATE_ABBREVIATION_DESCRIPTOR)
  private String stateOfIssueStateAbbreviationDescriptor;

  public static final String SERIALIZED_NAME_ACADEMIC_SUBJECTS = "academicSubjects";
  @SerializedName(SERIALIZED_NAME_ACADEMIC_SUBJECTS)
  private List<EdFiCredentialAcademicSubject> academicSubjects = null;

  public static final String SERIALIZED_NAME_CREDENTIAL_FIELD_DESCRIPTOR = "credentialFieldDescriptor";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_FIELD_DESCRIPTOR)
  private String credentialFieldDescriptor;

  public static final String SERIALIZED_NAME_CREDENTIAL_TYPE_DESCRIPTOR = "credentialTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_TYPE_DESCRIPTOR)
  private String credentialTypeDescriptor;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "effectiveDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private LocalDate effectiveDate;

  public static final String SERIALIZED_NAME_ENDORSEMENTS = "endorsements";
  @SerializedName(SERIALIZED_NAME_ENDORSEMENTS)
  private List<EdFiCredentialEndorsement> endorsements = null;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private LocalDate expirationDate;

  public static final String SERIALIZED_NAME_ISSUANCE_DATE = "issuanceDate";
  @SerializedName(SERIALIZED_NAME_ISSUANCE_DATE)
  private LocalDate issuanceDate;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_TEACHING_CREDENTIAL_BASIS_DESCRIPTOR = "teachingCredentialBasisDescriptor";
  @SerializedName(SERIALIZED_NAME_TEACHING_CREDENTIAL_BASIS_DESCRIPTOR)
  private String teachingCredentialBasisDescriptor;

  public static final String SERIALIZED_NAME_TEACHING_CREDENTIAL_DESCRIPTOR = "teachingCredentialDescriptor";
  @SerializedName(SERIALIZED_NAME_TEACHING_CREDENTIAL_DESCRIPTOR)
  private String teachingCredentialDescriptor;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXT = "_ext";
  @SerializedName(SERIALIZED_NAME_EXT)
  private CredentialExtensions ext;

  public EdFiCredential() { 
  }

  public EdFiCredential id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiCredential credentialIdentifier(String credentialIdentifier) {
    
    this.credentialIdentifier = credentialIdentifier;
    return this;
  }

   /**
   * Identifier or serial number assigned to the credential.
   * @return credentialIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Identifier or serial number assigned to the credential.")

  public String getCredentialIdentifier() {
    return credentialIdentifier;
  }


  public void setCredentialIdentifier(String credentialIdentifier) {
    this.credentialIdentifier = credentialIdentifier;
  }


  public EdFiCredential gradeLevels(List<EdFiCredentialGradeLevel> gradeLevels) {
    
    this.gradeLevels = gradeLevels;
    return this;
  }

  public EdFiCredential addGradeLevelsItem(EdFiCredentialGradeLevel gradeLevelsItem) {
    this.gradeLevels.add(gradeLevelsItem);
    return this;
  }

   /**
   * An unordered collection of credentialGradeLevels. The grade level(s) certified for teaching.
   * @return gradeLevels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An unordered collection of credentialGradeLevels. The grade level(s) certified for teaching.")

  public List<EdFiCredentialGradeLevel> getGradeLevels() {
    return gradeLevels;
  }


  public void setGradeLevels(List<EdFiCredentialGradeLevel> gradeLevels) {
    this.gradeLevels = gradeLevels;
  }


  public EdFiCredential stateOfIssueStateAbbreviationDescriptor(String stateOfIssueStateAbbreviationDescriptor) {
    
    this.stateOfIssueStateAbbreviationDescriptor = stateOfIssueStateAbbreviationDescriptor;
    return this;
  }

   /**
   * The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.
   * @return stateOfIssueStateAbbreviationDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.")

  public String getStateOfIssueStateAbbreviationDescriptor() {
    return stateOfIssueStateAbbreviationDescriptor;
  }


  public void setStateOfIssueStateAbbreviationDescriptor(String stateOfIssueStateAbbreviationDescriptor) {
    this.stateOfIssueStateAbbreviationDescriptor = stateOfIssueStateAbbreviationDescriptor;
  }


  public EdFiCredential academicSubjects(List<EdFiCredentialAcademicSubject> academicSubjects) {
    
    this.academicSubjects = academicSubjects;
    return this;
  }

  public EdFiCredential addAcademicSubjectsItem(EdFiCredentialAcademicSubject academicSubjectsItem) {
    if (this.academicSubjects == null) {
      this.academicSubjects = new ArrayList<EdFiCredentialAcademicSubject>();
    }
    this.academicSubjects.add(academicSubjectsItem);
    return this;
  }

   /**
   * An unordered collection of credentialAcademicSubjects. The academic subjects to which the credential pertains.
   * @return academicSubjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of credentialAcademicSubjects. The academic subjects to which the credential pertains.")

  public List<EdFiCredentialAcademicSubject> getAcademicSubjects() {
    return academicSubjects;
  }


  public void setAcademicSubjects(List<EdFiCredentialAcademicSubject> academicSubjects) {
    this.academicSubjects = academicSubjects;
  }


  public EdFiCredential credentialFieldDescriptor(String credentialFieldDescriptor) {
    
    this.credentialFieldDescriptor = credentialFieldDescriptor;
    return this;
  }

   /**
   * The field of certification for the certificate (e.g., Mathematics, Music).
   * @return credentialFieldDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The field of certification for the certificate (e.g., Mathematics, Music).")

  public String getCredentialFieldDescriptor() {
    return credentialFieldDescriptor;
  }


  public void setCredentialFieldDescriptor(String credentialFieldDescriptor) {
    this.credentialFieldDescriptor = credentialFieldDescriptor;
  }


  public EdFiCredential credentialTypeDescriptor(String credentialTypeDescriptor) {
    
    this.credentialTypeDescriptor = credentialTypeDescriptor;
    return this;
  }

   /**
   * An indication of the category of credential an individual holds.
   * @return credentialTypeDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An indication of the category of credential an individual holds.")

  public String getCredentialTypeDescriptor() {
    return credentialTypeDescriptor;
  }


  public void setCredentialTypeDescriptor(String credentialTypeDescriptor) {
    this.credentialTypeDescriptor = credentialTypeDescriptor;
  }


  public EdFiCredential effectiveDate(LocalDate effectiveDate) {
    
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * The year, month and day on which an active credential held by an individual was issued.
   * @return effectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The year, month and day on which an active credential held by an individual was issued.")

  public LocalDate getEffectiveDate() {
    return effectiveDate;
  }


  public void setEffectiveDate(LocalDate effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public EdFiCredential endorsements(List<EdFiCredentialEndorsement> endorsements) {
    
    this.endorsements = endorsements;
    return this;
  }

  public EdFiCredential addEndorsementsItem(EdFiCredentialEndorsement endorsementsItem) {
    if (this.endorsements == null) {
      this.endorsements = new ArrayList<EdFiCredentialEndorsement>();
    }
    this.endorsements.add(endorsementsItem);
    return this;
  }

   /**
   * An unordered collection of credentialEndorsements. Endorsements are attachments to teaching certificates and indicate areas of specialization.
   * @return endorsements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of credentialEndorsements. Endorsements are attachments to teaching certificates and indicate areas of specialization.")

  public List<EdFiCredentialEndorsement> getEndorsements() {
    return endorsements;
  }


  public void setEndorsements(List<EdFiCredentialEndorsement> endorsements) {
    this.endorsements = endorsements;
  }


  public EdFiCredential expirationDate(LocalDate expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * The month, day, and year on which an active credential held by an individual will expire.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The month, day, and year on which an active credential held by an individual will expire.")

  public LocalDate getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(LocalDate expirationDate) {
    this.expirationDate = expirationDate;
  }


  public EdFiCredential issuanceDate(LocalDate issuanceDate) {
    
    this.issuanceDate = issuanceDate;
    return this;
  }

   /**
   * The month, day, and year on which an active credential was issued to an individual.
   * @return issuanceDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The month, day, and year on which an active credential was issued to an individual.")

  public LocalDate getIssuanceDate() {
    return issuanceDate;
  }


  public void setIssuanceDate(LocalDate issuanceDate) {
    this.issuanceDate = issuanceDate;
  }


  public EdFiCredential namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace for the Credential.
   * @return namespace
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Namespace for the Credential.")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public EdFiCredential teachingCredentialBasisDescriptor(String teachingCredentialBasisDescriptor) {
    
    this.teachingCredentialBasisDescriptor = teachingCredentialBasisDescriptor;
    return this;
  }

   /**
   * An indication of the pre-determined criteria for granting the teaching credential that an individual holds.
   * @return teachingCredentialBasisDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of the pre-determined criteria for granting the teaching credential that an individual holds.")

  public String getTeachingCredentialBasisDescriptor() {
    return teachingCredentialBasisDescriptor;
  }


  public void setTeachingCredentialBasisDescriptor(String teachingCredentialBasisDescriptor) {
    this.teachingCredentialBasisDescriptor = teachingCredentialBasisDescriptor;
  }


  public EdFiCredential teachingCredentialDescriptor(String teachingCredentialDescriptor) {
    
    this.teachingCredentialDescriptor = teachingCredentialDescriptor;
    return this;
  }

   /**
   * An indication of the category of a legal document giving authorization to perform teaching assignment services.
   * @return teachingCredentialDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An indication of the category of a legal document giving authorization to perform teaching assignment services.")

  public String getTeachingCredentialDescriptor() {
    return teachingCredentialDescriptor;
  }


  public void setTeachingCredentialDescriptor(String teachingCredentialDescriptor) {
    this.teachingCredentialDescriptor = teachingCredentialDescriptor;
  }


  public EdFiCredential etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  public EdFiCredential ext(CredentialExtensions ext) {
    
    this.ext = ext;
    return this;
  }

   /**
   * Get ext
   * @return ext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CredentialExtensions getExt() {
    return ext;
  }


  public void setExt(CredentialExtensions ext) {
    this.ext = ext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiCredential edFiCredential = (EdFiCredential) o;
    return Objects.equals(this.id, edFiCredential.id) &&
        Objects.equals(this.credentialIdentifier, edFiCredential.credentialIdentifier) &&
        Objects.equals(this.gradeLevels, edFiCredential.gradeLevels) &&
        Objects.equals(this.stateOfIssueStateAbbreviationDescriptor, edFiCredential.stateOfIssueStateAbbreviationDescriptor) &&
        Objects.equals(this.academicSubjects, edFiCredential.academicSubjects) &&
        Objects.equals(this.credentialFieldDescriptor, edFiCredential.credentialFieldDescriptor) &&
        Objects.equals(this.credentialTypeDescriptor, edFiCredential.credentialTypeDescriptor) &&
        Objects.equals(this.effectiveDate, edFiCredential.effectiveDate) &&
        Objects.equals(this.endorsements, edFiCredential.endorsements) &&
        Objects.equals(this.expirationDate, edFiCredential.expirationDate) &&
        Objects.equals(this.issuanceDate, edFiCredential.issuanceDate) &&
        Objects.equals(this.namespace, edFiCredential.namespace) &&
        Objects.equals(this.teachingCredentialBasisDescriptor, edFiCredential.teachingCredentialBasisDescriptor) &&
        Objects.equals(this.teachingCredentialDescriptor, edFiCredential.teachingCredentialDescriptor) &&
        Objects.equals(this.etag, edFiCredential.etag) &&
        Objects.equals(this.ext, edFiCredential.ext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, credentialIdentifier, gradeLevels, stateOfIssueStateAbbreviationDescriptor, academicSubjects, credentialFieldDescriptor, credentialTypeDescriptor, effectiveDate, endorsements, expirationDate, issuanceDate, namespace, teachingCredentialBasisDescriptor, teachingCredentialDescriptor, etag, ext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiCredential {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    credentialIdentifier: ").append(toIndentedString(credentialIdentifier)).append("\n");
    sb.append("    gradeLevels: ").append(toIndentedString(gradeLevels)).append("\n");
    sb.append("    stateOfIssueStateAbbreviationDescriptor: ").append(toIndentedString(stateOfIssueStateAbbreviationDescriptor)).append("\n");
    sb.append("    academicSubjects: ").append(toIndentedString(academicSubjects)).append("\n");
    sb.append("    credentialFieldDescriptor: ").append(toIndentedString(credentialFieldDescriptor)).append("\n");
    sb.append("    credentialTypeDescriptor: ").append(toIndentedString(credentialTypeDescriptor)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    endorsements: ").append(toIndentedString(endorsements)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    issuanceDate: ").append(toIndentedString(issuanceDate)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    teachingCredentialBasisDescriptor: ").append(toIndentedString(teachingCredentialBasisDescriptor)).append("\n");
    sb.append("    teachingCredentialDescriptor: ").append(toIndentedString(teachingCredentialDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

