/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * TpdmStudentGradebookEntryExtension
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class TpdmStudentGradebookEntryExtension {
  public static final String SERIALIZED_NAME_ASSIGNMENT_PASSED = "assignmentPassed";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_PASSED)
  private Boolean assignmentPassed;

  public static final String SERIALIZED_NAME_DATE_COMPLETED = "dateCompleted";
  @SerializedName(SERIALIZED_NAME_DATE_COMPLETED)
  private LocalDate dateCompleted;

  public TpdmStudentGradebookEntryExtension() { 
  }

  public TpdmStudentGradebookEntryExtension assignmentPassed(Boolean assignmentPassed) {
    
    this.assignmentPassed = assignmentPassed;
    return this;
  }

   /**
   * Indication of whether the assignment was passed or not.
   * @return assignmentPassed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indication of whether the assignment was passed or not.")

  public Boolean getAssignmentPassed() {
    return assignmentPassed;
  }


  public void setAssignmentPassed(Boolean assignmentPassed) {
    this.assignmentPassed = assignmentPassed;
  }


  public TpdmStudentGradebookEntryExtension dateCompleted(LocalDate dateCompleted) {
    
    this.dateCompleted = dateCompleted;
    return this;
  }

   /**
   * The date that the assignment was completed.
   * @return dateCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date that the assignment was completed.")

  public LocalDate getDateCompleted() {
    return dateCompleted;
  }


  public void setDateCompleted(LocalDate dateCompleted) {
    this.dateCompleted = dateCompleted;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmStudentGradebookEntryExtension tpdmStudentGradebookEntryExtension = (TpdmStudentGradebookEntryExtension) o;
    return Objects.equals(this.assignmentPassed, tpdmStudentGradebookEntryExtension.assignmentPassed) &&
        Objects.equals(this.dateCompleted, tpdmStudentGradebookEntryExtension.dateCompleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignmentPassed, dateCompleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmStudentGradebookEntryExtension {\n");
    sb.append("    assignmentPassed: ").append(toIndentedString(assignmentPassed)).append("\n");
    sb.append("    dateCompleted: ").append(toIndentedString(dateCompleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

