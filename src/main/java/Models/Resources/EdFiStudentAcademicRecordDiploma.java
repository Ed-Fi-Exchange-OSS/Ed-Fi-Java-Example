/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * EdFiStudentAcademicRecordDiploma
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiStudentAcademicRecordDiploma {
  public static final String SERIALIZED_NAME_DIPLOMA_TYPE_DESCRIPTOR = "diplomaTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_DIPLOMA_TYPE_DESCRIPTOR)
  private String diplomaTypeDescriptor;

  public static final String SERIALIZED_NAME_DIPLOMA_AWARD_DATE = "diplomaAwardDate";
  @SerializedName(SERIALIZED_NAME_DIPLOMA_AWARD_DATE)
  private LocalDate diplomaAwardDate;

  public static final String SERIALIZED_NAME_ACHIEVEMENT_CATEGORY_DESCRIPTOR = "achievementCategoryDescriptor";
  @SerializedName(SERIALIZED_NAME_ACHIEVEMENT_CATEGORY_DESCRIPTOR)
  private String achievementCategoryDescriptor;

  public static final String SERIALIZED_NAME_DIPLOMA_LEVEL_DESCRIPTOR = "diplomaLevelDescriptor";
  @SerializedName(SERIALIZED_NAME_DIPLOMA_LEVEL_DESCRIPTOR)
  private String diplomaLevelDescriptor;

  public static final String SERIALIZED_NAME_ACHIEVEMENT_CATEGORY_SYSTEM = "achievementCategorySystem";
  @SerializedName(SERIALIZED_NAME_ACHIEVEMENT_CATEGORY_SYSTEM)
  private String achievementCategorySystem;

  public static final String SERIALIZED_NAME_ACHIEVEMENT_TITLE = "achievementTitle";
  @SerializedName(SERIALIZED_NAME_ACHIEVEMENT_TITLE)
  private String achievementTitle;

  public static final String SERIALIZED_NAME_CRITERIA = "criteria";
  @SerializedName(SERIALIZED_NAME_CRITERIA)
  private String criteria;

  public static final String SERIALIZED_NAME_CRITERIA_U_R_L = "criteriaURL";
  @SerializedName(SERIALIZED_NAME_CRITERIA_U_R_L)
  private String criteriaURL;

  public static final String SERIALIZED_NAME_CTE_COMPLETER = "cteCompleter";
  @SerializedName(SERIALIZED_NAME_CTE_COMPLETER)
  private Boolean cteCompleter;

  public static final String SERIALIZED_NAME_DIPLOMA_AWARD_EXPIRES_DATE = "diplomaAwardExpiresDate";
  @SerializedName(SERIALIZED_NAME_DIPLOMA_AWARD_EXPIRES_DATE)
  private LocalDate diplomaAwardExpiresDate;

  public static final String SERIALIZED_NAME_DIPLOMA_DESCRIPTION = "diplomaDescription";
  @SerializedName(SERIALIZED_NAME_DIPLOMA_DESCRIPTION)
  private String diplomaDescription;

  public static final String SERIALIZED_NAME_EVIDENCE_STATEMENT = "evidenceStatement";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_STATEMENT)
  private String evidenceStatement;

  public static final String SERIALIZED_NAME_IMAGE_U_R_L = "imageURL";
  @SerializedName(SERIALIZED_NAME_IMAGE_U_R_L)
  private String imageURL;

  public static final String SERIALIZED_NAME_ISSUER_NAME = "issuerName";
  @SerializedName(SERIALIZED_NAME_ISSUER_NAME)
  private String issuerName;

  public static final String SERIALIZED_NAME_ISSUER_ORIGIN_U_R_L = "issuerOriginURL";
  @SerializedName(SERIALIZED_NAME_ISSUER_ORIGIN_U_R_L)
  private String issuerOriginURL;

  public EdFiStudentAcademicRecordDiploma() { 
  }

  public EdFiStudentAcademicRecordDiploma diplomaTypeDescriptor(String diplomaTypeDescriptor) {
    
    this.diplomaTypeDescriptor = diplomaTypeDescriptor;
    return this;
  }

   /**
   * The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.
   * @return diplomaTypeDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.")

  public String getDiplomaTypeDescriptor() {
    return diplomaTypeDescriptor;
  }


  public void setDiplomaTypeDescriptor(String diplomaTypeDescriptor) {
    this.diplomaTypeDescriptor = diplomaTypeDescriptor;
  }


  public EdFiStudentAcademicRecordDiploma diplomaAwardDate(LocalDate diplomaAwardDate) {
    
    this.diplomaAwardDate = diplomaAwardDate;
    return this;
  }

   /**
   * The month, day, and year on which the student met  graduation requirements and was awarded a diploma.
   * @return diplomaAwardDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The month, day, and year on which the student met  graduation requirements and was awarded a diploma.")

  public LocalDate getDiplomaAwardDate() {
    return diplomaAwardDate;
  }


  public void setDiplomaAwardDate(LocalDate diplomaAwardDate) {
    this.diplomaAwardDate = diplomaAwardDate;
  }


  public EdFiStudentAcademicRecordDiploma achievementCategoryDescriptor(String achievementCategoryDescriptor) {
    
    this.achievementCategoryDescriptor = achievementCategoryDescriptor;
    return this;
  }

   /**
   * The category of achievement attributed to the learner.
   * @return achievementCategoryDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category of achievement attributed to the learner.")

  public String getAchievementCategoryDescriptor() {
    return achievementCategoryDescriptor;
  }


  public void setAchievementCategoryDescriptor(String achievementCategoryDescriptor) {
    this.achievementCategoryDescriptor = achievementCategoryDescriptor;
  }


  public EdFiStudentAcademicRecordDiploma diplomaLevelDescriptor(String diplomaLevelDescriptor) {
    
    this.diplomaLevelDescriptor = diplomaLevelDescriptor;
    return this;
  }

   /**
   * The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.         Minimum high school program         Recommended high school program         Distinguished Achievement Program.
   * @return diplomaLevelDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.         Minimum high school program         Recommended high school program         Distinguished Achievement Program.")

  public String getDiplomaLevelDescriptor() {
    return diplomaLevelDescriptor;
  }


  public void setDiplomaLevelDescriptor(String diplomaLevelDescriptor) {
    this.diplomaLevelDescriptor = diplomaLevelDescriptor;
  }


  public EdFiStudentAcademicRecordDiploma achievementCategorySystem(String achievementCategorySystem) {
    
    this.achievementCategorySystem = achievementCategorySystem;
    return this;
  }

   /**
   * The system that defines the categories by which an achievement is attributed to the learner.
   * @return achievementCategorySystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The system that defines the categories by which an achievement is attributed to the learner.")

  public String getAchievementCategorySystem() {
    return achievementCategorySystem;
  }


  public void setAchievementCategorySystem(String achievementCategorySystem) {
    this.achievementCategorySystem = achievementCategorySystem;
  }


  public EdFiStudentAcademicRecordDiploma achievementTitle(String achievementTitle) {
    
    this.achievementTitle = achievementTitle;
    return this;
  }

   /**
   * The title assigned to the achievement.
   * @return achievementTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The title assigned to the achievement.")

  public String getAchievementTitle() {
    return achievementTitle;
  }


  public void setAchievementTitle(String achievementTitle) {
    this.achievementTitle = achievementTitle;
  }


  public EdFiStudentAcademicRecordDiploma criteria(String criteria) {
    
    this.criteria = criteria;
    return this;
  }

   /**
   * The criteria for competency-based completion of the achievement/award.
   * @return criteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The criteria for competency-based completion of the achievement/award.")

  public String getCriteria() {
    return criteria;
  }


  public void setCriteria(String criteria) {
    this.criteria = criteria;
  }


  public EdFiStudentAcademicRecordDiploma criteriaURL(String criteriaURL) {
    
    this.criteriaURL = criteriaURL;
    return this;
  }

   /**
   * The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.
   * @return criteriaURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.")

  public String getCriteriaURL() {
    return criteriaURL;
  }


  public void setCriteriaURL(String criteriaURL) {
    this.criteriaURL = criteriaURL;
  }


  public EdFiStudentAcademicRecordDiploma cteCompleter(Boolean cteCompleter) {
    
    this.cteCompleter = cteCompleter;
    return this;
  }

   /**
   * Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.
   * @return cteCompleter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.")

  public Boolean getCteCompleter() {
    return cteCompleter;
  }


  public void setCteCompleter(Boolean cteCompleter) {
    this.cteCompleter = cteCompleter;
  }


  public EdFiStudentAcademicRecordDiploma diplomaAwardExpiresDate(LocalDate diplomaAwardExpiresDate) {
    
    this.diplomaAwardExpiresDate = diplomaAwardExpiresDate;
    return this;
  }

   /**
   * Date on which the award expires.
   * @return diplomaAwardExpiresDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date on which the award expires.")

  public LocalDate getDiplomaAwardExpiresDate() {
    return diplomaAwardExpiresDate;
  }


  public void setDiplomaAwardExpiresDate(LocalDate diplomaAwardExpiresDate) {
    this.diplomaAwardExpiresDate = diplomaAwardExpiresDate;
  }


  public EdFiStudentAcademicRecordDiploma diplomaDescription(String diplomaDescription) {
    
    this.diplomaDescription = diplomaDescription;
    return this;
  }

   /**
   * The description of diploma given to the student for accomplishments.
   * @return diplomaDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of diploma given to the student for accomplishments.")

  public String getDiplomaDescription() {
    return diplomaDescription;
  }


  public void setDiplomaDescription(String diplomaDescription) {
    this.diplomaDescription = diplomaDescription;
  }


  public EdFiStudentAcademicRecordDiploma evidenceStatement(String evidenceStatement) {
    
    this.evidenceStatement = evidenceStatement;
    return this;
  }

   /**
   * A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.
   * @return evidenceStatement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.")

  public String getEvidenceStatement() {
    return evidenceStatement;
  }


  public void setEvidenceStatement(String evidenceStatement) {
    this.evidenceStatement = evidenceStatement;
  }


  public EdFiStudentAcademicRecordDiploma imageURL(String imageURL) {
    
    this.imageURL = imageURL;
    return this;
  }

   /**
   * The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.
   * @return imageURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.")

  public String getImageURL() {
    return imageURL;
  }


  public void setImageURL(String imageURL) {
    this.imageURL = imageURL;
  }


  public EdFiStudentAcademicRecordDiploma issuerName(String issuerName) {
    
    this.issuerName = issuerName;
    return this;
  }

   /**
   * The name of the agent, entity, or institution issuing the element.
   * @return issuerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the agent, entity, or institution issuing the element.")

  public String getIssuerName() {
    return issuerName;
  }


  public void setIssuerName(String issuerName) {
    this.issuerName = issuerName;
  }


  public EdFiStudentAcademicRecordDiploma issuerOriginURL(String issuerOriginURL) {
    
    this.issuerOriginURL = issuerOriginURL;
    return this;
  }

   /**
   * The Uniform Resource Locator (URL) from which the award was issued.
   * @return issuerOriginURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Uniform Resource Locator (URL) from which the award was issued.")

  public String getIssuerOriginURL() {
    return issuerOriginURL;
  }


  public void setIssuerOriginURL(String issuerOriginURL) {
    this.issuerOriginURL = issuerOriginURL;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStudentAcademicRecordDiploma edFiStudentAcademicRecordDiploma = (EdFiStudentAcademicRecordDiploma) o;
    return Objects.equals(this.diplomaTypeDescriptor, edFiStudentAcademicRecordDiploma.diplomaTypeDescriptor) &&
        Objects.equals(this.diplomaAwardDate, edFiStudentAcademicRecordDiploma.diplomaAwardDate) &&
        Objects.equals(this.achievementCategoryDescriptor, edFiStudentAcademicRecordDiploma.achievementCategoryDescriptor) &&
        Objects.equals(this.diplomaLevelDescriptor, edFiStudentAcademicRecordDiploma.diplomaLevelDescriptor) &&
        Objects.equals(this.achievementCategorySystem, edFiStudentAcademicRecordDiploma.achievementCategorySystem) &&
        Objects.equals(this.achievementTitle, edFiStudentAcademicRecordDiploma.achievementTitle) &&
        Objects.equals(this.criteria, edFiStudentAcademicRecordDiploma.criteria) &&
        Objects.equals(this.criteriaURL, edFiStudentAcademicRecordDiploma.criteriaURL) &&
        Objects.equals(this.cteCompleter, edFiStudentAcademicRecordDiploma.cteCompleter) &&
        Objects.equals(this.diplomaAwardExpiresDate, edFiStudentAcademicRecordDiploma.diplomaAwardExpiresDate) &&
        Objects.equals(this.diplomaDescription, edFiStudentAcademicRecordDiploma.diplomaDescription) &&
        Objects.equals(this.evidenceStatement, edFiStudentAcademicRecordDiploma.evidenceStatement) &&
        Objects.equals(this.imageURL, edFiStudentAcademicRecordDiploma.imageURL) &&
        Objects.equals(this.issuerName, edFiStudentAcademicRecordDiploma.issuerName) &&
        Objects.equals(this.issuerOriginURL, edFiStudentAcademicRecordDiploma.issuerOriginURL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diplomaTypeDescriptor, diplomaAwardDate, achievementCategoryDescriptor, diplomaLevelDescriptor, achievementCategorySystem, achievementTitle, criteria, criteriaURL, cteCompleter, diplomaAwardExpiresDate, diplomaDescription, evidenceStatement, imageURL, issuerName, issuerOriginURL);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStudentAcademicRecordDiploma {\n");
    sb.append("    diplomaTypeDescriptor: ").append(toIndentedString(diplomaTypeDescriptor)).append("\n");
    sb.append("    diplomaAwardDate: ").append(toIndentedString(diplomaAwardDate)).append("\n");
    sb.append("    achievementCategoryDescriptor: ").append(toIndentedString(achievementCategoryDescriptor)).append("\n");
    sb.append("    diplomaLevelDescriptor: ").append(toIndentedString(diplomaLevelDescriptor)).append("\n");
    sb.append("    achievementCategorySystem: ").append(toIndentedString(achievementCategorySystem)).append("\n");
    sb.append("    achievementTitle: ").append(toIndentedString(achievementTitle)).append("\n");
    sb.append("    criteria: ").append(toIndentedString(criteria)).append("\n");
    sb.append("    criteriaURL: ").append(toIndentedString(criteriaURL)).append("\n");
    sb.append("    cteCompleter: ").append(toIndentedString(cteCompleter)).append("\n");
    sb.append("    diplomaAwardExpiresDate: ").append(toIndentedString(diplomaAwardExpiresDate)).append("\n");
    sb.append("    diplomaDescription: ").append(toIndentedString(diplomaDescription)).append("\n");
    sb.append("    evidenceStatement: ").append(toIndentedString(evidenceStatement)).append("\n");
    sb.append("    imageURL: ").append(toIndentedString(imageURL)).append("\n");
    sb.append("    issuerName: ").append(toIndentedString(issuerName)).append("\n");
    sb.append("    issuerOriginURL: ").append(toIndentedString(issuerOriginURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

