/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiStaffReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * EdFiStaffAbsenceEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiStaffAbsenceEvent {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ABSENCE_EVENT_CATEGORY_DESCRIPTOR = "absenceEventCategoryDescriptor";
  @SerializedName(SERIALIZED_NAME_ABSENCE_EVENT_CATEGORY_DESCRIPTOR)
  private String absenceEventCategoryDescriptor;

  public static final String SERIALIZED_NAME_EVENT_DATE = "eventDate";
  @SerializedName(SERIALIZED_NAME_EVENT_DATE)
  private LocalDate eventDate;

  public static final String SERIALIZED_NAME_STAFF_REFERENCE = "staffReference";
  @SerializedName(SERIALIZED_NAME_STAFF_REFERENCE)
  private EdFiStaffReference staffReference;

  public static final String SERIALIZED_NAME_ABSENCE_EVENT_REASON = "absenceEventReason";
  @SerializedName(SERIALIZED_NAME_ABSENCE_EVENT_REASON)
  private String absenceEventReason;

  public static final String SERIALIZED_NAME_HOURS_ABSENT = "hoursAbsent";
  @SerializedName(SERIALIZED_NAME_HOURS_ABSENT)
  private Double hoursAbsent;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiStaffAbsenceEvent() { 
  }

  public EdFiStaffAbsenceEvent id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiStaffAbsenceEvent absenceEventCategoryDescriptor(String absenceEventCategoryDescriptor) {
    
    this.absenceEventCategoryDescriptor = absenceEventCategoryDescriptor;
    return this;
  }

   /**
   * The code describing the type of absence.
   * @return absenceEventCategoryDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The code describing the type of absence.")

  public String getAbsenceEventCategoryDescriptor() {
    return absenceEventCategoryDescriptor;
  }


  public void setAbsenceEventCategoryDescriptor(String absenceEventCategoryDescriptor) {
    this.absenceEventCategoryDescriptor = absenceEventCategoryDescriptor;
  }


  public EdFiStaffAbsenceEvent eventDate(LocalDate eventDate) {
    
    this.eventDate = eventDate;
    return this;
  }

   /**
   * Date for this leave event.
   * @return eventDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Date for this leave event.")

  public LocalDate getEventDate() {
    return eventDate;
  }


  public void setEventDate(LocalDate eventDate) {
    this.eventDate = eventDate;
  }


  public EdFiStaffAbsenceEvent staffReference(EdFiStaffReference staffReference) {
    
    this.staffReference = staffReference;
    return this;
  }

   /**
   * Get staffReference
   * @return staffReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStaffReference getStaffReference() {
    return staffReference;
  }


  public void setStaffReference(EdFiStaffReference staffReference) {
    this.staffReference = staffReference;
  }


  public EdFiStaffAbsenceEvent absenceEventReason(String absenceEventReason) {
    
    this.absenceEventReason = absenceEventReason;
    return this;
  }

   /**
   * Expanded reason for the staff absence.
   * @return absenceEventReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expanded reason for the staff absence.")

  public String getAbsenceEventReason() {
    return absenceEventReason;
  }


  public void setAbsenceEventReason(String absenceEventReason) {
    this.absenceEventReason = absenceEventReason;
  }


  public EdFiStaffAbsenceEvent hoursAbsent(Double hoursAbsent) {
    
    this.hoursAbsent = hoursAbsent;
    return this;
  }

   /**
   * The hours the staff was absent, if not the entire working day.
   * @return hoursAbsent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The hours the staff was absent, if not the entire working day.")

  public Double getHoursAbsent() {
    return hoursAbsent;
  }


  public void setHoursAbsent(Double hoursAbsent) {
    this.hoursAbsent = hoursAbsent;
  }


  public EdFiStaffAbsenceEvent etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStaffAbsenceEvent edFiStaffAbsenceEvent = (EdFiStaffAbsenceEvent) o;
    return Objects.equals(this.id, edFiStaffAbsenceEvent.id) &&
        Objects.equals(this.absenceEventCategoryDescriptor, edFiStaffAbsenceEvent.absenceEventCategoryDescriptor) &&
        Objects.equals(this.eventDate, edFiStaffAbsenceEvent.eventDate) &&
        Objects.equals(this.staffReference, edFiStaffAbsenceEvent.staffReference) &&
        Objects.equals(this.absenceEventReason, edFiStaffAbsenceEvent.absenceEventReason) &&
        Objects.equals(this.hoursAbsent, edFiStaffAbsenceEvent.hoursAbsent) &&
        Objects.equals(this.etag, edFiStaffAbsenceEvent.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, absenceEventCategoryDescriptor, eventDate, staffReference, absenceEventReason, hoursAbsent, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStaffAbsenceEvent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    absenceEventCategoryDescriptor: ").append(toIndentedString(absenceEventCategoryDescriptor)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    staffReference: ").append(toIndentedString(staffReference)).append("\n");
    sb.append("    absenceEventReason: ").append(toIndentedString(absenceEventReason)).append("\n");
    sb.append("    hoursAbsent: ").append(toIndentedString(hoursAbsent)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

