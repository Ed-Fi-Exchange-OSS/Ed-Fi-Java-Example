/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiEducationOrganizationReference;
import Models.Resources.EdFiGraduationPlanCreditsByCourse;
import Models.Resources.EdFiGraduationPlanCreditsByCreditCategory;
import Models.Resources.EdFiGraduationPlanCreditsBySubject;
import Models.Resources.EdFiGraduationPlanRequiredAssessment;
import Models.Resources.EdFiSchoolYearTypeReference;
import Models.Resources.GraduationPlanExtensions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EdFiGraduationPlan
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiGraduationPlan {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_GRADUATION_PLAN_TYPE_DESCRIPTOR = "graduationPlanTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_GRADUATION_PLAN_TYPE_DESCRIPTOR)
  private String graduationPlanTypeDescriptor;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE = "educationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference educationOrganizationReference;

  public static final String SERIALIZED_NAME_GRADUATION_SCHOOL_YEAR_TYPE_REFERENCE = "graduationSchoolYearTypeReference";
  @SerializedName(SERIALIZED_NAME_GRADUATION_SCHOOL_YEAR_TYPE_REFERENCE)
  private EdFiSchoolYearTypeReference graduationSchoolYearTypeReference;

  public static final String SERIALIZED_NAME_CREDITS_BY_COURSES = "creditsByCourses";
  @SerializedName(SERIALIZED_NAME_CREDITS_BY_COURSES)
  private List<EdFiGraduationPlanCreditsByCourse> creditsByCourses = null;

  public static final String SERIALIZED_NAME_CREDITS_BY_CREDIT_CATEGORIES = "creditsByCreditCategories";
  @SerializedName(SERIALIZED_NAME_CREDITS_BY_CREDIT_CATEGORIES)
  private List<EdFiGraduationPlanCreditsByCreditCategory> creditsByCreditCategories = null;

  public static final String SERIALIZED_NAME_CREDITS_BY_SUBJECTS = "creditsBySubjects";
  @SerializedName(SERIALIZED_NAME_CREDITS_BY_SUBJECTS)
  private List<EdFiGraduationPlanCreditsBySubject> creditsBySubjects = null;

  public static final String SERIALIZED_NAME_INDIVIDUAL_PLAN = "individualPlan";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_PLAN)
  private Boolean individualPlan;

  public static final String SERIALIZED_NAME_REQUIRED_ASSESSMENTS = "requiredAssessments";
  @SerializedName(SERIALIZED_NAME_REQUIRED_ASSESSMENTS)
  private List<EdFiGraduationPlanRequiredAssessment> requiredAssessments = null;

  public static final String SERIALIZED_NAME_TOTAL_REQUIRED_CREDIT_CONVERSION = "totalRequiredCreditConversion";
  @SerializedName(SERIALIZED_NAME_TOTAL_REQUIRED_CREDIT_CONVERSION)
  private Double totalRequiredCreditConversion;

  public static final String SERIALIZED_NAME_TOTAL_REQUIRED_CREDITS = "totalRequiredCredits";
  @SerializedName(SERIALIZED_NAME_TOTAL_REQUIRED_CREDITS)
  private Double totalRequiredCredits;

  public static final String SERIALIZED_NAME_TOTAL_REQUIRED_CREDIT_TYPE_DESCRIPTOR = "totalRequiredCreditTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_TOTAL_REQUIRED_CREDIT_TYPE_DESCRIPTOR)
  private String totalRequiredCreditTypeDescriptor;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXT = "_ext";
  @SerializedName(SERIALIZED_NAME_EXT)
  private GraduationPlanExtensions ext;

  public EdFiGraduationPlan() { 
  }

  public EdFiGraduationPlan id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiGraduationPlan graduationPlanTypeDescriptor(String graduationPlanTypeDescriptor) {
    
    this.graduationPlanTypeDescriptor = graduationPlanTypeDescriptor;
    return this;
  }

   /**
   * The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.
   * @return graduationPlanTypeDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.")

  public String getGraduationPlanTypeDescriptor() {
    return graduationPlanTypeDescriptor;
  }


  public void setGraduationPlanTypeDescriptor(String graduationPlanTypeDescriptor) {
    this.graduationPlanTypeDescriptor = graduationPlanTypeDescriptor;
  }


  public EdFiGraduationPlan educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }


  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }


  public EdFiGraduationPlan graduationSchoolYearTypeReference(EdFiSchoolYearTypeReference graduationSchoolYearTypeReference) {
    
    this.graduationSchoolYearTypeReference = graduationSchoolYearTypeReference;
    return this;
  }

   /**
   * Get graduationSchoolYearTypeReference
   * @return graduationSchoolYearTypeReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiSchoolYearTypeReference getGraduationSchoolYearTypeReference() {
    return graduationSchoolYearTypeReference;
  }


  public void setGraduationSchoolYearTypeReference(EdFiSchoolYearTypeReference graduationSchoolYearTypeReference) {
    this.graduationSchoolYearTypeReference = graduationSchoolYearTypeReference;
  }


  public EdFiGraduationPlan creditsByCourses(List<EdFiGraduationPlanCreditsByCourse> creditsByCourses) {
    
    this.creditsByCourses = creditsByCourses;
    return this;
  }

  public EdFiGraduationPlan addCreditsByCoursesItem(EdFiGraduationPlanCreditsByCourse creditsByCoursesItem) {
    if (this.creditsByCourses == null) {
      this.creditsByCourses = new ArrayList<EdFiGraduationPlanCreditsByCourse>();
    }
    this.creditsByCourses.add(creditsByCoursesItem);
    return this;
  }

   /**
   * An unordered collection of graduationPlanCreditsByCourses. The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.
   * @return creditsByCourses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of graduationPlanCreditsByCourses. The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.")

  public List<EdFiGraduationPlanCreditsByCourse> getCreditsByCourses() {
    return creditsByCourses;
  }


  public void setCreditsByCourses(List<EdFiGraduationPlanCreditsByCourse> creditsByCourses) {
    this.creditsByCourses = creditsByCourses;
  }


  public EdFiGraduationPlan creditsByCreditCategories(List<EdFiGraduationPlanCreditsByCreditCategory> creditsByCreditCategories) {
    
    this.creditsByCreditCategories = creditsByCreditCategories;
    return this;
  }

  public EdFiGraduationPlan addCreditsByCreditCategoriesItem(EdFiGraduationPlanCreditsByCreditCategory creditsByCreditCategoriesItem) {
    if (this.creditsByCreditCategories == null) {
      this.creditsByCreditCategories = new ArrayList<EdFiGraduationPlanCreditsByCreditCategory>();
    }
    this.creditsByCreditCategories.add(creditsByCreditCategoriesItem);
    return this;
  }

   /**
   * An unordered collection of graduationPlanCreditsByCreditCategories. The total credits required for graduation based on the credit category.
   * @return creditsByCreditCategories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of graduationPlanCreditsByCreditCategories. The total credits required for graduation based on the credit category.")

  public List<EdFiGraduationPlanCreditsByCreditCategory> getCreditsByCreditCategories() {
    return creditsByCreditCategories;
  }


  public void setCreditsByCreditCategories(List<EdFiGraduationPlanCreditsByCreditCategory> creditsByCreditCategories) {
    this.creditsByCreditCategories = creditsByCreditCategories;
  }


  public EdFiGraduationPlan creditsBySubjects(List<EdFiGraduationPlanCreditsBySubject> creditsBySubjects) {
    
    this.creditsBySubjects = creditsBySubjects;
    return this;
  }

  public EdFiGraduationPlan addCreditsBySubjectsItem(EdFiGraduationPlanCreditsBySubject creditsBySubjectsItem) {
    if (this.creditsBySubjects == null) {
      this.creditsBySubjects = new ArrayList<EdFiGraduationPlanCreditsBySubject>();
    }
    this.creditsBySubjects.add(creditsBySubjectsItem);
    return this;
  }

   /**
   * An unordered collection of graduationPlanCreditsBySubjects. The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.
   * @return creditsBySubjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of graduationPlanCreditsBySubjects. The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.")

  public List<EdFiGraduationPlanCreditsBySubject> getCreditsBySubjects() {
    return creditsBySubjects;
  }


  public void setCreditsBySubjects(List<EdFiGraduationPlanCreditsBySubject> creditsBySubjects) {
    this.creditsBySubjects = creditsBySubjects;
  }


  public EdFiGraduationPlan individualPlan(Boolean individualPlan) {
    
    this.individualPlan = individualPlan;
    return this;
  }

   /**
   * An indicator of whether the GraduationPlan is tailored for an individual.
   * @return individualPlan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indicator of whether the GraduationPlan is tailored for an individual.")

  public Boolean getIndividualPlan() {
    return individualPlan;
  }


  public void setIndividualPlan(Boolean individualPlan) {
    this.individualPlan = individualPlan;
  }


  public EdFiGraduationPlan requiredAssessments(List<EdFiGraduationPlanRequiredAssessment> requiredAssessments) {
    
    this.requiredAssessments = requiredAssessments;
    return this;
  }

  public EdFiGraduationPlan addRequiredAssessmentsItem(EdFiGraduationPlanRequiredAssessment requiredAssessmentsItem) {
    if (this.requiredAssessments == null) {
      this.requiredAssessments = new ArrayList<EdFiGraduationPlanRequiredAssessment>();
    }
    this.requiredAssessments.add(requiredAssessmentsItem);
    return this;
  }

   /**
   * An unordered collection of graduationPlanRequiredAssessments. The assessments and associated required score and performance level needed to satisfy graduation requirements.
   * @return requiredAssessments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of graduationPlanRequiredAssessments. The assessments and associated required score and performance level needed to satisfy graduation requirements.")

  public List<EdFiGraduationPlanRequiredAssessment> getRequiredAssessments() {
    return requiredAssessments;
  }


  public void setRequiredAssessments(List<EdFiGraduationPlanRequiredAssessment> requiredAssessments) {
    this.requiredAssessments = requiredAssessments;
  }


  public EdFiGraduationPlan totalRequiredCreditConversion(Double totalRequiredCreditConversion) {
    
    this.totalRequiredCreditConversion = totalRequiredCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return totalRequiredCreditConversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")

  public Double getTotalRequiredCreditConversion() {
    return totalRequiredCreditConversion;
  }


  public void setTotalRequiredCreditConversion(Double totalRequiredCreditConversion) {
    this.totalRequiredCreditConversion = totalRequiredCreditConversion;
  }


  public EdFiGraduationPlan totalRequiredCredits(Double totalRequiredCredits) {
    
    this.totalRequiredCredits = totalRequiredCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return totalRequiredCredits
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The value of credits or units of value awarded for the completion of a course.")

  public Double getTotalRequiredCredits() {
    return totalRequiredCredits;
  }


  public void setTotalRequiredCredits(Double totalRequiredCredits) {
    this.totalRequiredCredits = totalRequiredCredits;
  }


  public EdFiGraduationPlan totalRequiredCreditTypeDescriptor(String totalRequiredCreditTypeDescriptor) {
    
    this.totalRequiredCreditTypeDescriptor = totalRequiredCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return totalRequiredCreditTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of credits or units of value awarded for the completion of a course.")

  public String getTotalRequiredCreditTypeDescriptor() {
    return totalRequiredCreditTypeDescriptor;
  }


  public void setTotalRequiredCreditTypeDescriptor(String totalRequiredCreditTypeDescriptor) {
    this.totalRequiredCreditTypeDescriptor = totalRequiredCreditTypeDescriptor;
  }


  public EdFiGraduationPlan etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  public EdFiGraduationPlan ext(GraduationPlanExtensions ext) {
    
    this.ext = ext;
    return this;
  }

   /**
   * Get ext
   * @return ext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GraduationPlanExtensions getExt() {
    return ext;
  }


  public void setExt(GraduationPlanExtensions ext) {
    this.ext = ext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiGraduationPlan edFiGraduationPlan = (EdFiGraduationPlan) o;
    return Objects.equals(this.id, edFiGraduationPlan.id) &&
        Objects.equals(this.graduationPlanTypeDescriptor, edFiGraduationPlan.graduationPlanTypeDescriptor) &&
        Objects.equals(this.educationOrganizationReference, edFiGraduationPlan.educationOrganizationReference) &&
        Objects.equals(this.graduationSchoolYearTypeReference, edFiGraduationPlan.graduationSchoolYearTypeReference) &&
        Objects.equals(this.creditsByCourses, edFiGraduationPlan.creditsByCourses) &&
        Objects.equals(this.creditsByCreditCategories, edFiGraduationPlan.creditsByCreditCategories) &&
        Objects.equals(this.creditsBySubjects, edFiGraduationPlan.creditsBySubjects) &&
        Objects.equals(this.individualPlan, edFiGraduationPlan.individualPlan) &&
        Objects.equals(this.requiredAssessments, edFiGraduationPlan.requiredAssessments) &&
        Objects.equals(this.totalRequiredCreditConversion, edFiGraduationPlan.totalRequiredCreditConversion) &&
        Objects.equals(this.totalRequiredCredits, edFiGraduationPlan.totalRequiredCredits) &&
        Objects.equals(this.totalRequiredCreditTypeDescriptor, edFiGraduationPlan.totalRequiredCreditTypeDescriptor) &&
        Objects.equals(this.etag, edFiGraduationPlan.etag) &&
        Objects.equals(this.ext, edFiGraduationPlan.ext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, graduationPlanTypeDescriptor, educationOrganizationReference, graduationSchoolYearTypeReference, creditsByCourses, creditsByCreditCategories, creditsBySubjects, individualPlan, requiredAssessments, totalRequiredCreditConversion, totalRequiredCredits, totalRequiredCreditTypeDescriptor, etag, ext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiGraduationPlan {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    graduationPlanTypeDescriptor: ").append(toIndentedString(graduationPlanTypeDescriptor)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    graduationSchoolYearTypeReference: ").append(toIndentedString(graduationSchoolYearTypeReference)).append("\n");
    sb.append("    creditsByCourses: ").append(toIndentedString(creditsByCourses)).append("\n");
    sb.append("    creditsByCreditCategories: ").append(toIndentedString(creditsByCreditCategories)).append("\n");
    sb.append("    creditsBySubjects: ").append(toIndentedString(creditsBySubjects)).append("\n");
    sb.append("    individualPlan: ").append(toIndentedString(individualPlan)).append("\n");
    sb.append("    requiredAssessments: ").append(toIndentedString(requiredAssessments)).append("\n");
    sb.append("    totalRequiredCreditConversion: ").append(toIndentedString(totalRequiredCreditConversion)).append("\n");
    sb.append("    totalRequiredCredits: ").append(toIndentedString(totalRequiredCredits)).append("\n");
    sb.append("    totalRequiredCreditTypeDescriptor: ").append(toIndentedString(totalRequiredCreditTypeDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

