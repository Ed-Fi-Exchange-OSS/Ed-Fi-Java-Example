/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiEducationOrganizationReference;
import Models.Resources.EdFiGradingPeriodReference;
import Models.Resources.EdFiReportCardGrade;
import Models.Resources.EdFiReportCardGradePointAverage;
import Models.Resources.EdFiReportCardStudentCompetencyObjective;
import Models.Resources.EdFiReportCardStudentLearningObjective;
import Models.Resources.EdFiStudentReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EdFiReportCard
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiReportCard {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE = "educationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference educationOrganizationReference;

  public static final String SERIALIZED_NAME_GRADING_PERIOD_REFERENCE = "gradingPeriodReference";
  @SerializedName(SERIALIZED_NAME_GRADING_PERIOD_REFERENCE)
  private EdFiGradingPeriodReference gradingPeriodReference;

  public static final String SERIALIZED_NAME_STUDENT_REFERENCE = "studentReference";
  @SerializedName(SERIALIZED_NAME_STUDENT_REFERENCE)
  private EdFiStudentReference studentReference;

  public static final String SERIALIZED_NAME_GPA_CUMULATIVE = "gpaCumulative";
  @SerializedName(SERIALIZED_NAME_GPA_CUMULATIVE)
  private Double gpaCumulative;

  public static final String SERIALIZED_NAME_GPA_GIVEN_GRADING_PERIOD = "gpaGivenGradingPeriod";
  @SerializedName(SERIALIZED_NAME_GPA_GIVEN_GRADING_PERIOD)
  private Double gpaGivenGradingPeriod;

  public static final String SERIALIZED_NAME_GRADE_POINT_AVERAGES = "gradePointAverages";
  @SerializedName(SERIALIZED_NAME_GRADE_POINT_AVERAGES)
  private List<EdFiReportCardGradePointAverage> gradePointAverages = null;

  public static final String SERIALIZED_NAME_GRADES = "grades";
  @SerializedName(SERIALIZED_NAME_GRADES)
  private List<EdFiReportCardGrade> grades = null;

  public static final String SERIALIZED_NAME_NUMBER_OF_DAYS_ABSENT = "numberOfDaysAbsent";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_DAYS_ABSENT)
  private Double numberOfDaysAbsent;

  public static final String SERIALIZED_NAME_NUMBER_OF_DAYS_IN_ATTENDANCE = "numberOfDaysInAttendance";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_DAYS_IN_ATTENDANCE)
  private Double numberOfDaysInAttendance;

  public static final String SERIALIZED_NAME_NUMBER_OF_DAYS_TARDY = "numberOfDaysTardy";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_DAYS_TARDY)
  private Integer numberOfDaysTardy;

  public static final String SERIALIZED_NAME_STUDENT_COMPETENCY_OBJECTIVES = "studentCompetencyObjectives";
  @SerializedName(SERIALIZED_NAME_STUDENT_COMPETENCY_OBJECTIVES)
  private List<EdFiReportCardStudentCompetencyObjective> studentCompetencyObjectives = null;

  public static final String SERIALIZED_NAME_STUDENT_LEARNING_OBJECTIVES = "studentLearningObjectives";
  @SerializedName(SERIALIZED_NAME_STUDENT_LEARNING_OBJECTIVES)
  private List<EdFiReportCardStudentLearningObjective> studentLearningObjectives = null;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiReportCard() { 
  }

  public EdFiReportCard id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiReportCard educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }


  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }


  public EdFiReportCard gradingPeriodReference(EdFiGradingPeriodReference gradingPeriodReference) {
    
    this.gradingPeriodReference = gradingPeriodReference;
    return this;
  }

   /**
   * Get gradingPeriodReference
   * @return gradingPeriodReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiGradingPeriodReference getGradingPeriodReference() {
    return gradingPeriodReference;
  }


  public void setGradingPeriodReference(EdFiGradingPeriodReference gradingPeriodReference) {
    this.gradingPeriodReference = gradingPeriodReference;
  }


  public EdFiReportCard studentReference(EdFiStudentReference studentReference) {
    
    this.studentReference = studentReference;
    return this;
  }

   /**
   * Get studentReference
   * @return studentReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStudentReference getStudentReference() {
    return studentReference;
  }


  public void setStudentReference(EdFiStudentReference studentReference) {
    this.studentReference = studentReference;
  }


  public EdFiReportCard gpaCumulative(Double gpaCumulative) {
    
    this.gpaCumulative = gpaCumulative;
    return this;
  }

   /**
   * A measure of cumulative average performance in all courses taken by an individual from the beginning of the school year through the current grading period.
   * @return gpaCumulative
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A measure of cumulative average performance in all courses taken by an individual from the beginning of the school year through the current grading period.")

  public Double getGpaCumulative() {
    return gpaCumulative;
  }


  public void setGpaCumulative(Double gpaCumulative) {
    this.gpaCumulative = gpaCumulative;
  }


  public EdFiReportCard gpaGivenGradingPeriod(Double gpaGivenGradingPeriod) {
    
    this.gpaGivenGradingPeriod = gpaGivenGradingPeriod;
    return this;
  }

   /**
   * A measure of average performance in all courses taken by an individual for the current grading period.
   * @return gpaGivenGradingPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A measure of average performance in all courses taken by an individual for the current grading period.")

  public Double getGpaGivenGradingPeriod() {
    return gpaGivenGradingPeriod;
  }


  public void setGpaGivenGradingPeriod(Double gpaGivenGradingPeriod) {
    this.gpaGivenGradingPeriod = gpaGivenGradingPeriod;
  }


  public EdFiReportCard gradePointAverages(List<EdFiReportCardGradePointAverage> gradePointAverages) {
    
    this.gradePointAverages = gradePointAverages;
    return this;
  }

  public EdFiReportCard addGradePointAveragesItem(EdFiReportCardGradePointAverage gradePointAveragesItem) {
    if (this.gradePointAverages == null) {
      this.gradePointAverages = new ArrayList<EdFiReportCardGradePointAverage>();
    }
    this.gradePointAverages.add(gradePointAveragesItem);
    return this;
  }

   /**
   * An unordered collection of reportCardGradePointAverages. A measure of average performance for courses taken by an individual.
   * @return gradePointAverages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of reportCardGradePointAverages. A measure of average performance for courses taken by an individual.")

  public List<EdFiReportCardGradePointAverage> getGradePointAverages() {
    return gradePointAverages;
  }


  public void setGradePointAverages(List<EdFiReportCardGradePointAverage> gradePointAverages) {
    this.gradePointAverages = gradePointAverages;
  }


  public EdFiReportCard grades(List<EdFiReportCardGrade> grades) {
    
    this.grades = grades;
    return this;
  }

  public EdFiReportCard addGradesItem(EdFiReportCardGrade gradesItem) {
    if (this.grades == null) {
      this.grades = new ArrayList<EdFiReportCardGrade>();
    }
    this.grades.add(gradesItem);
    return this;
  }

   /**
   * An unordered collection of reportCardGrades. Grades for the classes attended by the Student for this grading period.
   * @return grades
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of reportCardGrades. Grades for the classes attended by the Student for this grading period.")

  public List<EdFiReportCardGrade> getGrades() {
    return grades;
  }


  public void setGrades(List<EdFiReportCardGrade> grades) {
    this.grades = grades;
  }


  public EdFiReportCard numberOfDaysAbsent(Double numberOfDaysAbsent) {
    
    this.numberOfDaysAbsent = numberOfDaysAbsent;
    return this;
  }

   /**
   * The number of days an individual is absent when school is in session during a given reporting period.
   * @return numberOfDaysAbsent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days an individual is absent when school is in session during a given reporting period.")

  public Double getNumberOfDaysAbsent() {
    return numberOfDaysAbsent;
  }


  public void setNumberOfDaysAbsent(Double numberOfDaysAbsent) {
    this.numberOfDaysAbsent = numberOfDaysAbsent;
  }


  public EdFiReportCard numberOfDaysInAttendance(Double numberOfDaysInAttendance) {
    
    this.numberOfDaysInAttendance = numberOfDaysInAttendance;
    return this;
  }

   /**
   * The number of days an individual is present when school is in session during a given reporting period.
   * @return numberOfDaysInAttendance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days an individual is present when school is in session during a given reporting period.")

  public Double getNumberOfDaysInAttendance() {
    return numberOfDaysInAttendance;
  }


  public void setNumberOfDaysInAttendance(Double numberOfDaysInAttendance) {
    this.numberOfDaysInAttendance = numberOfDaysInAttendance;
  }


  public EdFiReportCard numberOfDaysTardy(Integer numberOfDaysTardy) {
    
    this.numberOfDaysTardy = numberOfDaysTardy;
    return this;
  }

   /**
   * The number of days an individual is tardy during a given reporting period.
   * @return numberOfDaysTardy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days an individual is tardy during a given reporting period.")

  public Integer getNumberOfDaysTardy() {
    return numberOfDaysTardy;
  }


  public void setNumberOfDaysTardy(Integer numberOfDaysTardy) {
    this.numberOfDaysTardy = numberOfDaysTardy;
  }


  public EdFiReportCard studentCompetencyObjectives(List<EdFiReportCardStudentCompetencyObjective> studentCompetencyObjectives) {
    
    this.studentCompetencyObjectives = studentCompetencyObjectives;
    return this;
  }

  public EdFiReportCard addStudentCompetencyObjectivesItem(EdFiReportCardStudentCompetencyObjective studentCompetencyObjectivesItem) {
    if (this.studentCompetencyObjectives == null) {
      this.studentCompetencyObjectives = new ArrayList<EdFiReportCardStudentCompetencyObjective>();
    }
    this.studentCompetencyObjectives.add(studentCompetencyObjectivesItem);
    return this;
  }

   /**
   * An unordered collection of reportCardStudentCompetencyObjectives. The Student competency evaluations associated for this grading period.
   * @return studentCompetencyObjectives
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of reportCardStudentCompetencyObjectives. The Student competency evaluations associated for this grading period.")

  public List<EdFiReportCardStudentCompetencyObjective> getStudentCompetencyObjectives() {
    return studentCompetencyObjectives;
  }


  public void setStudentCompetencyObjectives(List<EdFiReportCardStudentCompetencyObjective> studentCompetencyObjectives) {
    this.studentCompetencyObjectives = studentCompetencyObjectives;
  }


  public EdFiReportCard studentLearningObjectives(List<EdFiReportCardStudentLearningObjective> studentLearningObjectives) {
    
    this.studentLearningObjectives = studentLearningObjectives;
    return this;
  }

  public EdFiReportCard addStudentLearningObjectivesItem(EdFiReportCardStudentLearningObjective studentLearningObjectivesItem) {
    if (this.studentLearningObjectives == null) {
      this.studentLearningObjectives = new ArrayList<EdFiReportCardStudentLearningObjective>();
    }
    this.studentLearningObjectives.add(studentLearningObjectivesItem);
    return this;
  }

   /**
   * An unordered collection of reportCardStudentLearningObjectives. The StudentLearningObjective evaluations associated for this grading period.
   * @return studentLearningObjectives
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of reportCardStudentLearningObjectives. The StudentLearningObjective evaluations associated for this grading period.")

  public List<EdFiReportCardStudentLearningObjective> getStudentLearningObjectives() {
    return studentLearningObjectives;
  }


  public void setStudentLearningObjectives(List<EdFiReportCardStudentLearningObjective> studentLearningObjectives) {
    this.studentLearningObjectives = studentLearningObjectives;
  }


  public EdFiReportCard etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiReportCard edFiReportCard = (EdFiReportCard) o;
    return Objects.equals(this.id, edFiReportCard.id) &&
        Objects.equals(this.educationOrganizationReference, edFiReportCard.educationOrganizationReference) &&
        Objects.equals(this.gradingPeriodReference, edFiReportCard.gradingPeriodReference) &&
        Objects.equals(this.studentReference, edFiReportCard.studentReference) &&
        Objects.equals(this.gpaCumulative, edFiReportCard.gpaCumulative) &&
        Objects.equals(this.gpaGivenGradingPeriod, edFiReportCard.gpaGivenGradingPeriod) &&
        Objects.equals(this.gradePointAverages, edFiReportCard.gradePointAverages) &&
        Objects.equals(this.grades, edFiReportCard.grades) &&
        Objects.equals(this.numberOfDaysAbsent, edFiReportCard.numberOfDaysAbsent) &&
        Objects.equals(this.numberOfDaysInAttendance, edFiReportCard.numberOfDaysInAttendance) &&
        Objects.equals(this.numberOfDaysTardy, edFiReportCard.numberOfDaysTardy) &&
        Objects.equals(this.studentCompetencyObjectives, edFiReportCard.studentCompetencyObjectives) &&
        Objects.equals(this.studentLearningObjectives, edFiReportCard.studentLearningObjectives) &&
        Objects.equals(this.etag, edFiReportCard.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, educationOrganizationReference, gradingPeriodReference, studentReference, gpaCumulative, gpaGivenGradingPeriod, gradePointAverages, grades, numberOfDaysAbsent, numberOfDaysInAttendance, numberOfDaysTardy, studentCompetencyObjectives, studentLearningObjectives, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiReportCard {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    gradingPeriodReference: ").append(toIndentedString(gradingPeriodReference)).append("\n");
    sb.append("    studentReference: ").append(toIndentedString(studentReference)).append("\n");
    sb.append("    gpaCumulative: ").append(toIndentedString(gpaCumulative)).append("\n");
    sb.append("    gpaGivenGradingPeriod: ").append(toIndentedString(gpaGivenGradingPeriod)).append("\n");
    sb.append("    gradePointAverages: ").append(toIndentedString(gradePointAverages)).append("\n");
    sb.append("    grades: ").append(toIndentedString(grades)).append("\n");
    sb.append("    numberOfDaysAbsent: ").append(toIndentedString(numberOfDaysAbsent)).append("\n");
    sb.append("    numberOfDaysInAttendance: ").append(toIndentedString(numberOfDaysInAttendance)).append("\n");
    sb.append("    numberOfDaysTardy: ").append(toIndentedString(numberOfDaysTardy)).append("\n");
    sb.append("    studentCompetencyObjectives: ").append(toIndentedString(studentCompetencyObjectives)).append("\n");
    sb.append("    studentLearningObjectives: ").append(toIndentedString(studentLearningObjectives)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

