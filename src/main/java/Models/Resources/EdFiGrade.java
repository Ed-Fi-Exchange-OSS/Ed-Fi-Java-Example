/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiGradeLearningStandardGrade;
import Models.Resources.EdFiGradingPeriodReference;
import Models.Resources.EdFiStudentSectionAssociationReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EdFiGrade
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiGrade {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_GRADE_TYPE_DESCRIPTOR = "gradeTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_GRADE_TYPE_DESCRIPTOR)
  private String gradeTypeDescriptor;

  public static final String SERIALIZED_NAME_GRADING_PERIOD_REFERENCE = "gradingPeriodReference";
  @SerializedName(SERIALIZED_NAME_GRADING_PERIOD_REFERENCE)
  private EdFiGradingPeriodReference gradingPeriodReference;

  public static final String SERIALIZED_NAME_STUDENT_SECTION_ASSOCIATION_REFERENCE = "studentSectionAssociationReference";
  @SerializedName(SERIALIZED_NAME_STUDENT_SECTION_ASSOCIATION_REFERENCE)
  private EdFiStudentSectionAssociationReference studentSectionAssociationReference;

  public static final String SERIALIZED_NAME_DIAGNOSTIC_STATEMENT = "diagnosticStatement";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTIC_STATEMENT)
  private String diagnosticStatement;

  public static final String SERIALIZED_NAME_LEARNING_STANDARD_GRADES = "learningStandardGrades";
  @SerializedName(SERIALIZED_NAME_LEARNING_STANDARD_GRADES)
  private List<EdFiGradeLearningStandardGrade> learningStandardGrades = null;

  public static final String SERIALIZED_NAME_LETTER_GRADE_EARNED = "letterGradeEarned";
  @SerializedName(SERIALIZED_NAME_LETTER_GRADE_EARNED)
  private String letterGradeEarned;

  public static final String SERIALIZED_NAME_NUMERIC_GRADE_EARNED = "numericGradeEarned";
  @SerializedName(SERIALIZED_NAME_NUMERIC_GRADE_EARNED)
  private Double numericGradeEarned;

  public static final String SERIALIZED_NAME_PERFORMANCE_BASE_CONVERSION_DESCRIPTOR = "performanceBaseConversionDescriptor";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_BASE_CONVERSION_DESCRIPTOR)
  private String performanceBaseConversionDescriptor;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiGrade() { 
  }

  public EdFiGrade id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiGrade gradeTypeDescriptor(String gradeTypeDescriptor) {
    
    this.gradeTypeDescriptor = gradeTypeDescriptor;
    return this;
  }

   /**
   * The type of grade reported (e.g., Exam, Final, Grading Period).
   * @return gradeTypeDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of grade reported (e.g., Exam, Final, Grading Period).")

  public String getGradeTypeDescriptor() {
    return gradeTypeDescriptor;
  }


  public void setGradeTypeDescriptor(String gradeTypeDescriptor) {
    this.gradeTypeDescriptor = gradeTypeDescriptor;
  }


  public EdFiGrade gradingPeriodReference(EdFiGradingPeriodReference gradingPeriodReference) {
    
    this.gradingPeriodReference = gradingPeriodReference;
    return this;
  }

   /**
   * Get gradingPeriodReference
   * @return gradingPeriodReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiGradingPeriodReference getGradingPeriodReference() {
    return gradingPeriodReference;
  }


  public void setGradingPeriodReference(EdFiGradingPeriodReference gradingPeriodReference) {
    this.gradingPeriodReference = gradingPeriodReference;
  }


  public EdFiGrade studentSectionAssociationReference(EdFiStudentSectionAssociationReference studentSectionAssociationReference) {
    
    this.studentSectionAssociationReference = studentSectionAssociationReference;
    return this;
  }

   /**
   * Get studentSectionAssociationReference
   * @return studentSectionAssociationReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStudentSectionAssociationReference getStudentSectionAssociationReference() {
    return studentSectionAssociationReference;
  }


  public void setStudentSectionAssociationReference(EdFiStudentSectionAssociationReference studentSectionAssociationReference) {
    this.studentSectionAssociationReference = studentSectionAssociationReference;
  }


  public EdFiGrade diagnosticStatement(String diagnosticStatement) {
    
    this.diagnosticStatement = diagnosticStatement;
    return this;
  }

   /**
   * A statement provided by the teacher that provides information in addition to the grade or assessment score.
   * @return diagnosticStatement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A statement provided by the teacher that provides information in addition to the grade or assessment score.")

  public String getDiagnosticStatement() {
    return diagnosticStatement;
  }


  public void setDiagnosticStatement(String diagnosticStatement) {
    this.diagnosticStatement = diagnosticStatement;
  }


  public EdFiGrade learningStandardGrades(List<EdFiGradeLearningStandardGrade> learningStandardGrades) {
    
    this.learningStandardGrades = learningStandardGrades;
    return this;
  }

  public EdFiGrade addLearningStandardGradesItem(EdFiGradeLearningStandardGrade learningStandardGradesItem) {
    if (this.learningStandardGrades == null) {
      this.learningStandardGrades = new ArrayList<EdFiGradeLearningStandardGrade>();
    }
    this.learningStandardGrades.add(learningStandardGradesItem);
    return this;
  }

   /**
   * An unordered collection of gradeLearningStandardGrades. A collection of learning standards associated with the grade.
   * @return learningStandardGrades
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of gradeLearningStandardGrades. A collection of learning standards associated with the grade.")

  public List<EdFiGradeLearningStandardGrade> getLearningStandardGrades() {
    return learningStandardGrades;
  }


  public void setLearningStandardGrades(List<EdFiGradeLearningStandardGrade> learningStandardGrades) {
    this.learningStandardGrades = learningStandardGrades;
  }


  public EdFiGrade letterGradeEarned(String letterGradeEarned) {
    
    this.letterGradeEarned = letterGradeEarned;
    return this;
  }

   /**
   * A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
   * @return letterGradeEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.")

  public String getLetterGradeEarned() {
    return letterGradeEarned;
  }


  public void setLetterGradeEarned(String letterGradeEarned) {
    this.letterGradeEarned = letterGradeEarned;
  }


  public EdFiGrade numericGradeEarned(Double numericGradeEarned) {
    
    this.numericGradeEarned = numericGradeEarned;
    return this;
  }

   /**
   * A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
   * @return numericGradeEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.")

  public Double getNumericGradeEarned() {
    return numericGradeEarned;
  }


  public void setNumericGradeEarned(Double numericGradeEarned) {
    this.numericGradeEarned = numericGradeEarned;
  }


  public EdFiGrade performanceBaseConversionDescriptor(String performanceBaseConversionDescriptor) {
    
    this.performanceBaseConversionDescriptor = performanceBaseConversionDescriptor;
    return this;
  }

   /**
   * A conversion of the level to a standard set of performance levels.
   * @return performanceBaseConversionDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A conversion of the level to a standard set of performance levels.")

  public String getPerformanceBaseConversionDescriptor() {
    return performanceBaseConversionDescriptor;
  }


  public void setPerformanceBaseConversionDescriptor(String performanceBaseConversionDescriptor) {
    this.performanceBaseConversionDescriptor = performanceBaseConversionDescriptor;
  }


  public EdFiGrade etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiGrade edFiGrade = (EdFiGrade) o;
    return Objects.equals(this.id, edFiGrade.id) &&
        Objects.equals(this.gradeTypeDescriptor, edFiGrade.gradeTypeDescriptor) &&
        Objects.equals(this.gradingPeriodReference, edFiGrade.gradingPeriodReference) &&
        Objects.equals(this.studentSectionAssociationReference, edFiGrade.studentSectionAssociationReference) &&
        Objects.equals(this.diagnosticStatement, edFiGrade.diagnosticStatement) &&
        Objects.equals(this.learningStandardGrades, edFiGrade.learningStandardGrades) &&
        Objects.equals(this.letterGradeEarned, edFiGrade.letterGradeEarned) &&
        Objects.equals(this.numericGradeEarned, edFiGrade.numericGradeEarned) &&
        Objects.equals(this.performanceBaseConversionDescriptor, edFiGrade.performanceBaseConversionDescriptor) &&
        Objects.equals(this.etag, edFiGrade.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, gradeTypeDescriptor, gradingPeriodReference, studentSectionAssociationReference, diagnosticStatement, learningStandardGrades, letterGradeEarned, numericGradeEarned, performanceBaseConversionDescriptor, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiGrade {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    gradeTypeDescriptor: ").append(toIndentedString(gradeTypeDescriptor)).append("\n");
    sb.append("    gradingPeriodReference: ").append(toIndentedString(gradingPeriodReference)).append("\n");
    sb.append("    studentSectionAssociationReference: ").append(toIndentedString(studentSectionAssociationReference)).append("\n");
    sb.append("    diagnosticStatement: ").append(toIndentedString(diagnosticStatement)).append("\n");
    sb.append("    learningStandardGrades: ").append(toIndentedString(learningStandardGrades)).append("\n");
    sb.append("    letterGradeEarned: ").append(toIndentedString(letterGradeEarned)).append("\n");
    sb.append("    numericGradeEarned: ").append(toIndentedString(numericGradeEarned)).append("\n");
    sb.append("    performanceBaseConversionDescriptor: ").append(toIndentedString(performanceBaseConversionDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

