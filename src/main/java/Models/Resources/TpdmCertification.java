/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiEducationOrganizationReference;
import Models.Resources.TpdmCertificationCertificationExam;
import Models.Resources.TpdmCertificationGradeLevel;
import Models.Resources.TpdmCertificationRoute;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * TpdmCertification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class TpdmCertification {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CERTIFICATION_IDENTIFIER = "certificationIdentifier";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_IDENTIFIER)
  private String certificationIdentifier;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE = "educationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference educationOrganizationReference;

  public static final String SERIALIZED_NAME_CERTIFICATION_EXAMS = "certificationExams";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_EXAMS)
  private List<TpdmCertificationCertificationExam> certificationExams = null;

  public static final String SERIALIZED_NAME_CERTIFICATION_FIELD_DESCRIPTOR = "certificationFieldDescriptor";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_FIELD_DESCRIPTOR)
  private String certificationFieldDescriptor;

  public static final String SERIALIZED_NAME_CERTIFICATION_LEVEL_DESCRIPTOR = "certificationLevelDescriptor";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_LEVEL_DESCRIPTOR)
  private String certificationLevelDescriptor;

  public static final String SERIALIZED_NAME_CERTIFICATION_STANDARD_DESCRIPTOR = "certificationStandardDescriptor";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_STANDARD_DESCRIPTOR)
  private String certificationStandardDescriptor;

  public static final String SERIALIZED_NAME_CERTIFICATION_TITLE = "certificationTitle";
  @SerializedName(SERIALIZED_NAME_CERTIFICATION_TITLE)
  private String certificationTitle;

  public static final String SERIALIZED_NAME_EDUCATOR_ROLE_DESCRIPTOR = "educatorRoleDescriptor";
  @SerializedName(SERIALIZED_NAME_EDUCATOR_ROLE_DESCRIPTOR)
  private String educatorRoleDescriptor;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "effectiveDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private LocalDate effectiveDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_GRADE_LEVELS = "gradeLevels";
  @SerializedName(SERIALIZED_NAME_GRADE_LEVELS)
  private List<TpdmCertificationGradeLevel> gradeLevels = null;

  public static final String SERIALIZED_NAME_INSTRUCTIONAL_SETTING_DESCRIPTOR = "instructionalSettingDescriptor";
  @SerializedName(SERIALIZED_NAME_INSTRUCTIONAL_SETTING_DESCRIPTOR)
  private String instructionalSettingDescriptor;

  public static final String SERIALIZED_NAME_MINIMUM_DEGREE_DESCRIPTOR = "minimumDegreeDescriptor";
  @SerializedName(SERIALIZED_NAME_MINIMUM_DEGREE_DESCRIPTOR)
  private String minimumDegreeDescriptor;

  public static final String SERIALIZED_NAME_POPULATION_SERVED_DESCRIPTOR = "populationServedDescriptor";
  @SerializedName(SERIALIZED_NAME_POPULATION_SERVED_DESCRIPTOR)
  private String populationServedDescriptor;

  public static final String SERIALIZED_NAME_ROUTES = "routes";
  @SerializedName(SERIALIZED_NAME_ROUTES)
  private List<TpdmCertificationRoute> routes = null;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public TpdmCertification() { 
  }

  public TpdmCertification id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public TpdmCertification certificationIdentifier(String certificationIdentifier) {
    
    this.certificationIdentifier = certificationIdentifier;
    return this;
  }

   /**
   * Identifier or serial number assigned to the Certification.
   * @return certificationIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Identifier or serial number assigned to the Certification.")

  public String getCertificationIdentifier() {
    return certificationIdentifier;
  }


  public void setCertificationIdentifier(String certificationIdentifier) {
    this.certificationIdentifier = certificationIdentifier;
  }


  public TpdmCertification namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace for the Certification, typically associated with the issuing authority.
   * @return namespace
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Namespace for the Certification, typically associated with the issuing authority.")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public TpdmCertification educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }


  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }


  public TpdmCertification certificationExams(List<TpdmCertificationCertificationExam> certificationExams) {
    
    this.certificationExams = certificationExams;
    return this;
  }

  public TpdmCertification addCertificationExamsItem(TpdmCertificationCertificationExam certificationExamsItem) {
    if (this.certificationExams == null) {
      this.certificationExams = new ArrayList<TpdmCertificationCertificationExam>();
    }
    this.certificationExams.add(certificationExamsItem);
    return this;
  }

   /**
   * An unordered collection of certificationCertificationExams. The Certification Eams required for the Certification.
   * @return certificationExams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of certificationCertificationExams. The Certification Eams required for the Certification.")

  public List<TpdmCertificationCertificationExam> getCertificationExams() {
    return certificationExams;
  }


  public void setCertificationExams(List<TpdmCertificationCertificationExam> certificationExams) {
    this.certificationExams = certificationExams;
  }


  public TpdmCertification certificationFieldDescriptor(String certificationFieldDescriptor) {
    
    this.certificationFieldDescriptor = certificationFieldDescriptor;
    return this;
  }

   /**
   * The field of certification (e.g., Mathematics, Music).
   * @return certificationFieldDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The field of certification (e.g., Mathematics, Music).")

  public String getCertificationFieldDescriptor() {
    return certificationFieldDescriptor;
  }


  public void setCertificationFieldDescriptor(String certificationFieldDescriptor) {
    this.certificationFieldDescriptor = certificationFieldDescriptor;
  }


  public TpdmCertification certificationLevelDescriptor(String certificationLevelDescriptor) {
    
    this.certificationLevelDescriptor = certificationLevelDescriptor;
    return this;
  }

   /**
   * The level (e.g., Elementary, Secondary) or category (administrative, specialist) of the Certification.
   * @return certificationLevelDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The level (e.g., Elementary, Secondary) or category (administrative, specialist) of the Certification.")

  public String getCertificationLevelDescriptor() {
    return certificationLevelDescriptor;
  }


  public void setCertificationLevelDescriptor(String certificationLevelDescriptor) {
    this.certificationLevelDescriptor = certificationLevelDescriptor;
  }


  public TpdmCertification certificationStandardDescriptor(String certificationStandardDescriptor) {
    
    this.certificationStandardDescriptor = certificationStandardDescriptor;
    return this;
  }

   /**
   * The standard, law or policy defining the certification.
   * @return certificationStandardDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The standard, law or policy defining the certification.")

  public String getCertificationStandardDescriptor() {
    return certificationStandardDescriptor;
  }


  public void setCertificationStandardDescriptor(String certificationStandardDescriptor) {
    this.certificationStandardDescriptor = certificationStandardDescriptor;
  }


  public TpdmCertification certificationTitle(String certificationTitle) {
    
    this.certificationTitle = certificationTitle;
    return this;
  }

   /**
   * The title of the Certification.
   * @return certificationTitle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The title of the Certification.")

  public String getCertificationTitle() {
    return certificationTitle;
  }


  public void setCertificationTitle(String certificationTitle) {
    this.certificationTitle = certificationTitle;
  }


  public TpdmCertification educatorRoleDescriptor(String educatorRoleDescriptor) {
    
    this.educatorRoleDescriptor = educatorRoleDescriptor;
    return this;
  }

   /**
   * The role authorized by the Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.
   * @return educatorRoleDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The role authorized by the Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.")

  public String getEducatorRoleDescriptor() {
    return educatorRoleDescriptor;
  }


  public void setEducatorRoleDescriptor(String educatorRoleDescriptor) {
    this.educatorRoleDescriptor = educatorRoleDescriptor;
  }


  public TpdmCertification effectiveDate(LocalDate effectiveDate) {
    
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * The year, month and day on which the Certification is offered.
   * @return effectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The year, month and day on which the Certification is offered.")

  public LocalDate getEffectiveDate() {
    return effectiveDate;
  }


  public void setEffectiveDate(LocalDate effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public TpdmCertification endDate(LocalDate endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The month, day, and year on which the Certification offering is expected to end.
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The month, day, and year on which the Certification offering is expected to end.")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  public TpdmCertification gradeLevels(List<TpdmCertificationGradeLevel> gradeLevels) {
    
    this.gradeLevels = gradeLevels;
    return this;
  }

  public TpdmCertification addGradeLevelsItem(TpdmCertificationGradeLevel gradeLevelsItem) {
    if (this.gradeLevels == null) {
      this.gradeLevels = new ArrayList<TpdmCertificationGradeLevel>();
    }
    this.gradeLevels.add(gradeLevelsItem);
    return this;
  }

   /**
   * An unordered collection of certificationGradeLevels. The grade level(s) certified for teaching.
   * @return gradeLevels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of certificationGradeLevels. The grade level(s) certified for teaching.")

  public List<TpdmCertificationGradeLevel> getGradeLevels() {
    return gradeLevels;
  }


  public void setGradeLevels(List<TpdmCertificationGradeLevel> gradeLevels) {
    this.gradeLevels = gradeLevels;
  }


  public TpdmCertification instructionalSettingDescriptor(String instructionalSettingDescriptor) {
    
    this.instructionalSettingDescriptor = instructionalSettingDescriptor;
    return this;
  }

   /**
   * The setting authorized by the Certification in which a child receives education and related services; for example: Classroom, Virtual, Vocational.
   * @return instructionalSettingDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The setting authorized by the Certification in which a child receives education and related services; for example: Classroom, Virtual, Vocational.")

  public String getInstructionalSettingDescriptor() {
    return instructionalSettingDescriptor;
  }


  public void setInstructionalSettingDescriptor(String instructionalSettingDescriptor) {
    this.instructionalSettingDescriptor = instructionalSettingDescriptor;
  }


  public TpdmCertification minimumDegreeDescriptor(String minimumDegreeDescriptor) {
    
    this.minimumDegreeDescriptor = minimumDegreeDescriptor;
    return this;
  }

   /**
   * The minimum level of degree, if any, required for Certification.
   * @return minimumDegreeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minimum level of degree, if any, required for Certification.")

  public String getMinimumDegreeDescriptor() {
    return minimumDegreeDescriptor;
  }


  public void setMinimumDegreeDescriptor(String minimumDegreeDescriptor) {
    this.minimumDegreeDescriptor = minimumDegreeDescriptor;
  }


  public TpdmCertification populationServedDescriptor(String populationServedDescriptor) {
    
    this.populationServedDescriptor = populationServedDescriptor;
    return this;
  }

   /**
   * The type of students the Section is offered and tailored to; for example: Bilingual students, Remedial education students, Gifted and talented students, Career and Technical Education students, Special education students.
   * @return populationServedDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of students the Section is offered and tailored to; for example: Bilingual students, Remedial education students, Gifted and talented students, Career and Technical Education students, Special education students.")

  public String getPopulationServedDescriptor() {
    return populationServedDescriptor;
  }


  public void setPopulationServedDescriptor(String populationServedDescriptor) {
    this.populationServedDescriptor = populationServedDescriptor;
  }


  public TpdmCertification routes(List<TpdmCertificationRoute> routes) {
    
    this.routes = routes;
    return this;
  }

  public TpdmCertification addRoutesItem(TpdmCertificationRoute routesItem) {
    if (this.routes == null) {
      this.routes = new ArrayList<TpdmCertificationRoute>();
    }
    this.routes.add(routesItem);
    return this;
  }

   /**
   * An unordered collection of certificationRoutes. The process, program ,or pathway used to obtain certification.
   * @return routes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of certificationRoutes. The process, program ,or pathway used to obtain certification.")

  public List<TpdmCertificationRoute> getRoutes() {
    return routes;
  }


  public void setRoutes(List<TpdmCertificationRoute> routes) {
    this.routes = routes;
  }


  public TpdmCertification etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmCertification tpdmCertification = (TpdmCertification) o;
    return Objects.equals(this.id, tpdmCertification.id) &&
        Objects.equals(this.certificationIdentifier, tpdmCertification.certificationIdentifier) &&
        Objects.equals(this.namespace, tpdmCertification.namespace) &&
        Objects.equals(this.educationOrganizationReference, tpdmCertification.educationOrganizationReference) &&
        Objects.equals(this.certificationExams, tpdmCertification.certificationExams) &&
        Objects.equals(this.certificationFieldDescriptor, tpdmCertification.certificationFieldDescriptor) &&
        Objects.equals(this.certificationLevelDescriptor, tpdmCertification.certificationLevelDescriptor) &&
        Objects.equals(this.certificationStandardDescriptor, tpdmCertification.certificationStandardDescriptor) &&
        Objects.equals(this.certificationTitle, tpdmCertification.certificationTitle) &&
        Objects.equals(this.educatorRoleDescriptor, tpdmCertification.educatorRoleDescriptor) &&
        Objects.equals(this.effectiveDate, tpdmCertification.effectiveDate) &&
        Objects.equals(this.endDate, tpdmCertification.endDate) &&
        Objects.equals(this.gradeLevels, tpdmCertification.gradeLevels) &&
        Objects.equals(this.instructionalSettingDescriptor, tpdmCertification.instructionalSettingDescriptor) &&
        Objects.equals(this.minimumDegreeDescriptor, tpdmCertification.minimumDegreeDescriptor) &&
        Objects.equals(this.populationServedDescriptor, tpdmCertification.populationServedDescriptor) &&
        Objects.equals(this.routes, tpdmCertification.routes) &&
        Objects.equals(this.etag, tpdmCertification.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, certificationIdentifier, namespace, educationOrganizationReference, certificationExams, certificationFieldDescriptor, certificationLevelDescriptor, certificationStandardDescriptor, certificationTitle, educatorRoleDescriptor, effectiveDate, endDate, gradeLevels, instructionalSettingDescriptor, minimumDegreeDescriptor, populationServedDescriptor, routes, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmCertification {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    certificationIdentifier: ").append(toIndentedString(certificationIdentifier)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    certificationExams: ").append(toIndentedString(certificationExams)).append("\n");
    sb.append("    certificationFieldDescriptor: ").append(toIndentedString(certificationFieldDescriptor)).append("\n");
    sb.append("    certificationLevelDescriptor: ").append(toIndentedString(certificationLevelDescriptor)).append("\n");
    sb.append("    certificationStandardDescriptor: ").append(toIndentedString(certificationStandardDescriptor)).append("\n");
    sb.append("    certificationTitle: ").append(toIndentedString(certificationTitle)).append("\n");
    sb.append("    educatorRoleDescriptor: ").append(toIndentedString(educatorRoleDescriptor)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    gradeLevels: ").append(toIndentedString(gradeLevels)).append("\n");
    sb.append("    instructionalSettingDescriptor: ").append(toIndentedString(instructionalSettingDescriptor)).append("\n");
    sb.append("    minimumDegreeDescriptor: ").append(toIndentedString(minimumDegreeDescriptor)).append("\n");
    sb.append("    populationServedDescriptor: ").append(toIndentedString(populationServedDescriptor)).append("\n");
    sb.append("    routes: ").append(toIndentedString(routes)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

