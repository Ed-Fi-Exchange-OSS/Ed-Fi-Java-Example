/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.TpdmCandidateAddressPeriod;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TpdmCandidateAddress
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class TpdmCandidateAddress {
  public static final String SERIALIZED_NAME_ADDRESS_TYPE_DESCRIPTOR = "addressTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_ADDRESS_TYPE_DESCRIPTOR)
  private String addressTypeDescriptor;

  public static final String SERIALIZED_NAME_STATE_ABBREVIATION_DESCRIPTOR = "stateAbbreviationDescriptor";
  @SerializedName(SERIALIZED_NAME_STATE_ABBREVIATION_DESCRIPTOR)
  private String stateAbbreviationDescriptor;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_STREET_NUMBER_NAME = "streetNumberName";
  @SerializedName(SERIALIZED_NAME_STREET_NUMBER_NAME)
  private String streetNumberName;

  public static final String SERIALIZED_NAME_LOCALE_DESCRIPTOR = "localeDescriptor";
  @SerializedName(SERIALIZED_NAME_LOCALE_DESCRIPTOR)
  private String localeDescriptor;

  public static final String SERIALIZED_NAME_APARTMENT_ROOM_SUITE_NUMBER = "apartmentRoomSuiteNumber";
  @SerializedName(SERIALIZED_NAME_APARTMENT_ROOM_SUITE_NUMBER)
  private String apartmentRoomSuiteNumber;

  public static final String SERIALIZED_NAME_BUILDING_SITE_NUMBER = "buildingSiteNumber";
  @SerializedName(SERIALIZED_NAME_BUILDING_SITE_NUMBER)
  private String buildingSiteNumber;

  public static final String SERIALIZED_NAME_CONGRESSIONAL_DISTRICT = "congressionalDistrict";
  @SerializedName(SERIALIZED_NAME_CONGRESSIONAL_DISTRICT)
  private String congressionalDistrict;

  public static final String SERIALIZED_NAME_COUNTY_F_I_P_S_CODE = "countyFIPSCode";
  @SerializedName(SERIALIZED_NAME_COUNTY_F_I_P_S_CODE)
  private String countyFIPSCode;

  public static final String SERIALIZED_NAME_DO_NOT_PUBLISH_INDICATOR = "doNotPublishIndicator";
  @SerializedName(SERIALIZED_NAME_DO_NOT_PUBLISH_INDICATOR)
  private Boolean doNotPublishIndicator;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public static final String SERIALIZED_NAME_NAME_OF_COUNTY = "nameOfCounty";
  @SerializedName(SERIALIZED_NAME_NAME_OF_COUNTY)
  private String nameOfCounty;

  public static final String SERIALIZED_NAME_PERIODS = "periods";
  @SerializedName(SERIALIZED_NAME_PERIODS)
  private List<TpdmCandidateAddressPeriod> periods = null;

  public TpdmCandidateAddress() { 
  }

  public TpdmCandidateAddress addressTypeDescriptor(String addressTypeDescriptor) {
    
    this.addressTypeDescriptor = addressTypeDescriptor;
    return this;
  }

   /**
   * The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)
   * @return addressTypeDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)")

  public String getAddressTypeDescriptor() {
    return addressTypeDescriptor;
  }


  public void setAddressTypeDescriptor(String addressTypeDescriptor) {
    this.addressTypeDescriptor = addressTypeDescriptor;
  }


  public TpdmCandidateAddress stateAbbreviationDescriptor(String stateAbbreviationDescriptor) {
    
    this.stateAbbreviationDescriptor = stateAbbreviationDescriptor;
    return this;
  }

   /**
   * The abbreviation for the state (within the United States) or outlying area in which an address is located.
   * @return stateAbbreviationDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The abbreviation for the state (within the United States) or outlying area in which an address is located.")

  public String getStateAbbreviationDescriptor() {
    return stateAbbreviationDescriptor;
  }


  public void setStateAbbreviationDescriptor(String stateAbbreviationDescriptor) {
    this.stateAbbreviationDescriptor = stateAbbreviationDescriptor;
  }


  public TpdmCandidateAddress city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * The name of the city in which an address is located.
   * @return city
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the city in which an address is located.")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public TpdmCandidateAddress postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The five or nine digit zip code or overseas postal code portion of an address.
   * @return postalCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The five or nine digit zip code or overseas postal code portion of an address.")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public TpdmCandidateAddress streetNumberName(String streetNumberName) {
    
    this.streetNumberName = streetNumberName;
    return this;
  }

   /**
   * The street number and street name or post office box number of an address.
   * @return streetNumberName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The street number and street name or post office box number of an address.")

  public String getStreetNumberName() {
    return streetNumberName;
  }


  public void setStreetNumberName(String streetNumberName) {
    this.streetNumberName = streetNumberName;
  }


  public TpdmCandidateAddress localeDescriptor(String localeDescriptor) {
    
    this.localeDescriptor = localeDescriptor;
    return this;
  }

   /**
   * A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).
   * @return localeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).")

  public String getLocaleDescriptor() {
    return localeDescriptor;
  }


  public void setLocaleDescriptor(String localeDescriptor) {
    this.localeDescriptor = localeDescriptor;
  }


  public TpdmCandidateAddress apartmentRoomSuiteNumber(String apartmentRoomSuiteNumber) {
    
    this.apartmentRoomSuiteNumber = apartmentRoomSuiteNumber;
    return this;
  }

   /**
   * The apartment, room, or suite number of an address.
   * @return apartmentRoomSuiteNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The apartment, room, or suite number of an address.")

  public String getApartmentRoomSuiteNumber() {
    return apartmentRoomSuiteNumber;
  }


  public void setApartmentRoomSuiteNumber(String apartmentRoomSuiteNumber) {
    this.apartmentRoomSuiteNumber = apartmentRoomSuiteNumber;
  }


  public TpdmCandidateAddress buildingSiteNumber(String buildingSiteNumber) {
    
    this.buildingSiteNumber = buildingSiteNumber;
    return this;
  }

   /**
   * The number of the building on the site, if more than one building shares the same address.
   * @return buildingSiteNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of the building on the site, if more than one building shares the same address.")

  public String getBuildingSiteNumber() {
    return buildingSiteNumber;
  }


  public void setBuildingSiteNumber(String buildingSiteNumber) {
    this.buildingSiteNumber = buildingSiteNumber;
  }


  public TpdmCandidateAddress congressionalDistrict(String congressionalDistrict) {
    
    this.congressionalDistrict = congressionalDistrict;
    return this;
  }

   /**
   * The congressional district in which an address is located.
   * @return congressionalDistrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The congressional district in which an address is located.")

  public String getCongressionalDistrict() {
    return congressionalDistrict;
  }


  public void setCongressionalDistrict(String congressionalDistrict) {
    this.congressionalDistrict = congressionalDistrict;
  }


  public TpdmCandidateAddress countyFIPSCode(String countyFIPSCode) {
    
    this.countyFIPSCode = countyFIPSCode;
    return this;
  }

   /**
   * The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \&quot;first-order subdivisions\&quot; of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.
   * @return countyFIPSCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.")

  public String getCountyFIPSCode() {
    return countyFIPSCode;
  }


  public void setCountyFIPSCode(String countyFIPSCode) {
    this.countyFIPSCode = countyFIPSCode;
  }


  public TpdmCandidateAddress doNotPublishIndicator(Boolean doNotPublishIndicator) {
    
    this.doNotPublishIndicator = doNotPublishIndicator;
    return this;
  }

   /**
   * An indication that the address should not be published.
   * @return doNotPublishIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication that the address should not be published.")

  public Boolean getDoNotPublishIndicator() {
    return doNotPublishIndicator;
  }


  public void setDoNotPublishIndicator(Boolean doNotPublishIndicator) {
    this.doNotPublishIndicator = doNotPublishIndicator;
  }


  public TpdmCandidateAddress latitude(String latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * The geographic latitude of the physical address.
   * @return latitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The geographic latitude of the physical address.")

  public String getLatitude() {
    return latitude;
  }


  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }


  public TpdmCandidateAddress longitude(String longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * The geographic longitude of the physical address.
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The geographic longitude of the physical address.")

  public String getLongitude() {
    return longitude;
  }


  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }


  public TpdmCandidateAddress nameOfCounty(String nameOfCounty) {
    
    this.nameOfCounty = nameOfCounty;
    return this;
  }

   /**
   * The name of the county, parish, borough, or comparable unit (within a state) in                      &#39;which an address is located.
   * @return nameOfCounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the county, parish, borough, or comparable unit (within a state) in                      'which an address is located.")

  public String getNameOfCounty() {
    return nameOfCounty;
  }


  public void setNameOfCounty(String nameOfCounty) {
    this.nameOfCounty = nameOfCounty;
  }


  public TpdmCandidateAddress periods(List<TpdmCandidateAddressPeriod> periods) {
    
    this.periods = periods;
    return this;
  }

  public TpdmCandidateAddress addPeriodsItem(TpdmCandidateAddressPeriod periodsItem) {
    if (this.periods == null) {
      this.periods = new ArrayList<TpdmCandidateAddressPeriod>();
    }
    this.periods.add(periodsItem);
    return this;
  }

   /**
   * An unordered collection of candidateAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.
   * @return periods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of candidateAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.")

  public List<TpdmCandidateAddressPeriod> getPeriods() {
    return periods;
  }


  public void setPeriods(List<TpdmCandidateAddressPeriod> periods) {
    this.periods = periods;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmCandidateAddress tpdmCandidateAddress = (TpdmCandidateAddress) o;
    return Objects.equals(this.addressTypeDescriptor, tpdmCandidateAddress.addressTypeDescriptor) &&
        Objects.equals(this.stateAbbreviationDescriptor, tpdmCandidateAddress.stateAbbreviationDescriptor) &&
        Objects.equals(this.city, tpdmCandidateAddress.city) &&
        Objects.equals(this.postalCode, tpdmCandidateAddress.postalCode) &&
        Objects.equals(this.streetNumberName, tpdmCandidateAddress.streetNumberName) &&
        Objects.equals(this.localeDescriptor, tpdmCandidateAddress.localeDescriptor) &&
        Objects.equals(this.apartmentRoomSuiteNumber, tpdmCandidateAddress.apartmentRoomSuiteNumber) &&
        Objects.equals(this.buildingSiteNumber, tpdmCandidateAddress.buildingSiteNumber) &&
        Objects.equals(this.congressionalDistrict, tpdmCandidateAddress.congressionalDistrict) &&
        Objects.equals(this.countyFIPSCode, tpdmCandidateAddress.countyFIPSCode) &&
        Objects.equals(this.doNotPublishIndicator, tpdmCandidateAddress.doNotPublishIndicator) &&
        Objects.equals(this.latitude, tpdmCandidateAddress.latitude) &&
        Objects.equals(this.longitude, tpdmCandidateAddress.longitude) &&
        Objects.equals(this.nameOfCounty, tpdmCandidateAddress.nameOfCounty) &&
        Objects.equals(this.periods, tpdmCandidateAddress.periods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressTypeDescriptor, stateAbbreviationDescriptor, city, postalCode, streetNumberName, localeDescriptor, apartmentRoomSuiteNumber, buildingSiteNumber, congressionalDistrict, countyFIPSCode, doNotPublishIndicator, latitude, longitude, nameOfCounty, periods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmCandidateAddress {\n");
    sb.append("    addressTypeDescriptor: ").append(toIndentedString(addressTypeDescriptor)).append("\n");
    sb.append("    stateAbbreviationDescriptor: ").append(toIndentedString(stateAbbreviationDescriptor)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    streetNumberName: ").append(toIndentedString(streetNumberName)).append("\n");
    sb.append("    localeDescriptor: ").append(toIndentedString(localeDescriptor)).append("\n");
    sb.append("    apartmentRoomSuiteNumber: ").append(toIndentedString(apartmentRoomSuiteNumber)).append("\n");
    sb.append("    buildingSiteNumber: ").append(toIndentedString(buildingSiteNumber)).append("\n");
    sb.append("    congressionalDistrict: ").append(toIndentedString(congressionalDistrict)).append("\n");
    sb.append("    countyFIPSCode: ").append(toIndentedString(countyFIPSCode)).append("\n");
    sb.append("    doNotPublishIndicator: ").append(toIndentedString(doNotPublishIndicator)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    nameOfCounty: ").append(toIndentedString(nameOfCounty)).append("\n");
    sb.append("    periods: ").append(toIndentedString(periods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

