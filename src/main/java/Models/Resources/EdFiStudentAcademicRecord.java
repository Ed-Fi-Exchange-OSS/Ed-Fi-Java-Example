/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiEducationOrganizationReference;
import Models.Resources.EdFiSchoolYearTypeReference;
import Models.Resources.EdFiStudentAcademicRecordAcademicHonor;
import Models.Resources.EdFiStudentAcademicRecordClassRanking;
import Models.Resources.EdFiStudentAcademicRecordDiploma;
import Models.Resources.EdFiStudentAcademicRecordGradePointAverage;
import Models.Resources.EdFiStudentAcademicRecordRecognition;
import Models.Resources.EdFiStudentAcademicRecordReportCard;
import Models.Resources.EdFiStudentReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * EdFiStudentAcademicRecord
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiStudentAcademicRecord {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TERM_DESCRIPTOR = "termDescriptor";
  @SerializedName(SERIALIZED_NAME_TERM_DESCRIPTOR)
  private String termDescriptor;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE = "educationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference educationOrganizationReference;

  public static final String SERIALIZED_NAME_SCHOOL_YEAR_TYPE_REFERENCE = "schoolYearTypeReference";
  @SerializedName(SERIALIZED_NAME_SCHOOL_YEAR_TYPE_REFERENCE)
  private EdFiSchoolYearTypeReference schoolYearTypeReference;

  public static final String SERIALIZED_NAME_STUDENT_REFERENCE = "studentReference";
  @SerializedName(SERIALIZED_NAME_STUDENT_REFERENCE)
  private EdFiStudentReference studentReference;

  public static final String SERIALIZED_NAME_ACADEMIC_HONORS = "academicHonors";
  @SerializedName(SERIALIZED_NAME_ACADEMIC_HONORS)
  private List<EdFiStudentAcademicRecordAcademicHonor> academicHonors = null;

  public static final String SERIALIZED_NAME_CLASS_RANKING = "classRanking";
  @SerializedName(SERIALIZED_NAME_CLASS_RANKING)
  private EdFiStudentAcademicRecordClassRanking classRanking;

  public static final String SERIALIZED_NAME_CUMULATIVE_ATTEMPTED_CREDIT_CONVERSION = "cumulativeAttemptedCreditConversion";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_ATTEMPTED_CREDIT_CONVERSION)
  private Double cumulativeAttemptedCreditConversion;

  public static final String SERIALIZED_NAME_CUMULATIVE_ATTEMPTED_CREDITS = "cumulativeAttemptedCredits";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_ATTEMPTED_CREDITS)
  private Double cumulativeAttemptedCredits;

  public static final String SERIALIZED_NAME_CUMULATIVE_ATTEMPTED_CREDIT_TYPE_DESCRIPTOR = "cumulativeAttemptedCreditTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_ATTEMPTED_CREDIT_TYPE_DESCRIPTOR)
  private String cumulativeAttemptedCreditTypeDescriptor;

  public static final String SERIALIZED_NAME_CUMULATIVE_EARNED_CREDIT_CONVERSION = "cumulativeEarnedCreditConversion";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_EARNED_CREDIT_CONVERSION)
  private Double cumulativeEarnedCreditConversion;

  public static final String SERIALIZED_NAME_CUMULATIVE_EARNED_CREDITS = "cumulativeEarnedCredits";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_EARNED_CREDITS)
  private Double cumulativeEarnedCredits;

  public static final String SERIALIZED_NAME_CUMULATIVE_EARNED_CREDIT_TYPE_DESCRIPTOR = "cumulativeEarnedCreditTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_EARNED_CREDIT_TYPE_DESCRIPTOR)
  private String cumulativeEarnedCreditTypeDescriptor;

  public static final String SERIALIZED_NAME_CUMULATIVE_GRADE_POINT_AVERAGE = "cumulativeGradePointAverage";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_GRADE_POINT_AVERAGE)
  private Double cumulativeGradePointAverage;

  public static final String SERIALIZED_NAME_CUMULATIVE_GRADE_POINTS_EARNED = "cumulativeGradePointsEarned";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_GRADE_POINTS_EARNED)
  private Double cumulativeGradePointsEarned;

  public static final String SERIALIZED_NAME_DIPLOMAS = "diplomas";
  @SerializedName(SERIALIZED_NAME_DIPLOMAS)
  private List<EdFiStudentAcademicRecordDiploma> diplomas = null;

  public static final String SERIALIZED_NAME_GRADE_POINT_AVERAGES = "gradePointAverages";
  @SerializedName(SERIALIZED_NAME_GRADE_POINT_AVERAGES)
  private List<EdFiStudentAcademicRecordGradePointAverage> gradePointAverages = null;

  public static final String SERIALIZED_NAME_GRADE_VALUE_QUALIFIER = "gradeValueQualifier";
  @SerializedName(SERIALIZED_NAME_GRADE_VALUE_QUALIFIER)
  private String gradeValueQualifier;

  public static final String SERIALIZED_NAME_PROJECTED_GRADUATION_DATE = "projectedGraduationDate";
  @SerializedName(SERIALIZED_NAME_PROJECTED_GRADUATION_DATE)
  private LocalDate projectedGraduationDate;

  public static final String SERIALIZED_NAME_RECOGNITIONS = "recognitions";
  @SerializedName(SERIALIZED_NAME_RECOGNITIONS)
  private List<EdFiStudentAcademicRecordRecognition> recognitions = null;

  public static final String SERIALIZED_NAME_REPORT_CARDS = "reportCards";
  @SerializedName(SERIALIZED_NAME_REPORT_CARDS)
  private List<EdFiStudentAcademicRecordReportCard> reportCards = null;

  public static final String SERIALIZED_NAME_SESSION_ATTEMPTED_CREDIT_CONVERSION = "sessionAttemptedCreditConversion";
  @SerializedName(SERIALIZED_NAME_SESSION_ATTEMPTED_CREDIT_CONVERSION)
  private Double sessionAttemptedCreditConversion;

  public static final String SERIALIZED_NAME_SESSION_ATTEMPTED_CREDITS = "sessionAttemptedCredits";
  @SerializedName(SERIALIZED_NAME_SESSION_ATTEMPTED_CREDITS)
  private Double sessionAttemptedCredits;

  public static final String SERIALIZED_NAME_SESSION_ATTEMPTED_CREDIT_TYPE_DESCRIPTOR = "sessionAttemptedCreditTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_SESSION_ATTEMPTED_CREDIT_TYPE_DESCRIPTOR)
  private String sessionAttemptedCreditTypeDescriptor;

  public static final String SERIALIZED_NAME_SESSION_EARNED_CREDIT_CONVERSION = "sessionEarnedCreditConversion";
  @SerializedName(SERIALIZED_NAME_SESSION_EARNED_CREDIT_CONVERSION)
  private Double sessionEarnedCreditConversion;

  public static final String SERIALIZED_NAME_SESSION_EARNED_CREDITS = "sessionEarnedCredits";
  @SerializedName(SERIALIZED_NAME_SESSION_EARNED_CREDITS)
  private Double sessionEarnedCredits;

  public static final String SERIALIZED_NAME_SESSION_EARNED_CREDIT_TYPE_DESCRIPTOR = "sessionEarnedCreditTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_SESSION_EARNED_CREDIT_TYPE_DESCRIPTOR)
  private String sessionEarnedCreditTypeDescriptor;

  public static final String SERIALIZED_NAME_SESSION_GRADE_POINT_AVERAGE = "sessionGradePointAverage";
  @SerializedName(SERIALIZED_NAME_SESSION_GRADE_POINT_AVERAGE)
  private Double sessionGradePointAverage;

  public static final String SERIALIZED_NAME_SESSION_GRADE_POINTS_EARNED = "sessionGradePointsEarned";
  @SerializedName(SERIALIZED_NAME_SESSION_GRADE_POINTS_EARNED)
  private Double sessionGradePointsEarned;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiStudentAcademicRecord() { 
  }

  public EdFiStudentAcademicRecord id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiStudentAcademicRecord termDescriptor(String termDescriptor) {
    
    this.termDescriptor = termDescriptor;
    return this;
  }

   /**
   * The term for the session during the school year.
   * @return termDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The term for the session during the school year.")

  public String getTermDescriptor() {
    return termDescriptor;
  }


  public void setTermDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
  }


  public EdFiStudentAcademicRecord educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }


  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }


  public EdFiStudentAcademicRecord schoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    
    this.schoolYearTypeReference = schoolYearTypeReference;
    return this;
  }

   /**
   * Get schoolYearTypeReference
   * @return schoolYearTypeReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiSchoolYearTypeReference getSchoolYearTypeReference() {
    return schoolYearTypeReference;
  }


  public void setSchoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    this.schoolYearTypeReference = schoolYearTypeReference;
  }


  public EdFiStudentAcademicRecord studentReference(EdFiStudentReference studentReference) {
    
    this.studentReference = studentReference;
    return this;
  }

   /**
   * Get studentReference
   * @return studentReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStudentReference getStudentReference() {
    return studentReference;
  }


  public void setStudentReference(EdFiStudentReference studentReference) {
    this.studentReference = studentReference;
  }


  public EdFiStudentAcademicRecord academicHonors(List<EdFiStudentAcademicRecordAcademicHonor> academicHonors) {
    
    this.academicHonors = academicHonors;
    return this;
  }

  public EdFiStudentAcademicRecord addAcademicHonorsItem(EdFiStudentAcademicRecordAcademicHonor academicHonorsItem) {
    if (this.academicHonors == null) {
      this.academicHonors = new ArrayList<EdFiStudentAcademicRecordAcademicHonor>();
    }
    this.academicHonors.add(academicHonorsItem);
    return this;
  }

   /**
   * An unordered collection of studentAcademicRecordAcademicHonors. Academic distinctions earned by or awarded to the student.
   * @return academicHonors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of studentAcademicRecordAcademicHonors. Academic distinctions earned by or awarded to the student.")

  public List<EdFiStudentAcademicRecordAcademicHonor> getAcademicHonors() {
    return academicHonors;
  }


  public void setAcademicHonors(List<EdFiStudentAcademicRecordAcademicHonor> academicHonors) {
    this.academicHonors = academicHonors;
  }


  public EdFiStudentAcademicRecord classRanking(EdFiStudentAcademicRecordClassRanking classRanking) {
    
    this.classRanking = classRanking;
    return this;
  }

   /**
   * Get classRanking
   * @return classRanking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiStudentAcademicRecordClassRanking getClassRanking() {
    return classRanking;
  }


  public void setClassRanking(EdFiStudentAcademicRecordClassRanking classRanking) {
    this.classRanking = classRanking;
  }


  public EdFiStudentAcademicRecord cumulativeAttemptedCreditConversion(Double cumulativeAttemptedCreditConversion) {
    
    this.cumulativeAttemptedCreditConversion = cumulativeAttemptedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return cumulativeAttemptedCreditConversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")

  public Double getCumulativeAttemptedCreditConversion() {
    return cumulativeAttemptedCreditConversion;
  }


  public void setCumulativeAttemptedCreditConversion(Double cumulativeAttemptedCreditConversion) {
    this.cumulativeAttemptedCreditConversion = cumulativeAttemptedCreditConversion;
  }


  public EdFiStudentAcademicRecord cumulativeAttemptedCredits(Double cumulativeAttemptedCredits) {
    
    this.cumulativeAttemptedCredits = cumulativeAttemptedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return cumulativeAttemptedCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of credits or units of value awarded for the completion of a course.")

  public Double getCumulativeAttemptedCredits() {
    return cumulativeAttemptedCredits;
  }


  public void setCumulativeAttemptedCredits(Double cumulativeAttemptedCredits) {
    this.cumulativeAttemptedCredits = cumulativeAttemptedCredits;
  }


  public EdFiStudentAcademicRecord cumulativeAttemptedCreditTypeDescriptor(String cumulativeAttemptedCreditTypeDescriptor) {
    
    this.cumulativeAttemptedCreditTypeDescriptor = cumulativeAttemptedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return cumulativeAttemptedCreditTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of credits or units of value awarded for the completion of a course.")

  public String getCumulativeAttemptedCreditTypeDescriptor() {
    return cumulativeAttemptedCreditTypeDescriptor;
  }


  public void setCumulativeAttemptedCreditTypeDescriptor(String cumulativeAttemptedCreditTypeDescriptor) {
    this.cumulativeAttemptedCreditTypeDescriptor = cumulativeAttemptedCreditTypeDescriptor;
  }


  public EdFiStudentAcademicRecord cumulativeEarnedCreditConversion(Double cumulativeEarnedCreditConversion) {
    
    this.cumulativeEarnedCreditConversion = cumulativeEarnedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return cumulativeEarnedCreditConversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")

  public Double getCumulativeEarnedCreditConversion() {
    return cumulativeEarnedCreditConversion;
  }


  public void setCumulativeEarnedCreditConversion(Double cumulativeEarnedCreditConversion) {
    this.cumulativeEarnedCreditConversion = cumulativeEarnedCreditConversion;
  }


  public EdFiStudentAcademicRecord cumulativeEarnedCredits(Double cumulativeEarnedCredits) {
    
    this.cumulativeEarnedCredits = cumulativeEarnedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return cumulativeEarnedCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of credits or units of value awarded for the completion of a course.")

  public Double getCumulativeEarnedCredits() {
    return cumulativeEarnedCredits;
  }


  public void setCumulativeEarnedCredits(Double cumulativeEarnedCredits) {
    this.cumulativeEarnedCredits = cumulativeEarnedCredits;
  }


  public EdFiStudentAcademicRecord cumulativeEarnedCreditTypeDescriptor(String cumulativeEarnedCreditTypeDescriptor) {
    
    this.cumulativeEarnedCreditTypeDescriptor = cumulativeEarnedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return cumulativeEarnedCreditTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of credits or units of value awarded for the completion of a course.")

  public String getCumulativeEarnedCreditTypeDescriptor() {
    return cumulativeEarnedCreditTypeDescriptor;
  }


  public void setCumulativeEarnedCreditTypeDescriptor(String cumulativeEarnedCreditTypeDescriptor) {
    this.cumulativeEarnedCreditTypeDescriptor = cumulativeEarnedCreditTypeDescriptor;
  }


  public EdFiStudentAcademicRecord cumulativeGradePointAverage(Double cumulativeGradePointAverage) {
    
    this.cumulativeGradePointAverage = cumulativeGradePointAverage;
    return this;
  }

   /**
   * A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.
   * @return cumulativeGradePointAverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.")

  public Double getCumulativeGradePointAverage() {
    return cumulativeGradePointAverage;
  }


  public void setCumulativeGradePointAverage(Double cumulativeGradePointAverage) {
    this.cumulativeGradePointAverage = cumulativeGradePointAverage;
  }


  public EdFiStudentAcademicRecord cumulativeGradePointsEarned(Double cumulativeGradePointsEarned) {
    
    this.cumulativeGradePointsEarned = cumulativeGradePointsEarned;
    return this;
  }

   /**
   * The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.
   * @return cumulativeGradePointsEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.")

  public Double getCumulativeGradePointsEarned() {
    return cumulativeGradePointsEarned;
  }


  public void setCumulativeGradePointsEarned(Double cumulativeGradePointsEarned) {
    this.cumulativeGradePointsEarned = cumulativeGradePointsEarned;
  }


  public EdFiStudentAcademicRecord diplomas(List<EdFiStudentAcademicRecordDiploma> diplomas) {
    
    this.diplomas = diplomas;
    return this;
  }

  public EdFiStudentAcademicRecord addDiplomasItem(EdFiStudentAcademicRecordDiploma diplomasItem) {
    if (this.diplomas == null) {
      this.diplomas = new ArrayList<EdFiStudentAcademicRecordDiploma>();
    }
    this.diplomas.add(diplomasItem);
    return this;
  }

   /**
   * An unordered collection of studentAcademicRecordDiplomas. Diploma(s) earned by the student.
   * @return diplomas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of studentAcademicRecordDiplomas. Diploma(s) earned by the student.")

  public List<EdFiStudentAcademicRecordDiploma> getDiplomas() {
    return diplomas;
  }


  public void setDiplomas(List<EdFiStudentAcademicRecordDiploma> diplomas) {
    this.diplomas = diplomas;
  }


  public EdFiStudentAcademicRecord gradePointAverages(List<EdFiStudentAcademicRecordGradePointAverage> gradePointAverages) {
    
    this.gradePointAverages = gradePointAverages;
    return this;
  }

  public EdFiStudentAcademicRecord addGradePointAveragesItem(EdFiStudentAcademicRecordGradePointAverage gradePointAveragesItem) {
    if (this.gradePointAverages == null) {
      this.gradePointAverages = new ArrayList<EdFiStudentAcademicRecordGradePointAverage>();
    }
    this.gradePointAverages.add(gradePointAveragesItem);
    return this;
  }

   /**
   * An unordered collection of studentAcademicRecordGradePointAverages. The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.
   * @return gradePointAverages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of studentAcademicRecordGradePointAverages. The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.")

  public List<EdFiStudentAcademicRecordGradePointAverage> getGradePointAverages() {
    return gradePointAverages;
  }


  public void setGradePointAverages(List<EdFiStudentAcademicRecordGradePointAverage> gradePointAverages) {
    this.gradePointAverages = gradePointAverages;
  }


  public EdFiStudentAcademicRecord gradeValueQualifier(String gradeValueQualifier) {
    
    this.gradeValueQualifier = gradeValueQualifier;
    return this;
  }

   /**
   * The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student&#39;s Grade Point Average (A&#x3D;4, B&#x3D;3, C&#x3D;2, D&#x3D;1 in a four-point system) or letter equivalents for percentage grades (90-100%&#x3D;A, 80-90%&#x3D;B, etc.)
   * @return gradeValueQualifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student's Grade Point Average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.)")

  public String getGradeValueQualifier() {
    return gradeValueQualifier;
  }


  public void setGradeValueQualifier(String gradeValueQualifier) {
    this.gradeValueQualifier = gradeValueQualifier;
  }


  public EdFiStudentAcademicRecord projectedGraduationDate(LocalDate projectedGraduationDate) {
    
    this.projectedGraduationDate = projectedGraduationDate;
    return this;
  }

   /**
   * The month and year the student is projected to graduate.
   * @return projectedGraduationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The month and year the student is projected to graduate.")

  public LocalDate getProjectedGraduationDate() {
    return projectedGraduationDate;
  }


  public void setProjectedGraduationDate(LocalDate projectedGraduationDate) {
    this.projectedGraduationDate = projectedGraduationDate;
  }


  public EdFiStudentAcademicRecord recognitions(List<EdFiStudentAcademicRecordRecognition> recognitions) {
    
    this.recognitions = recognitions;
    return this;
  }

  public EdFiStudentAcademicRecord addRecognitionsItem(EdFiStudentAcademicRecordRecognition recognitionsItem) {
    if (this.recognitions == null) {
      this.recognitions = new ArrayList<EdFiStudentAcademicRecordRecognition>();
    }
    this.recognitions.add(recognitionsItem);
    return this;
  }

   /**
   * An unordered collection of studentAcademicRecordRecognitions. Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.
   * @return recognitions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of studentAcademicRecordRecognitions. Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.")

  public List<EdFiStudentAcademicRecordRecognition> getRecognitions() {
    return recognitions;
  }


  public void setRecognitions(List<EdFiStudentAcademicRecordRecognition> recognitions) {
    this.recognitions = recognitions;
  }


  public EdFiStudentAcademicRecord reportCards(List<EdFiStudentAcademicRecordReportCard> reportCards) {
    
    this.reportCards = reportCards;
    return this;
  }

  public EdFiStudentAcademicRecord addReportCardsItem(EdFiStudentAcademicRecordReportCard reportCardsItem) {
    if (this.reportCards == null) {
      this.reportCards = new ArrayList<EdFiStudentAcademicRecordReportCard>();
    }
    this.reportCards.add(reportCardsItem);
    return this;
  }

   /**
   * An unordered collection of studentAcademicRecordReportCards. Report cards for the student.
   * @return reportCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of studentAcademicRecordReportCards. Report cards for the student.")

  public List<EdFiStudentAcademicRecordReportCard> getReportCards() {
    return reportCards;
  }


  public void setReportCards(List<EdFiStudentAcademicRecordReportCard> reportCards) {
    this.reportCards = reportCards;
  }


  public EdFiStudentAcademicRecord sessionAttemptedCreditConversion(Double sessionAttemptedCreditConversion) {
    
    this.sessionAttemptedCreditConversion = sessionAttemptedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return sessionAttemptedCreditConversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")

  public Double getSessionAttemptedCreditConversion() {
    return sessionAttemptedCreditConversion;
  }


  public void setSessionAttemptedCreditConversion(Double sessionAttemptedCreditConversion) {
    this.sessionAttemptedCreditConversion = sessionAttemptedCreditConversion;
  }


  public EdFiStudentAcademicRecord sessionAttemptedCredits(Double sessionAttemptedCredits) {
    
    this.sessionAttemptedCredits = sessionAttemptedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return sessionAttemptedCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of credits or units of value awarded for the completion of a course.")

  public Double getSessionAttemptedCredits() {
    return sessionAttemptedCredits;
  }


  public void setSessionAttemptedCredits(Double sessionAttemptedCredits) {
    this.sessionAttemptedCredits = sessionAttemptedCredits;
  }


  public EdFiStudentAcademicRecord sessionAttemptedCreditTypeDescriptor(String sessionAttemptedCreditTypeDescriptor) {
    
    this.sessionAttemptedCreditTypeDescriptor = sessionAttemptedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return sessionAttemptedCreditTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of credits or units of value awarded for the completion of a course.")

  public String getSessionAttemptedCreditTypeDescriptor() {
    return sessionAttemptedCreditTypeDescriptor;
  }


  public void setSessionAttemptedCreditTypeDescriptor(String sessionAttemptedCreditTypeDescriptor) {
    this.sessionAttemptedCreditTypeDescriptor = sessionAttemptedCreditTypeDescriptor;
  }


  public EdFiStudentAcademicRecord sessionEarnedCreditConversion(Double sessionEarnedCreditConversion) {
    
    this.sessionEarnedCreditConversion = sessionEarnedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return sessionEarnedCreditConversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")

  public Double getSessionEarnedCreditConversion() {
    return sessionEarnedCreditConversion;
  }


  public void setSessionEarnedCreditConversion(Double sessionEarnedCreditConversion) {
    this.sessionEarnedCreditConversion = sessionEarnedCreditConversion;
  }


  public EdFiStudentAcademicRecord sessionEarnedCredits(Double sessionEarnedCredits) {
    
    this.sessionEarnedCredits = sessionEarnedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return sessionEarnedCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of credits or units of value awarded for the completion of a course.")

  public Double getSessionEarnedCredits() {
    return sessionEarnedCredits;
  }


  public void setSessionEarnedCredits(Double sessionEarnedCredits) {
    this.sessionEarnedCredits = sessionEarnedCredits;
  }


  public EdFiStudentAcademicRecord sessionEarnedCreditTypeDescriptor(String sessionEarnedCreditTypeDescriptor) {
    
    this.sessionEarnedCreditTypeDescriptor = sessionEarnedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return sessionEarnedCreditTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of credits or units of value awarded for the completion of a course.")

  public String getSessionEarnedCreditTypeDescriptor() {
    return sessionEarnedCreditTypeDescriptor;
  }


  public void setSessionEarnedCreditTypeDescriptor(String sessionEarnedCreditTypeDescriptor) {
    this.sessionEarnedCreditTypeDescriptor = sessionEarnedCreditTypeDescriptor;
  }


  public EdFiStudentAcademicRecord sessionGradePointAverage(Double sessionGradePointAverage) {
    
    this.sessionGradePointAverage = sessionGradePointAverage;
    return this;
  }

   /**
   * The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.
   * @return sessionGradePointAverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.")

  public Double getSessionGradePointAverage() {
    return sessionGradePointAverage;
  }


  public void setSessionGradePointAverage(Double sessionGradePointAverage) {
    this.sessionGradePointAverage = sessionGradePointAverage;
  }


  public EdFiStudentAcademicRecord sessionGradePointsEarned(Double sessionGradePointsEarned) {
    
    this.sessionGradePointsEarned = sessionGradePointsEarned;
    return this;
  }

   /**
   * The number of grade points an individual earned for this session.
   * @return sessionGradePointsEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of grade points an individual earned for this session.")

  public Double getSessionGradePointsEarned() {
    return sessionGradePointsEarned;
  }


  public void setSessionGradePointsEarned(Double sessionGradePointsEarned) {
    this.sessionGradePointsEarned = sessionGradePointsEarned;
  }


  public EdFiStudentAcademicRecord etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStudentAcademicRecord edFiStudentAcademicRecord = (EdFiStudentAcademicRecord) o;
    return Objects.equals(this.id, edFiStudentAcademicRecord.id) &&
        Objects.equals(this.termDescriptor, edFiStudentAcademicRecord.termDescriptor) &&
        Objects.equals(this.educationOrganizationReference, edFiStudentAcademicRecord.educationOrganizationReference) &&
        Objects.equals(this.schoolYearTypeReference, edFiStudentAcademicRecord.schoolYearTypeReference) &&
        Objects.equals(this.studentReference, edFiStudentAcademicRecord.studentReference) &&
        Objects.equals(this.academicHonors, edFiStudentAcademicRecord.academicHonors) &&
        Objects.equals(this.classRanking, edFiStudentAcademicRecord.classRanking) &&
        Objects.equals(this.cumulativeAttemptedCreditConversion, edFiStudentAcademicRecord.cumulativeAttemptedCreditConversion) &&
        Objects.equals(this.cumulativeAttemptedCredits, edFiStudentAcademicRecord.cumulativeAttemptedCredits) &&
        Objects.equals(this.cumulativeAttemptedCreditTypeDescriptor, edFiStudentAcademicRecord.cumulativeAttemptedCreditTypeDescriptor) &&
        Objects.equals(this.cumulativeEarnedCreditConversion, edFiStudentAcademicRecord.cumulativeEarnedCreditConversion) &&
        Objects.equals(this.cumulativeEarnedCredits, edFiStudentAcademicRecord.cumulativeEarnedCredits) &&
        Objects.equals(this.cumulativeEarnedCreditTypeDescriptor, edFiStudentAcademicRecord.cumulativeEarnedCreditTypeDescriptor) &&
        Objects.equals(this.cumulativeGradePointAverage, edFiStudentAcademicRecord.cumulativeGradePointAverage) &&
        Objects.equals(this.cumulativeGradePointsEarned, edFiStudentAcademicRecord.cumulativeGradePointsEarned) &&
        Objects.equals(this.diplomas, edFiStudentAcademicRecord.diplomas) &&
        Objects.equals(this.gradePointAverages, edFiStudentAcademicRecord.gradePointAverages) &&
        Objects.equals(this.gradeValueQualifier, edFiStudentAcademicRecord.gradeValueQualifier) &&
        Objects.equals(this.projectedGraduationDate, edFiStudentAcademicRecord.projectedGraduationDate) &&
        Objects.equals(this.recognitions, edFiStudentAcademicRecord.recognitions) &&
        Objects.equals(this.reportCards, edFiStudentAcademicRecord.reportCards) &&
        Objects.equals(this.sessionAttemptedCreditConversion, edFiStudentAcademicRecord.sessionAttemptedCreditConversion) &&
        Objects.equals(this.sessionAttemptedCredits, edFiStudentAcademicRecord.sessionAttemptedCredits) &&
        Objects.equals(this.sessionAttemptedCreditTypeDescriptor, edFiStudentAcademicRecord.sessionAttemptedCreditTypeDescriptor) &&
        Objects.equals(this.sessionEarnedCreditConversion, edFiStudentAcademicRecord.sessionEarnedCreditConversion) &&
        Objects.equals(this.sessionEarnedCredits, edFiStudentAcademicRecord.sessionEarnedCredits) &&
        Objects.equals(this.sessionEarnedCreditTypeDescriptor, edFiStudentAcademicRecord.sessionEarnedCreditTypeDescriptor) &&
        Objects.equals(this.sessionGradePointAverage, edFiStudentAcademicRecord.sessionGradePointAverage) &&
        Objects.equals(this.sessionGradePointsEarned, edFiStudentAcademicRecord.sessionGradePointsEarned) &&
        Objects.equals(this.etag, edFiStudentAcademicRecord.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, termDescriptor, educationOrganizationReference, schoolYearTypeReference, studentReference, academicHonors, classRanking, cumulativeAttemptedCreditConversion, cumulativeAttemptedCredits, cumulativeAttemptedCreditTypeDescriptor, cumulativeEarnedCreditConversion, cumulativeEarnedCredits, cumulativeEarnedCreditTypeDescriptor, cumulativeGradePointAverage, cumulativeGradePointsEarned, diplomas, gradePointAverages, gradeValueQualifier, projectedGraduationDate, recognitions, reportCards, sessionAttemptedCreditConversion, sessionAttemptedCredits, sessionAttemptedCreditTypeDescriptor, sessionEarnedCreditConversion, sessionEarnedCredits, sessionEarnedCreditTypeDescriptor, sessionGradePointAverage, sessionGradePointsEarned, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStudentAcademicRecord {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    termDescriptor: ").append(toIndentedString(termDescriptor)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    schoolYearTypeReference: ").append(toIndentedString(schoolYearTypeReference)).append("\n");
    sb.append("    studentReference: ").append(toIndentedString(studentReference)).append("\n");
    sb.append("    academicHonors: ").append(toIndentedString(academicHonors)).append("\n");
    sb.append("    classRanking: ").append(toIndentedString(classRanking)).append("\n");
    sb.append("    cumulativeAttemptedCreditConversion: ").append(toIndentedString(cumulativeAttemptedCreditConversion)).append("\n");
    sb.append("    cumulativeAttemptedCredits: ").append(toIndentedString(cumulativeAttemptedCredits)).append("\n");
    sb.append("    cumulativeAttemptedCreditTypeDescriptor: ").append(toIndentedString(cumulativeAttemptedCreditTypeDescriptor)).append("\n");
    sb.append("    cumulativeEarnedCreditConversion: ").append(toIndentedString(cumulativeEarnedCreditConversion)).append("\n");
    sb.append("    cumulativeEarnedCredits: ").append(toIndentedString(cumulativeEarnedCredits)).append("\n");
    sb.append("    cumulativeEarnedCreditTypeDescriptor: ").append(toIndentedString(cumulativeEarnedCreditTypeDescriptor)).append("\n");
    sb.append("    cumulativeGradePointAverage: ").append(toIndentedString(cumulativeGradePointAverage)).append("\n");
    sb.append("    cumulativeGradePointsEarned: ").append(toIndentedString(cumulativeGradePointsEarned)).append("\n");
    sb.append("    diplomas: ").append(toIndentedString(diplomas)).append("\n");
    sb.append("    gradePointAverages: ").append(toIndentedString(gradePointAverages)).append("\n");
    sb.append("    gradeValueQualifier: ").append(toIndentedString(gradeValueQualifier)).append("\n");
    sb.append("    projectedGraduationDate: ").append(toIndentedString(projectedGraduationDate)).append("\n");
    sb.append("    recognitions: ").append(toIndentedString(recognitions)).append("\n");
    sb.append("    reportCards: ").append(toIndentedString(reportCards)).append("\n");
    sb.append("    sessionAttemptedCreditConversion: ").append(toIndentedString(sessionAttemptedCreditConversion)).append("\n");
    sb.append("    sessionAttemptedCredits: ").append(toIndentedString(sessionAttemptedCredits)).append("\n");
    sb.append("    sessionAttemptedCreditTypeDescriptor: ").append(toIndentedString(sessionAttemptedCreditTypeDescriptor)).append("\n");
    sb.append("    sessionEarnedCreditConversion: ").append(toIndentedString(sessionEarnedCreditConversion)).append("\n");
    sb.append("    sessionEarnedCredits: ").append(toIndentedString(sessionEarnedCredits)).append("\n");
    sb.append("    sessionEarnedCreditTypeDescriptor: ").append(toIndentedString(sessionEarnedCreditTypeDescriptor)).append("\n");
    sb.append("    sessionGradePointAverage: ").append(toIndentedString(sessionGradePointAverage)).append("\n");
    sb.append("    sessionGradePointsEarned: ").append(toIndentedString(sessionGradePointsEarned)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

