/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EdFiReportCardGradePointAverage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiReportCardGradePointAverage {
  public static final String SERIALIZED_NAME_GRADE_POINT_AVERAGE_TYPE_DESCRIPTOR = "gradePointAverageTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_GRADE_POINT_AVERAGE_TYPE_DESCRIPTOR)
  private String gradePointAverageTypeDescriptor;

  public static final String SERIALIZED_NAME_GRADE_POINT_AVERAGE_VALUE = "gradePointAverageValue";
  @SerializedName(SERIALIZED_NAME_GRADE_POINT_AVERAGE_VALUE)
  private Double gradePointAverageValue;

  public static final String SERIALIZED_NAME_IS_CUMULATIVE = "isCumulative";
  @SerializedName(SERIALIZED_NAME_IS_CUMULATIVE)
  private Boolean isCumulative;

  public static final String SERIALIZED_NAME_MAX_GRADE_POINT_AVERAGE_VALUE = "maxGradePointAverageValue";
  @SerializedName(SERIALIZED_NAME_MAX_GRADE_POINT_AVERAGE_VALUE)
  private Double maxGradePointAverageValue;

  public EdFiReportCardGradePointAverage() { 
  }

  public EdFiReportCardGradePointAverage gradePointAverageTypeDescriptor(String gradePointAverageTypeDescriptor) {
    
    this.gradePointAverageTypeDescriptor = gradePointAverageTypeDescriptor;
    return this;
  }

   /**
   * The system used for calculating the grade point average for an individual.
   * @return gradePointAverageTypeDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The system used for calculating the grade point average for an individual.")

  public String getGradePointAverageTypeDescriptor() {
    return gradePointAverageTypeDescriptor;
  }


  public void setGradePointAverageTypeDescriptor(String gradePointAverageTypeDescriptor) {
    this.gradePointAverageTypeDescriptor = gradePointAverageTypeDescriptor;
  }


  public EdFiReportCardGradePointAverage gradePointAverageValue(Double gradePointAverageValue) {
    
    this.gradePointAverageValue = gradePointAverageValue;
    return this;
  }

   /**
   * The value of the grade points earned divided by the number of credits attempted.
   * @return gradePointAverageValue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The value of the grade points earned divided by the number of credits attempted.")

  public Double getGradePointAverageValue() {
    return gradePointAverageValue;
  }


  public void setGradePointAverageValue(Double gradePointAverageValue) {
    this.gradePointAverageValue = gradePointAverageValue;
  }


  public EdFiReportCardGradePointAverage isCumulative(Boolean isCumulative) {
    
    this.isCumulative = isCumulative;
    return this;
  }

   /**
   * Indicator of whether or not the Grade Point Average value is cumulative.
   * @return isCumulative
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicator of whether or not the Grade Point Average value is cumulative.")

  public Boolean getIsCumulative() {
    return isCumulative;
  }


  public void setIsCumulative(Boolean isCumulative) {
    this.isCumulative = isCumulative;
  }


  public EdFiReportCardGradePointAverage maxGradePointAverageValue(Double maxGradePointAverageValue) {
    
    this.maxGradePointAverageValue = maxGradePointAverageValue;
    return this;
  }

   /**
   * The maximum value for the grade point average.
   * @return maxGradePointAverageValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum value for the grade point average.")

  public Double getMaxGradePointAverageValue() {
    return maxGradePointAverageValue;
  }


  public void setMaxGradePointAverageValue(Double maxGradePointAverageValue) {
    this.maxGradePointAverageValue = maxGradePointAverageValue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiReportCardGradePointAverage edFiReportCardGradePointAverage = (EdFiReportCardGradePointAverage) o;
    return Objects.equals(this.gradePointAverageTypeDescriptor, edFiReportCardGradePointAverage.gradePointAverageTypeDescriptor) &&
        Objects.equals(this.gradePointAverageValue, edFiReportCardGradePointAverage.gradePointAverageValue) &&
        Objects.equals(this.isCumulative, edFiReportCardGradePointAverage.isCumulative) &&
        Objects.equals(this.maxGradePointAverageValue, edFiReportCardGradePointAverage.maxGradePointAverageValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gradePointAverageTypeDescriptor, gradePointAverageValue, isCumulative, maxGradePointAverageValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiReportCardGradePointAverage {\n");
    sb.append("    gradePointAverageTypeDescriptor: ").append(toIndentedString(gradePointAverageTypeDescriptor)).append("\n");
    sb.append("    gradePointAverageValue: ").append(toIndentedString(gradePointAverageValue)).append("\n");
    sb.append("    isCumulative: ").append(toIndentedString(isCumulative)).append("\n");
    sb.append("    maxGradePointAverageValue: ").append(toIndentedString(maxGradePointAverageValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

