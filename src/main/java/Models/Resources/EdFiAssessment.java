/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.AssessmentExtensions;
import Models.Resources.EdFiAssessmentAcademicSubject;
import Models.Resources.EdFiAssessmentAssessedGradeLevel;
import Models.Resources.EdFiAssessmentContentStandard;
import Models.Resources.EdFiAssessmentIdentificationCode;
import Models.Resources.EdFiAssessmentLanguage;
import Models.Resources.EdFiAssessmentPerformanceLevel;
import Models.Resources.EdFiAssessmentPeriod;
import Models.Resources.EdFiAssessmentPlatformType;
import Models.Resources.EdFiAssessmentProgram;
import Models.Resources.EdFiAssessmentScore;
import Models.Resources.EdFiAssessmentSection;
import Models.Resources.EdFiEducationOrganizationReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * EdFiAssessment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiAssessment {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ACADEMIC_SUBJECTS = "academicSubjects";
  @SerializedName(SERIALIZED_NAME_ACADEMIC_SUBJECTS)
  private List<EdFiAssessmentAcademicSubject> academicSubjects = new ArrayList<EdFiAssessmentAcademicSubject>();

  public static final String SERIALIZED_NAME_ASSESSMENT_IDENTIFIER = "assessmentIdentifier";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_IDENTIFIER)
  private String assessmentIdentifier;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE = "educationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference educationOrganizationReference;

  public static final String SERIALIZED_NAME_ADAPTIVE_ASSESSMENT = "adaptiveAssessment";
  @SerializedName(SERIALIZED_NAME_ADAPTIVE_ASSESSMENT)
  private Boolean adaptiveAssessment;

  public static final String SERIALIZED_NAME_ASSESSED_GRADE_LEVELS = "assessedGradeLevels";
  @SerializedName(SERIALIZED_NAME_ASSESSED_GRADE_LEVELS)
  private List<EdFiAssessmentAssessedGradeLevel> assessedGradeLevels = null;

  public static final String SERIALIZED_NAME_ASSESSMENT_CATEGORY_DESCRIPTOR = "assessmentCategoryDescriptor";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_CATEGORY_DESCRIPTOR)
  private String assessmentCategoryDescriptor;

  public static final String SERIALIZED_NAME_ASSESSMENT_FAMILY = "assessmentFamily";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_FAMILY)
  private String assessmentFamily;

  public static final String SERIALIZED_NAME_ASSESSMENT_FORM = "assessmentForm";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_FORM)
  private String assessmentForm;

  public static final String SERIALIZED_NAME_ASSESSMENT_TITLE = "assessmentTitle";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_TITLE)
  private String assessmentTitle;

  public static final String SERIALIZED_NAME_ASSESSMENT_VERSION = "assessmentVersion";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_VERSION)
  private Integer assessmentVersion;

  public static final String SERIALIZED_NAME_CONTENT_STANDARD = "contentStandard";
  @SerializedName(SERIALIZED_NAME_CONTENT_STANDARD)
  private EdFiAssessmentContentStandard contentStandard;

  public static final String SERIALIZED_NAME_IDENTIFICATION_CODES = "identificationCodes";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATION_CODES)
  private List<EdFiAssessmentIdentificationCode> identificationCodes = null;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private List<EdFiAssessmentLanguage> languages = null;

  public static final String SERIALIZED_NAME_MAX_RAW_SCORE = "maxRawScore";
  @SerializedName(SERIALIZED_NAME_MAX_RAW_SCORE)
  private Double maxRawScore;

  public static final String SERIALIZED_NAME_NOMENCLATURE = "nomenclature";
  @SerializedName(SERIALIZED_NAME_NOMENCLATURE)
  private String nomenclature;

  public static final String SERIALIZED_NAME_PERFORMANCE_LEVELS = "performanceLevels";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_LEVELS)
  private List<EdFiAssessmentPerformanceLevel> performanceLevels = null;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private EdFiAssessmentPeriod period;

  public static final String SERIALIZED_NAME_PLATFORM_TYPES = "platformTypes";
  @SerializedName(SERIALIZED_NAME_PLATFORM_TYPES)
  private List<EdFiAssessmentPlatformType> platformTypes = null;

  public static final String SERIALIZED_NAME_PROGRAMS = "programs";
  @SerializedName(SERIALIZED_NAME_PROGRAMS)
  private List<EdFiAssessmentProgram> programs = null;

  public static final String SERIALIZED_NAME_REVISION_DATE = "revisionDate";
  @SerializedName(SERIALIZED_NAME_REVISION_DATE)
  private LocalDate revisionDate;

  public static final String SERIALIZED_NAME_SCORES = "scores";
  @SerializedName(SERIALIZED_NAME_SCORES)
  private List<EdFiAssessmentScore> scores = null;

  public static final String SERIALIZED_NAME_SECTIONS = "sections";
  @SerializedName(SERIALIZED_NAME_SECTIONS)
  private List<EdFiAssessmentSection> sections = null;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXT = "_ext";
  @SerializedName(SERIALIZED_NAME_EXT)
  private AssessmentExtensions ext;

  public EdFiAssessment() { 
  }

  public EdFiAssessment id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiAssessment academicSubjects(List<EdFiAssessmentAcademicSubject> academicSubjects) {
    
    this.academicSubjects = academicSubjects;
    return this;
  }

  public EdFiAssessment addAcademicSubjectsItem(EdFiAssessmentAcademicSubject academicSubjectsItem) {
    this.academicSubjects.add(academicSubjectsItem);
    return this;
  }

   /**
   * An unordered collection of assessmentAcademicSubjects. The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.
   * @return academicSubjects
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An unordered collection of assessmentAcademicSubjects. The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.")

  public List<EdFiAssessmentAcademicSubject> getAcademicSubjects() {
    return academicSubjects;
  }


  public void setAcademicSubjects(List<EdFiAssessmentAcademicSubject> academicSubjects) {
    this.academicSubjects = academicSubjects;
  }


  public EdFiAssessment assessmentIdentifier(String assessmentIdentifier) {
    
    this.assessmentIdentifier = assessmentIdentifier;
    return this;
  }

   /**
   * A unique number or alphanumeric code assigned to an assessment.
   * @return assessmentIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A unique number or alphanumeric code assigned to an assessment.")

  public String getAssessmentIdentifier() {
    return assessmentIdentifier;
  }


  public void setAssessmentIdentifier(String assessmentIdentifier) {
    this.assessmentIdentifier = assessmentIdentifier;
  }


  public EdFiAssessment namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace for the Assessment.
   * @return namespace
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Namespace for the Assessment.")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public EdFiAssessment educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }


  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }


  public EdFiAssessment adaptiveAssessment(Boolean adaptiveAssessment) {
    
    this.adaptiveAssessment = adaptiveAssessment;
    return this;
  }

   /**
   * Indicates that the assessment is adaptive.
   * @return adaptiveAssessment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that the assessment is adaptive.")

  public Boolean getAdaptiveAssessment() {
    return adaptiveAssessment;
  }


  public void setAdaptiveAssessment(Boolean adaptiveAssessment) {
    this.adaptiveAssessment = adaptiveAssessment;
  }


  public EdFiAssessment assessedGradeLevels(List<EdFiAssessmentAssessedGradeLevel> assessedGradeLevels) {
    
    this.assessedGradeLevels = assessedGradeLevels;
    return this;
  }

  public EdFiAssessment addAssessedGradeLevelsItem(EdFiAssessmentAssessedGradeLevel assessedGradeLevelsItem) {
    if (this.assessedGradeLevels == null) {
      this.assessedGradeLevels = new ArrayList<EdFiAssessmentAssessedGradeLevel>();
    }
    this.assessedGradeLevels.add(assessedGradeLevelsItem);
    return this;
  }

   /**
   * An unordered collection of assessmentAssessedGradeLevels. The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.
   * @return assessedGradeLevels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentAssessedGradeLevels. The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.")

  public List<EdFiAssessmentAssessedGradeLevel> getAssessedGradeLevels() {
    return assessedGradeLevels;
  }


  public void setAssessedGradeLevels(List<EdFiAssessmentAssessedGradeLevel> assessedGradeLevels) {
    this.assessedGradeLevels = assessedGradeLevels;
  }


  public EdFiAssessment assessmentCategoryDescriptor(String assessmentCategoryDescriptor) {
    
    this.assessmentCategoryDescriptor = assessmentCategoryDescriptor;
    return this;
  }

   /**
   * The category of an assessment based on format and content. For example:         Achievement test         Advanced placement test         Alternate assessment/grade-level standards         Attitudinal test         Cognitive and perceptual skills test         ...
   * @return assessmentCategoryDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category of an assessment based on format and content. For example:         Achievement test         Advanced placement test         Alternate assessment/grade-level standards         Attitudinal test         Cognitive and perceptual skills test         ...")

  public String getAssessmentCategoryDescriptor() {
    return assessmentCategoryDescriptor;
  }


  public void setAssessmentCategoryDescriptor(String assessmentCategoryDescriptor) {
    this.assessmentCategoryDescriptor = assessmentCategoryDescriptor;
  }


  public EdFiAssessment assessmentFamily(String assessmentFamily) {
    
    this.assessmentFamily = assessmentFamily;
    return this;
  }

   /**
   * The AssessmentFamily this Assessment is a member of.
   * @return assessmentFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The AssessmentFamily this Assessment is a member of.")

  public String getAssessmentFamily() {
    return assessmentFamily;
  }


  public void setAssessmentFamily(String assessmentFamily) {
    this.assessmentFamily = assessmentFamily;
  }


  public EdFiAssessment assessmentForm(String assessmentForm) {
    
    this.assessmentForm = assessmentForm;
    return this;
  }

   /**
   * Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.
   * @return assessmentForm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.")

  public String getAssessmentForm() {
    return assessmentForm;
  }


  public void setAssessmentForm(String assessmentForm) {
    this.assessmentForm = assessmentForm;
  }


  public EdFiAssessment assessmentTitle(String assessmentTitle) {
    
    this.assessmentTitle = assessmentTitle;
    return this;
  }

   /**
   * The title or name of the Assessment.
   * @return assessmentTitle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The title or name of the Assessment.")

  public String getAssessmentTitle() {
    return assessmentTitle;
  }


  public void setAssessmentTitle(String assessmentTitle) {
    this.assessmentTitle = assessmentTitle;
  }


  public EdFiAssessment assessmentVersion(Integer assessmentVersion) {
    
    this.assessmentVersion = assessmentVersion;
    return this;
  }

   /**
   * The version identifier for the assessment.
   * @return assessmentVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version identifier for the assessment.")

  public Integer getAssessmentVersion() {
    return assessmentVersion;
  }


  public void setAssessmentVersion(Integer assessmentVersion) {
    this.assessmentVersion = assessmentVersion;
  }


  public EdFiAssessment contentStandard(EdFiAssessmentContentStandard contentStandard) {
    
    this.contentStandard = contentStandard;
    return this;
  }

   /**
   * Get contentStandard
   * @return contentStandard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiAssessmentContentStandard getContentStandard() {
    return contentStandard;
  }


  public void setContentStandard(EdFiAssessmentContentStandard contentStandard) {
    this.contentStandard = contentStandard;
  }


  public EdFiAssessment identificationCodes(List<EdFiAssessmentIdentificationCode> identificationCodes) {
    
    this.identificationCodes = identificationCodes;
    return this;
  }

  public EdFiAssessment addIdentificationCodesItem(EdFiAssessmentIdentificationCode identificationCodesItem) {
    if (this.identificationCodes == null) {
      this.identificationCodes = new ArrayList<EdFiAssessmentIdentificationCode>();
    }
    this.identificationCodes.add(identificationCodesItem);
    return this;
  }

   /**
   * An unordered collection of assessmentIdentificationCodes. A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.
   * @return identificationCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentIdentificationCodes. A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.")

  public List<EdFiAssessmentIdentificationCode> getIdentificationCodes() {
    return identificationCodes;
  }


  public void setIdentificationCodes(List<EdFiAssessmentIdentificationCode> identificationCodes) {
    this.identificationCodes = identificationCodes;
  }


  public EdFiAssessment languages(List<EdFiAssessmentLanguage> languages) {
    
    this.languages = languages;
    return this;
  }

  public EdFiAssessment addLanguagesItem(EdFiAssessmentLanguage languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<EdFiAssessmentLanguage>();
    }
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * An unordered collection of assessmentLanguages. An indication of the languages in which the assessment is designed.
   * @return languages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentLanguages. An indication of the languages in which the assessment is designed.")

  public List<EdFiAssessmentLanguage> getLanguages() {
    return languages;
  }


  public void setLanguages(List<EdFiAssessmentLanguage> languages) {
    this.languages = languages;
  }


  public EdFiAssessment maxRawScore(Double maxRawScore) {
    
    this.maxRawScore = maxRawScore;
    return this;
  }

   /**
   * The maximum raw score achievable across all assessment items that are correct and scored at the maximum.
   * @return maxRawScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.")

  public Double getMaxRawScore() {
    return maxRawScore;
  }


  public void setMaxRawScore(Double maxRawScore) {
    this.maxRawScore = maxRawScore;
  }


  public EdFiAssessment nomenclature(String nomenclature) {
    
    this.nomenclature = nomenclature;
    return this;
  }

   /**
   * Reflects the specific nomenclature used for Assessment.
   * @return nomenclature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reflects the specific nomenclature used for Assessment.")

  public String getNomenclature() {
    return nomenclature;
  }


  public void setNomenclature(String nomenclature) {
    this.nomenclature = nomenclature;
  }


  public EdFiAssessment performanceLevels(List<EdFiAssessmentPerformanceLevel> performanceLevels) {
    
    this.performanceLevels = performanceLevels;
    return this;
  }

  public EdFiAssessment addPerformanceLevelsItem(EdFiAssessmentPerformanceLevel performanceLevelsItem) {
    if (this.performanceLevels == null) {
      this.performanceLevels = new ArrayList<EdFiAssessmentPerformanceLevel>();
    }
    this.performanceLevels.add(performanceLevelsItem);
    return this;
  }

   /**
   * An unordered collection of assessmentPerformanceLevels. Definition of the performance levels and the associated cut scores. Three styles are supported:         1. Specification of performance level by minimum and maximum score         2. Specification of performance level by cut score, using only minimum score         3. Specification of performance level without any mapping to scores.
   * @return performanceLevels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentPerformanceLevels. Definition of the performance levels and the associated cut scores. Three styles are supported:         1. Specification of performance level by minimum and maximum score         2. Specification of performance level by cut score, using only minimum score         3. Specification of performance level without any mapping to scores.")

  public List<EdFiAssessmentPerformanceLevel> getPerformanceLevels() {
    return performanceLevels;
  }


  public void setPerformanceLevels(List<EdFiAssessmentPerformanceLevel> performanceLevels) {
    this.performanceLevels = performanceLevels;
  }


  public EdFiAssessment period(EdFiAssessmentPeriod period) {
    
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiAssessmentPeriod getPeriod() {
    return period;
  }


  public void setPeriod(EdFiAssessmentPeriod period) {
    this.period = period;
  }


  public EdFiAssessment platformTypes(List<EdFiAssessmentPlatformType> platformTypes) {
    
    this.platformTypes = platformTypes;
    return this;
  }

  public EdFiAssessment addPlatformTypesItem(EdFiAssessmentPlatformType platformTypesItem) {
    if (this.platformTypes == null) {
      this.platformTypes = new ArrayList<EdFiAssessmentPlatformType>();
    }
    this.platformTypes.add(platformTypesItem);
    return this;
  }

   /**
   * An unordered collection of assessmentPlatformTypes. The platforms with which the assessment may be delivered.
   * @return platformTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentPlatformTypes. The platforms with which the assessment may be delivered.")

  public List<EdFiAssessmentPlatformType> getPlatformTypes() {
    return platformTypes;
  }


  public void setPlatformTypes(List<EdFiAssessmentPlatformType> platformTypes) {
    this.platformTypes = platformTypes;
  }


  public EdFiAssessment programs(List<EdFiAssessmentProgram> programs) {
    
    this.programs = programs;
    return this;
  }

  public EdFiAssessment addProgramsItem(EdFiAssessmentProgram programsItem) {
    if (this.programs == null) {
      this.programs = new ArrayList<EdFiAssessmentProgram>();
    }
    this.programs.add(programsItem);
    return this;
  }

   /**
   * An unordered collection of assessmentPrograms. The programs associated with the Assessment.
   * @return programs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentPrograms. The programs associated with the Assessment.")

  public List<EdFiAssessmentProgram> getPrograms() {
    return programs;
  }


  public void setPrograms(List<EdFiAssessmentProgram> programs) {
    this.programs = programs;
  }


  public EdFiAssessment revisionDate(LocalDate revisionDate) {
    
    this.revisionDate = revisionDate;
    return this;
  }

   /**
   * The month, day, and year that the conceptual design for the assessment was most recently revised substantially.
   * @return revisionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The month, day, and year that the conceptual design for the assessment was most recently revised substantially.")

  public LocalDate getRevisionDate() {
    return revisionDate;
  }


  public void setRevisionDate(LocalDate revisionDate) {
    this.revisionDate = revisionDate;
  }


  public EdFiAssessment scores(List<EdFiAssessmentScore> scores) {
    
    this.scores = scores;
    return this;
  }

  public EdFiAssessment addScoresItem(EdFiAssessmentScore scoresItem) {
    if (this.scores == null) {
      this.scores = new ArrayList<EdFiAssessmentScore>();
    }
    this.scores.add(scoresItem);
    return this;
  }

   /**
   * An unordered collection of assessmentScores. Definition of the scores to be expected from this assessment.
   * @return scores
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentScores. Definition of the scores to be expected from this assessment.")

  public List<EdFiAssessmentScore> getScores() {
    return scores;
  }


  public void setScores(List<EdFiAssessmentScore> scores) {
    this.scores = scores;
  }


  public EdFiAssessment sections(List<EdFiAssessmentSection> sections) {
    
    this.sections = sections;
    return this;
  }

  public EdFiAssessment addSectionsItem(EdFiAssessmentSection sectionsItem) {
    if (this.sections == null) {
      this.sections = new ArrayList<EdFiAssessmentSection>();
    }
    this.sections.add(sectionsItem);
    return this;
  }

   /**
   * An unordered collection of assessmentSections. The Section(s) to which the Assessment is associated.
   * @return sections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of assessmentSections. The Section(s) to which the Assessment is associated.")

  public List<EdFiAssessmentSection> getSections() {
    return sections;
  }


  public void setSections(List<EdFiAssessmentSection> sections) {
    this.sections = sections;
  }


  public EdFiAssessment etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  public EdFiAssessment ext(AssessmentExtensions ext) {
    
    this.ext = ext;
    return this;
  }

   /**
   * Get ext
   * @return ext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AssessmentExtensions getExt() {
    return ext;
  }


  public void setExt(AssessmentExtensions ext) {
    this.ext = ext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiAssessment edFiAssessment = (EdFiAssessment) o;
    return Objects.equals(this.id, edFiAssessment.id) &&
        Objects.equals(this.academicSubjects, edFiAssessment.academicSubjects) &&
        Objects.equals(this.assessmentIdentifier, edFiAssessment.assessmentIdentifier) &&
        Objects.equals(this.namespace, edFiAssessment.namespace) &&
        Objects.equals(this.educationOrganizationReference, edFiAssessment.educationOrganizationReference) &&
        Objects.equals(this.adaptiveAssessment, edFiAssessment.adaptiveAssessment) &&
        Objects.equals(this.assessedGradeLevels, edFiAssessment.assessedGradeLevels) &&
        Objects.equals(this.assessmentCategoryDescriptor, edFiAssessment.assessmentCategoryDescriptor) &&
        Objects.equals(this.assessmentFamily, edFiAssessment.assessmentFamily) &&
        Objects.equals(this.assessmentForm, edFiAssessment.assessmentForm) &&
        Objects.equals(this.assessmentTitle, edFiAssessment.assessmentTitle) &&
        Objects.equals(this.assessmentVersion, edFiAssessment.assessmentVersion) &&
        Objects.equals(this.contentStandard, edFiAssessment.contentStandard) &&
        Objects.equals(this.identificationCodes, edFiAssessment.identificationCodes) &&
        Objects.equals(this.languages, edFiAssessment.languages) &&
        Objects.equals(this.maxRawScore, edFiAssessment.maxRawScore) &&
        Objects.equals(this.nomenclature, edFiAssessment.nomenclature) &&
        Objects.equals(this.performanceLevels, edFiAssessment.performanceLevels) &&
        Objects.equals(this.period, edFiAssessment.period) &&
        Objects.equals(this.platformTypes, edFiAssessment.platformTypes) &&
        Objects.equals(this.programs, edFiAssessment.programs) &&
        Objects.equals(this.revisionDate, edFiAssessment.revisionDate) &&
        Objects.equals(this.scores, edFiAssessment.scores) &&
        Objects.equals(this.sections, edFiAssessment.sections) &&
        Objects.equals(this.etag, edFiAssessment.etag) &&
        Objects.equals(this.ext, edFiAssessment.ext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, academicSubjects, assessmentIdentifier, namespace, educationOrganizationReference, adaptiveAssessment, assessedGradeLevels, assessmentCategoryDescriptor, assessmentFamily, assessmentForm, assessmentTitle, assessmentVersion, contentStandard, identificationCodes, languages, maxRawScore, nomenclature, performanceLevels, period, platformTypes, programs, revisionDate, scores, sections, etag, ext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiAssessment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    academicSubjects: ").append(toIndentedString(academicSubjects)).append("\n");
    sb.append("    assessmentIdentifier: ").append(toIndentedString(assessmentIdentifier)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    adaptiveAssessment: ").append(toIndentedString(adaptiveAssessment)).append("\n");
    sb.append("    assessedGradeLevels: ").append(toIndentedString(assessedGradeLevels)).append("\n");
    sb.append("    assessmentCategoryDescriptor: ").append(toIndentedString(assessmentCategoryDescriptor)).append("\n");
    sb.append("    assessmentFamily: ").append(toIndentedString(assessmentFamily)).append("\n");
    sb.append("    assessmentForm: ").append(toIndentedString(assessmentForm)).append("\n");
    sb.append("    assessmentTitle: ").append(toIndentedString(assessmentTitle)).append("\n");
    sb.append("    assessmentVersion: ").append(toIndentedString(assessmentVersion)).append("\n");
    sb.append("    contentStandard: ").append(toIndentedString(contentStandard)).append("\n");
    sb.append("    identificationCodes: ").append(toIndentedString(identificationCodes)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    maxRawScore: ").append(toIndentedString(maxRawScore)).append("\n");
    sb.append("    nomenclature: ").append(toIndentedString(nomenclature)).append("\n");
    sb.append("    performanceLevels: ").append(toIndentedString(performanceLevels)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    platformTypes: ").append(toIndentedString(platformTypes)).append("\n");
    sb.append("    programs: ").append(toIndentedString(programs)).append("\n");
    sb.append("    revisionDate: ").append(toIndentedString(revisionDate)).append("\n");
    sb.append("    scores: ").append(toIndentedString(scores)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

