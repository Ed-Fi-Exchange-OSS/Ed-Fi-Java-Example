/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications {
  public static final String SERIALIZED_NAME_CAPACITY_TO_SERVE = "capacityToServe";
  @SerializedName(SERIALIZED_NAME_CAPACITY_TO_SERVE)
  private Boolean capacityToServe;

  public static final String SERIALIZED_NAME_ELIGIBLE = "eligible";
  @SerializedName(SERIALIZED_NAME_ELIGIBLE)
  private Boolean eligible;

  public static final String SERIALIZED_NAME_YEARS_OF_SERVICE_CURRENT_PLACEMENT = "yearsOfServiceCurrentPlacement";
  @SerializedName(SERIALIZED_NAME_YEARS_OF_SERVICE_CURRENT_PLACEMENT)
  private Double yearsOfServiceCurrentPlacement;

  public static final String SERIALIZED_NAME_YEARS_OF_SERVICE_TOTAL = "yearsOfServiceTotal";
  @SerializedName(SERIALIZED_NAME_YEARS_OF_SERVICE_TOTAL)
  private Double yearsOfServiceTotal;

  public TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications() { 
  }

  public TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications capacityToServe(Boolean capacityToServe) {
    
    this.capacityToServe = capacityToServe;
    return this;
  }

   /**
   * An indication of whether or not a prospect mentor teacher has capacity to serve.
   * @return capacityToServe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether or not a prospect mentor teacher has capacity to serve.")

  public Boolean getCapacityToServe() {
    return capacityToServe;
  }


  public void setCapacityToServe(Boolean capacityToServe) {
    this.capacityToServe = capacityToServe;
  }


  public TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications eligible(Boolean eligible) {
    
    this.eligible = eligible;
    return this;
  }

   /**
   * An indication of whether the prospect is eligible for the position.
   * @return eligible
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An indication of whether the prospect is eligible for the position.")

  public Boolean getEligible() {
    return eligible;
  }


  public void setEligible(Boolean eligible) {
    this.eligible = eligible;
  }


  public TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications yearsOfServiceCurrentPlacement(Double yearsOfServiceCurrentPlacement) {
    
    this.yearsOfServiceCurrentPlacement = yearsOfServiceCurrentPlacement;
    return this;
  }

   /**
   * The total number of years of service at the current school.
   * @return yearsOfServiceCurrentPlacement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of years of service at the current school.")

  public Double getYearsOfServiceCurrentPlacement() {
    return yearsOfServiceCurrentPlacement;
  }


  public void setYearsOfServiceCurrentPlacement(Double yearsOfServiceCurrentPlacement) {
    this.yearsOfServiceCurrentPlacement = yearsOfServiceCurrentPlacement;
  }


  public TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications yearsOfServiceTotal(Double yearsOfServiceTotal) {
    
    this.yearsOfServiceTotal = yearsOfServiceTotal;
    return this;
  }

   /**
   * The total number of years of service as a teacher.
   * @return yearsOfServiceTotal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The total number of years of service as a teacher.")

  public Double getYearsOfServiceTotal() {
    return yearsOfServiceTotal;
  }


  public void setYearsOfServiceTotal(Double yearsOfServiceTotal) {
    this.yearsOfServiceTotal = yearsOfServiceTotal;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications tpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications = (TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications) o;
    return Objects.equals(this.capacityToServe, tpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications.capacityToServe) &&
        Objects.equals(this.eligible, tpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications.eligible) &&
        Objects.equals(this.yearsOfServiceCurrentPlacement, tpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications.yearsOfServiceCurrentPlacement) &&
        Objects.equals(this.yearsOfServiceTotal, tpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications.yearsOfServiceTotal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacityToServe, eligible, yearsOfServiceCurrentPlacement, yearsOfServiceTotal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmRecruitmentEventAttendanceRecruitmentEventAttendeeQualifications {\n");
    sb.append("    capacityToServe: ").append(toIndentedString(capacityToServe)).append("\n");
    sb.append("    eligible: ").append(toIndentedString(eligible)).append("\n");
    sb.append("    yearsOfServiceCurrentPlacement: ").append(toIndentedString(yearsOfServiceCurrentPlacement)).append("\n");
    sb.append("    yearsOfServiceTotal: ").append(toIndentedString(yearsOfServiceTotal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

