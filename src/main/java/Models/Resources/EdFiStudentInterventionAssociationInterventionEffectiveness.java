/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EdFiStudentInterventionAssociationInterventionEffectiveness
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiStudentInterventionAssociationInterventionEffectiveness {
  public static final String SERIALIZED_NAME_DIAGNOSIS_DESCRIPTOR = "diagnosisDescriptor";
  @SerializedName(SERIALIZED_NAME_DIAGNOSIS_DESCRIPTOR)
  private String diagnosisDescriptor;

  public static final String SERIALIZED_NAME_GRADE_LEVEL_DESCRIPTOR = "gradeLevelDescriptor";
  @SerializedName(SERIALIZED_NAME_GRADE_LEVEL_DESCRIPTOR)
  private String gradeLevelDescriptor;

  public static final String SERIALIZED_NAME_POPULATION_SERVED_DESCRIPTOR = "populationServedDescriptor";
  @SerializedName(SERIALIZED_NAME_POPULATION_SERVED_DESCRIPTOR)
  private String populationServedDescriptor;

  public static final String SERIALIZED_NAME_INTERVENTION_EFFECTIVENESS_RATING_DESCRIPTOR = "interventionEffectivenessRatingDescriptor";
  @SerializedName(SERIALIZED_NAME_INTERVENTION_EFFECTIVENESS_RATING_DESCRIPTOR)
  private String interventionEffectivenessRatingDescriptor;

  public static final String SERIALIZED_NAME_IMPROVEMENT_INDEX = "improvementIndex";
  @SerializedName(SERIALIZED_NAME_IMPROVEMENT_INDEX)
  private Integer improvementIndex;

  public EdFiStudentInterventionAssociationInterventionEffectiveness() { 
  }

  public EdFiStudentInterventionAssociationInterventionEffectiveness diagnosisDescriptor(String diagnosisDescriptor) {
    
    this.diagnosisDescriptor = diagnosisDescriptor;
    return this;
  }

   /**
   * Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.
   * @return diagnosisDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.")

  public String getDiagnosisDescriptor() {
    return diagnosisDescriptor;
  }


  public void setDiagnosisDescriptor(String diagnosisDescriptor) {
    this.diagnosisDescriptor = diagnosisDescriptor;
  }


  public EdFiStudentInterventionAssociationInterventionEffectiveness gradeLevelDescriptor(String gradeLevelDescriptor) {
    
    this.gradeLevelDescriptor = gradeLevelDescriptor;
    return this;
  }

   /**
   * Grade level for which effectiveness is measured.
   * @return gradeLevelDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Grade level for which effectiveness is measured.")

  public String getGradeLevelDescriptor() {
    return gradeLevelDescriptor;
  }


  public void setGradeLevelDescriptor(String gradeLevelDescriptor) {
    this.gradeLevelDescriptor = gradeLevelDescriptor;
  }


  public EdFiStudentInterventionAssociationInterventionEffectiveness populationServedDescriptor(String populationServedDescriptor) {
    
    this.populationServedDescriptor = populationServedDescriptor;
    return this;
  }

   /**
   * Population for which effectiveness is measured.
   * @return populationServedDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Population for which effectiveness is measured.")

  public String getPopulationServedDescriptor() {
    return populationServedDescriptor;
  }


  public void setPopulationServedDescriptor(String populationServedDescriptor) {
    this.populationServedDescriptor = populationServedDescriptor;
  }


  public EdFiStudentInterventionAssociationInterventionEffectiveness interventionEffectivenessRatingDescriptor(String interventionEffectivenessRatingDescriptor) {
    
    this.interventionEffectivenessRatingDescriptor = interventionEffectivenessRatingDescriptor;
    return this;
  }

   /**
   * An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.
   * @return interventionEffectivenessRatingDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.")

  public String getInterventionEffectivenessRatingDescriptor() {
    return interventionEffectivenessRatingDescriptor;
  }


  public void setInterventionEffectivenessRatingDescriptor(String interventionEffectivenessRatingDescriptor) {
    this.interventionEffectivenessRatingDescriptor = interventionEffectivenessRatingDescriptor;
  }


  public EdFiStudentInterventionAssociationInterventionEffectiveness improvementIndex(Integer improvementIndex) {
    
    this.improvementIndex = improvementIndex;
    return this;
  }

   /**
   * Along a percentile distribution of students, the improvement index represents the change in an average student&#39;s percentile rank that is considered to be due to the intervention.
   * @return improvementIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Along a percentile distribution of students, the improvement index represents the change in an average student's percentile rank that is considered to be due to the intervention.")

  public Integer getImprovementIndex() {
    return improvementIndex;
  }


  public void setImprovementIndex(Integer improvementIndex) {
    this.improvementIndex = improvementIndex;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStudentInterventionAssociationInterventionEffectiveness edFiStudentInterventionAssociationInterventionEffectiveness = (EdFiStudentInterventionAssociationInterventionEffectiveness) o;
    return Objects.equals(this.diagnosisDescriptor, edFiStudentInterventionAssociationInterventionEffectiveness.diagnosisDescriptor) &&
        Objects.equals(this.gradeLevelDescriptor, edFiStudentInterventionAssociationInterventionEffectiveness.gradeLevelDescriptor) &&
        Objects.equals(this.populationServedDescriptor, edFiStudentInterventionAssociationInterventionEffectiveness.populationServedDescriptor) &&
        Objects.equals(this.interventionEffectivenessRatingDescriptor, edFiStudentInterventionAssociationInterventionEffectiveness.interventionEffectivenessRatingDescriptor) &&
        Objects.equals(this.improvementIndex, edFiStudentInterventionAssociationInterventionEffectiveness.improvementIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diagnosisDescriptor, gradeLevelDescriptor, populationServedDescriptor, interventionEffectivenessRatingDescriptor, improvementIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStudentInterventionAssociationInterventionEffectiveness {\n");
    sb.append("    diagnosisDescriptor: ").append(toIndentedString(diagnosisDescriptor)).append("\n");
    sb.append("    gradeLevelDescriptor: ").append(toIndentedString(gradeLevelDescriptor)).append("\n");
    sb.append("    populationServedDescriptor: ").append(toIndentedString(populationServedDescriptor)).append("\n");
    sb.append("    interventionEffectivenessRatingDescriptor: ").append(toIndentedString(interventionEffectivenessRatingDescriptor)).append("\n");
    sb.append("    improvementIndex: ").append(toIndentedString(improvementIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

