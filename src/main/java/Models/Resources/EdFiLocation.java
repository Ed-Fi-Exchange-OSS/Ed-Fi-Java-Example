/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiSchoolReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EdFiLocation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiLocation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CLASSROOM_IDENTIFICATION_CODE = "classroomIdentificationCode";
  @SerializedName(SERIALIZED_NAME_CLASSROOM_IDENTIFICATION_CODE)
  private String classroomIdentificationCode;

  public static final String SERIALIZED_NAME_SCHOOL_REFERENCE = "schoolReference";
  @SerializedName(SERIALIZED_NAME_SCHOOL_REFERENCE)
  private EdFiSchoolReference schoolReference;

  public static final String SERIALIZED_NAME_MAXIMUM_NUMBER_OF_SEATS = "maximumNumberOfSeats";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_NUMBER_OF_SEATS)
  private Integer maximumNumberOfSeats;

  public static final String SERIALIZED_NAME_OPTIMAL_NUMBER_OF_SEATS = "optimalNumberOfSeats";
  @SerializedName(SERIALIZED_NAME_OPTIMAL_NUMBER_OF_SEATS)
  private Integer optimalNumberOfSeats;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiLocation() { 
  }

  public EdFiLocation id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiLocation classroomIdentificationCode(String classroomIdentificationCode) {
    
    this.classroomIdentificationCode = classroomIdentificationCode;
    return this;
  }

   /**
   * A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.
   * @return classroomIdentificationCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.")

  public String getClassroomIdentificationCode() {
    return classroomIdentificationCode;
  }


  public void setClassroomIdentificationCode(String classroomIdentificationCode) {
    this.classroomIdentificationCode = classroomIdentificationCode;
  }


  public EdFiLocation schoolReference(EdFiSchoolReference schoolReference) {
    
    this.schoolReference = schoolReference;
    return this;
  }

   /**
   * Get schoolReference
   * @return schoolReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiSchoolReference getSchoolReference() {
    return schoolReference;
  }


  public void setSchoolReference(EdFiSchoolReference schoolReference) {
    this.schoolReference = schoolReference;
  }


  public EdFiLocation maximumNumberOfSeats(Integer maximumNumberOfSeats) {
    
    this.maximumNumberOfSeats = maximumNumberOfSeats;
    return this;
  }

   /**
   * The most number of seats the class can maintain.
   * @return maximumNumberOfSeats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The most number of seats the class can maintain.")

  public Integer getMaximumNumberOfSeats() {
    return maximumNumberOfSeats;
  }


  public void setMaximumNumberOfSeats(Integer maximumNumberOfSeats) {
    this.maximumNumberOfSeats = maximumNumberOfSeats;
  }


  public EdFiLocation optimalNumberOfSeats(Integer optimalNumberOfSeats) {
    
    this.optimalNumberOfSeats = optimalNumberOfSeats;
    return this;
  }

   /**
   * The number of seats that is most favorable to the class.
   * @return optimalNumberOfSeats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of seats that is most favorable to the class.")

  public Integer getOptimalNumberOfSeats() {
    return optimalNumberOfSeats;
  }


  public void setOptimalNumberOfSeats(Integer optimalNumberOfSeats) {
    this.optimalNumberOfSeats = optimalNumberOfSeats;
  }


  public EdFiLocation etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiLocation edFiLocation = (EdFiLocation) o;
    return Objects.equals(this.id, edFiLocation.id) &&
        Objects.equals(this.classroomIdentificationCode, edFiLocation.classroomIdentificationCode) &&
        Objects.equals(this.schoolReference, edFiLocation.schoolReference) &&
        Objects.equals(this.maximumNumberOfSeats, edFiLocation.maximumNumberOfSeats) &&
        Objects.equals(this.optimalNumberOfSeats, edFiLocation.optimalNumberOfSeats) &&
        Objects.equals(this.etag, edFiLocation.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, classroomIdentificationCode, schoolReference, maximumNumberOfSeats, optimalNumberOfSeats, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiLocation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classroomIdentificationCode: ").append(toIndentedString(classroomIdentificationCode)).append("\n");
    sb.append("    schoolReference: ").append(toIndentedString(schoolReference)).append("\n");
    sb.append("    maximumNumberOfSeats: ").append(toIndentedString(maximumNumberOfSeats)).append("\n");
    sb.append("    optimalNumberOfSeats: ").append(toIndentedString(optimalNumberOfSeats)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

