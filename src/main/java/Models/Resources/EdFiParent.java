/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiParentAddress;
import Models.Resources.EdFiParentElectronicMail;
import Models.Resources.EdFiParentInternationalAddress;
import Models.Resources.EdFiParentLanguage;
import Models.Resources.EdFiParentOtherName;
import Models.Resources.EdFiParentPersonalIdentificationDocument;
import Models.Resources.EdFiParentTelephone;
import Models.Resources.EdFiPersonReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EdFiParent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiParent {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PARENT_UNIQUE_ID = "parentUniqueId";
  @SerializedName(SERIALIZED_NAME_PARENT_UNIQUE_ID)
  private String parentUniqueId;

  public static final String SERIALIZED_NAME_PERSON_REFERENCE = "personReference";
  @SerializedName(SERIALIZED_NAME_PERSON_REFERENCE)
  private EdFiPersonReference personReference;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<EdFiParentAddress> addresses = null;

  public static final String SERIALIZED_NAME_ELECTRONIC_MAILS = "electronicMails";
  @SerializedName(SERIALIZED_NAME_ELECTRONIC_MAILS)
  private List<EdFiParentElectronicMail> electronicMails = null;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GENERATION_CODE_SUFFIX = "generationCodeSuffix";
  @SerializedName(SERIALIZED_NAME_GENERATION_CODE_SUFFIX)
  private String generationCodeSuffix;

  public static final String SERIALIZED_NAME_HIGHEST_COMPLETED_LEVEL_OF_EDUCATION_DESCRIPTOR = "highestCompletedLevelOfEducationDescriptor";
  @SerializedName(SERIALIZED_NAME_HIGHEST_COMPLETED_LEVEL_OF_EDUCATION_DESCRIPTOR)
  private String highestCompletedLevelOfEducationDescriptor;

  public static final String SERIALIZED_NAME_INTERNATIONAL_ADDRESSES = "internationalAddresses";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_ADDRESSES)
  private List<EdFiParentInternationalAddress> internationalAddresses = null;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private List<EdFiParentLanguage> languages = null;

  public static final String SERIALIZED_NAME_LAST_SURNAME = "lastSurname";
  @SerializedName(SERIALIZED_NAME_LAST_SURNAME)
  private String lastSurname;

  public static final String SERIALIZED_NAME_LOGIN_ID = "loginId";
  @SerializedName(SERIALIZED_NAME_LOGIN_ID)
  private String loginId;

  public static final String SERIALIZED_NAME_MAIDEN_NAME = "maidenName";
  @SerializedName(SERIALIZED_NAME_MAIDEN_NAME)
  private String maidenName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_OTHER_NAMES = "otherNames";
  @SerializedName(SERIALIZED_NAME_OTHER_NAMES)
  private List<EdFiParentOtherName> otherNames = null;

  public static final String SERIALIZED_NAME_PERSONAL_IDENTIFICATION_DOCUMENTS = "personalIdentificationDocuments";
  @SerializedName(SERIALIZED_NAME_PERSONAL_IDENTIFICATION_DOCUMENTS)
  private List<EdFiParentPersonalIdentificationDocument> personalIdentificationDocuments = null;

  public static final String SERIALIZED_NAME_PERSONAL_TITLE_PREFIX = "personalTitlePrefix";
  @SerializedName(SERIALIZED_NAME_PERSONAL_TITLE_PREFIX)
  private String personalTitlePrefix;

  public static final String SERIALIZED_NAME_SEX_DESCRIPTOR = "sexDescriptor";
  @SerializedName(SERIALIZED_NAME_SEX_DESCRIPTOR)
  private String sexDescriptor;

  public static final String SERIALIZED_NAME_TELEPHONES = "telephones";
  @SerializedName(SERIALIZED_NAME_TELEPHONES)
  private List<EdFiParentTelephone> telephones = null;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiParent() { 
  }

  public EdFiParent id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiParent parentUniqueId(String parentUniqueId) {
    
    this.parentUniqueId = parentUniqueId;
    return this;
  }

   /**
   * A unique alphanumeric code assigned to a parent.
   * @return parentUniqueId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A unique alphanumeric code assigned to a parent.")

  public String getParentUniqueId() {
    return parentUniqueId;
  }


  public void setParentUniqueId(String parentUniqueId) {
    this.parentUniqueId = parentUniqueId;
  }


  public EdFiParent personReference(EdFiPersonReference personReference) {
    
    this.personReference = personReference;
    return this;
  }

   /**
   * Get personReference
   * @return personReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiPersonReference getPersonReference() {
    return personReference;
  }


  public void setPersonReference(EdFiPersonReference personReference) {
    this.personReference = personReference;
  }


  public EdFiParent addresses(List<EdFiParentAddress> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public EdFiParent addAddressesItem(EdFiParentAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<EdFiParentAddress>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * An unordered collection of parentAddresses. Parent&#39;s address, if different from the student address.
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of parentAddresses. Parent's address, if different from the student address.")

  public List<EdFiParentAddress> getAddresses() {
    return addresses;
  }


  public void setAddresses(List<EdFiParentAddress> addresses) {
    this.addresses = addresses;
  }


  public EdFiParent electronicMails(List<EdFiParentElectronicMail> electronicMails) {
    
    this.electronicMails = electronicMails;
    return this;
  }

  public EdFiParent addElectronicMailsItem(EdFiParentElectronicMail electronicMailsItem) {
    if (this.electronicMails == null) {
      this.electronicMails = new ArrayList<EdFiParentElectronicMail>();
    }
    this.electronicMails.add(electronicMailsItem);
    return this;
  }

   /**
   * An unordered collection of parentElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.
   * @return electronicMails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of parentElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.")

  public List<EdFiParentElectronicMail> getElectronicMails() {
    return electronicMails;
  }


  public void setElectronicMails(List<EdFiParentElectronicMail> electronicMails) {
    this.electronicMails = electronicMails;
  }


  public EdFiParent firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public EdFiParent generationCodeSuffix(String generationCodeSuffix) {
    
    this.generationCodeSuffix = generationCodeSuffix;
    return this;
  }

   /**
   * An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III).
   * @return generationCodeSuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).")

  public String getGenerationCodeSuffix() {
    return generationCodeSuffix;
  }


  public void setGenerationCodeSuffix(String generationCodeSuffix) {
    this.generationCodeSuffix = generationCodeSuffix;
  }


  public EdFiParent highestCompletedLevelOfEducationDescriptor(String highestCompletedLevelOfEducationDescriptor) {
    
    this.highestCompletedLevelOfEducationDescriptor = highestCompletedLevelOfEducationDescriptor;
    return this;
  }

   /**
   * The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).
   * @return highestCompletedLevelOfEducationDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).")

  public String getHighestCompletedLevelOfEducationDescriptor() {
    return highestCompletedLevelOfEducationDescriptor;
  }


  public void setHighestCompletedLevelOfEducationDescriptor(String highestCompletedLevelOfEducationDescriptor) {
    this.highestCompletedLevelOfEducationDescriptor = highestCompletedLevelOfEducationDescriptor;
  }


  public EdFiParent internationalAddresses(List<EdFiParentInternationalAddress> internationalAddresses) {
    
    this.internationalAddresses = internationalAddresses;
    return this;
  }

  public EdFiParent addInternationalAddressesItem(EdFiParentInternationalAddress internationalAddressesItem) {
    if (this.internationalAddresses == null) {
      this.internationalAddresses = new ArrayList<EdFiParentInternationalAddress>();
    }
    this.internationalAddresses.add(internationalAddressesItem);
    return this;
  }

   /**
   * An unordered collection of parentInternationalAddresses. The set of elements that describes an international address.
   * @return internationalAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of parentInternationalAddresses. The set of elements that describes an international address.")

  public List<EdFiParentInternationalAddress> getInternationalAddresses() {
    return internationalAddresses;
  }


  public void setInternationalAddresses(List<EdFiParentInternationalAddress> internationalAddresses) {
    this.internationalAddresses = internationalAddresses;
  }


  public EdFiParent languages(List<EdFiParentLanguage> languages) {
    
    this.languages = languages;
    return this;
  }

  public EdFiParent addLanguagesItem(EdFiParentLanguage languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<EdFiParentLanguage>();
    }
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * An unordered collection of parentLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.
   * @return languages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of parentLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.")

  public List<EdFiParentLanguage> getLanguages() {
    return languages;
  }


  public void setLanguages(List<EdFiParentLanguage> languages) {
    this.languages = languages;
  }


  public EdFiParent lastSurname(String lastSurname) {
    
    this.lastSurname = lastSurname;
    return this;
  }

   /**
   * The name borne in common by members of a family.
   * @return lastSurname
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name borne in common by members of a family.")

  public String getLastSurname() {
    return lastSurname;
  }


  public void setLastSurname(String lastSurname) {
    this.lastSurname = lastSurname;
  }


  public EdFiParent loginId(String loginId) {
    
    this.loginId = loginId;
    return this;
  }

   /**
   * The login ID for the user; used for security access control interface.
   * @return loginId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The login ID for the user; used for security access control interface.")

  public String getLoginId() {
    return loginId;
  }


  public void setLoginId(String loginId) {
    this.loginId = loginId;
  }


  public EdFiParent maidenName(String maidenName) {
    
    this.maidenName = maidenName;
    return this;
  }

   /**
   * The person&#39;s maiden name.
   * @return maidenName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The person's maiden name.")

  public String getMaidenName() {
    return maidenName;
  }


  public void setMaidenName(String maidenName) {
    this.maidenName = maidenName;
  }


  public EdFiParent middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

   /**
   * A secondary name given to an individual at birth, baptism, or during another naming ceremony.
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A secondary name given to an individual at birth, baptism, or during another naming ceremony.")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public EdFiParent otherNames(List<EdFiParentOtherName> otherNames) {
    
    this.otherNames = otherNames;
    return this;
  }

  public EdFiParent addOtherNamesItem(EdFiParentOtherName otherNamesItem) {
    if (this.otherNames == null) {
      this.otherNames = new ArrayList<EdFiParentOtherName>();
    }
    this.otherNames.add(otherNamesItem);
    return this;
  }

   /**
   * An unordered collection of parentOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person.
   * @return otherNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of parentOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person.")

  public List<EdFiParentOtherName> getOtherNames() {
    return otherNames;
  }


  public void setOtherNames(List<EdFiParentOtherName> otherNames) {
    this.otherNames = otherNames;
  }


  public EdFiParent personalIdentificationDocuments(List<EdFiParentPersonalIdentificationDocument> personalIdentificationDocuments) {
    
    this.personalIdentificationDocuments = personalIdentificationDocuments;
    return this;
  }

  public EdFiParent addPersonalIdentificationDocumentsItem(EdFiParentPersonalIdentificationDocument personalIdentificationDocumentsItem) {
    if (this.personalIdentificationDocuments == null) {
      this.personalIdentificationDocuments = new ArrayList<EdFiParentPersonalIdentificationDocument>();
    }
    this.personalIdentificationDocuments.add(personalIdentificationDocumentsItem);
    return this;
  }

   /**
   * An unordered collection of parentPersonalIdentificationDocuments. The documents presented as evident to verify one&#39;s personal identity; for example: drivers license, passport, birth certificate, etc.
   * @return personalIdentificationDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of parentPersonalIdentificationDocuments. The documents presented as evident to verify one's personal identity; for example: drivers license, passport, birth certificate, etc.")

  public List<EdFiParentPersonalIdentificationDocument> getPersonalIdentificationDocuments() {
    return personalIdentificationDocuments;
  }


  public void setPersonalIdentificationDocuments(List<EdFiParentPersonalIdentificationDocument> personalIdentificationDocuments) {
    this.personalIdentificationDocuments = personalIdentificationDocuments;
  }


  public EdFiParent personalTitlePrefix(String personalTitlePrefix) {
    
    this.personalTitlePrefix = personalTitlePrefix;
    return this;
  }

   /**
   * A prefix used to denote the title, degree, position, or seniority of the person.
   * @return personalTitlePrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A prefix used to denote the title, degree, position, or seniority of the person.")

  public String getPersonalTitlePrefix() {
    return personalTitlePrefix;
  }


  public void setPersonalTitlePrefix(String personalTitlePrefix) {
    this.personalTitlePrefix = personalTitlePrefix;
  }


  public EdFiParent sexDescriptor(String sexDescriptor) {
    
    this.sexDescriptor = sexDescriptor;
    return this;
  }

   /**
   * A person&#39;s gender.
   * @return sexDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A person's gender.")

  public String getSexDescriptor() {
    return sexDescriptor;
  }


  public void setSexDescriptor(String sexDescriptor) {
    this.sexDescriptor = sexDescriptor;
  }


  public EdFiParent telephones(List<EdFiParentTelephone> telephones) {
    
    this.telephones = telephones;
    return this;
  }

  public EdFiParent addTelephonesItem(EdFiParentTelephone telephonesItem) {
    if (this.telephones == null) {
      this.telephones = new ArrayList<EdFiParentTelephone>();
    }
    this.telephones.add(telephonesItem);
    return this;
  }

   /**
   * An unordered collection of parentTelephones. The 10-digit telephone number, including the area code, for the person.
   * @return telephones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of parentTelephones. The 10-digit telephone number, including the area code, for the person.")

  public List<EdFiParentTelephone> getTelephones() {
    return telephones;
  }


  public void setTelephones(List<EdFiParentTelephone> telephones) {
    this.telephones = telephones;
  }


  public EdFiParent etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiParent edFiParent = (EdFiParent) o;
    return Objects.equals(this.id, edFiParent.id) &&
        Objects.equals(this.parentUniqueId, edFiParent.parentUniqueId) &&
        Objects.equals(this.personReference, edFiParent.personReference) &&
        Objects.equals(this.addresses, edFiParent.addresses) &&
        Objects.equals(this.electronicMails, edFiParent.electronicMails) &&
        Objects.equals(this.firstName, edFiParent.firstName) &&
        Objects.equals(this.generationCodeSuffix, edFiParent.generationCodeSuffix) &&
        Objects.equals(this.highestCompletedLevelOfEducationDescriptor, edFiParent.highestCompletedLevelOfEducationDescriptor) &&
        Objects.equals(this.internationalAddresses, edFiParent.internationalAddresses) &&
        Objects.equals(this.languages, edFiParent.languages) &&
        Objects.equals(this.lastSurname, edFiParent.lastSurname) &&
        Objects.equals(this.loginId, edFiParent.loginId) &&
        Objects.equals(this.maidenName, edFiParent.maidenName) &&
        Objects.equals(this.middleName, edFiParent.middleName) &&
        Objects.equals(this.otherNames, edFiParent.otherNames) &&
        Objects.equals(this.personalIdentificationDocuments, edFiParent.personalIdentificationDocuments) &&
        Objects.equals(this.personalTitlePrefix, edFiParent.personalTitlePrefix) &&
        Objects.equals(this.sexDescriptor, edFiParent.sexDescriptor) &&
        Objects.equals(this.telephones, edFiParent.telephones) &&
        Objects.equals(this.etag, edFiParent.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parentUniqueId, personReference, addresses, electronicMails, firstName, generationCodeSuffix, highestCompletedLevelOfEducationDescriptor, internationalAddresses, languages, lastSurname, loginId, maidenName, middleName, otherNames, personalIdentificationDocuments, personalTitlePrefix, sexDescriptor, telephones, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiParent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentUniqueId: ").append(toIndentedString(parentUniqueId)).append("\n");
    sb.append("    personReference: ").append(toIndentedString(personReference)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    electronicMails: ").append(toIndentedString(electronicMails)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    generationCodeSuffix: ").append(toIndentedString(generationCodeSuffix)).append("\n");
    sb.append("    highestCompletedLevelOfEducationDescriptor: ").append(toIndentedString(highestCompletedLevelOfEducationDescriptor)).append("\n");
    sb.append("    internationalAddresses: ").append(toIndentedString(internationalAddresses)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    lastSurname: ").append(toIndentedString(lastSurname)).append("\n");
    sb.append("    loginId: ").append(toIndentedString(loginId)).append("\n");
    sb.append("    maidenName: ").append(toIndentedString(maidenName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    otherNames: ").append(toIndentedString(otherNames)).append("\n");
    sb.append("    personalIdentificationDocuments: ").append(toIndentedString(personalIdentificationDocuments)).append("\n");
    sb.append("    personalTitlePrefix: ").append(toIndentedString(personalTitlePrefix)).append("\n");
    sb.append("    sexDescriptor: ").append(toIndentedString(sexDescriptor)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

