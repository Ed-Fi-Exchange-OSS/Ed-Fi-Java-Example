/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiCourseReference;
import Models.Resources.EdFiCourseTranscriptAcademicSubject;
import Models.Resources.EdFiCourseTranscriptAlternativeCourseIdentificationCode;
import Models.Resources.EdFiCourseTranscriptCreditCategory;
import Models.Resources.EdFiCourseTranscriptEarnedAdditionalCredits;
import Models.Resources.EdFiEducationOrganizationReference;
import Models.Resources.EdFiStudentAcademicRecordReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EdFiCourseTranscript
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiCourseTranscript {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_COURSE_ATTEMPT_RESULT_DESCRIPTOR = "courseAttemptResultDescriptor";
  @SerializedName(SERIALIZED_NAME_COURSE_ATTEMPT_RESULT_DESCRIPTOR)
  private String courseAttemptResultDescriptor;

  public static final String SERIALIZED_NAME_COURSE_REFERENCE = "courseReference";
  @SerializedName(SERIALIZED_NAME_COURSE_REFERENCE)
  private EdFiCourseReference courseReference;

  public static final String SERIALIZED_NAME_EXTERNAL_EDUCATION_ORGANIZATION_REFERENCE = "externalEducationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference externalEducationOrganizationReference;

  public static final String SERIALIZED_NAME_STUDENT_ACADEMIC_RECORD_REFERENCE = "studentAcademicRecordReference";
  @SerializedName(SERIALIZED_NAME_STUDENT_ACADEMIC_RECORD_REFERENCE)
  private EdFiStudentAcademicRecordReference studentAcademicRecordReference;

  public static final String SERIALIZED_NAME_ACADEMIC_SUBJECTS = "academicSubjects";
  @SerializedName(SERIALIZED_NAME_ACADEMIC_SUBJECTS)
  private List<EdFiCourseTranscriptAcademicSubject> academicSubjects = null;

  public static final String SERIALIZED_NAME_ALTERNATIVE_COURSE_CODE = "alternativeCourseCode";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVE_COURSE_CODE)
  private String alternativeCourseCode;

  public static final String SERIALIZED_NAME_ALTERNATIVE_COURSE_IDENTIFICATION_CODES = "alternativeCourseIdentificationCodes";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVE_COURSE_IDENTIFICATION_CODES)
  private List<EdFiCourseTranscriptAlternativeCourseIdentificationCode> alternativeCourseIdentificationCodes = null;

  public static final String SERIALIZED_NAME_ALTERNATIVE_COURSE_TITLE = "alternativeCourseTitle";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVE_COURSE_TITLE)
  private String alternativeCourseTitle;

  public static final String SERIALIZED_NAME_ASSIGNING_ORGANIZATION_IDENTIFICATION_CODE = "assigningOrganizationIdentificationCode";
  @SerializedName(SERIALIZED_NAME_ASSIGNING_ORGANIZATION_IDENTIFICATION_CODE)
  private String assigningOrganizationIdentificationCode;

  public static final String SERIALIZED_NAME_ATTEMPTED_CREDIT_CONVERSION = "attemptedCreditConversion";
  @SerializedName(SERIALIZED_NAME_ATTEMPTED_CREDIT_CONVERSION)
  private Double attemptedCreditConversion;

  public static final String SERIALIZED_NAME_ATTEMPTED_CREDITS = "attemptedCredits";
  @SerializedName(SERIALIZED_NAME_ATTEMPTED_CREDITS)
  private Double attemptedCredits;

  public static final String SERIALIZED_NAME_ATTEMPTED_CREDIT_TYPE_DESCRIPTOR = "attemptedCreditTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_ATTEMPTED_CREDIT_TYPE_DESCRIPTOR)
  private String attemptedCreditTypeDescriptor;

  public static final String SERIALIZED_NAME_COURSE_CATALOG_U_R_L = "courseCatalogURL";
  @SerializedName(SERIALIZED_NAME_COURSE_CATALOG_U_R_L)
  private String courseCatalogURL;

  public static final String SERIALIZED_NAME_COURSE_REPEAT_CODE_DESCRIPTOR = "courseRepeatCodeDescriptor";
  @SerializedName(SERIALIZED_NAME_COURSE_REPEAT_CODE_DESCRIPTOR)
  private String courseRepeatCodeDescriptor;

  public static final String SERIALIZED_NAME_COURSE_TITLE = "courseTitle";
  @SerializedName(SERIALIZED_NAME_COURSE_TITLE)
  private String courseTitle;

  public static final String SERIALIZED_NAME_CREDIT_CATEGORIES = "creditCategories";
  @SerializedName(SERIALIZED_NAME_CREDIT_CATEGORIES)
  private List<EdFiCourseTranscriptCreditCategory> creditCategories = null;

  public static final String SERIALIZED_NAME_EARNED_ADDITIONAL_CREDITS = "earnedAdditionalCredits";
  @SerializedName(SERIALIZED_NAME_EARNED_ADDITIONAL_CREDITS)
  private List<EdFiCourseTranscriptEarnedAdditionalCredits> earnedAdditionalCredits = null;

  public static final String SERIALIZED_NAME_EARNED_CREDIT_CONVERSION = "earnedCreditConversion";
  @SerializedName(SERIALIZED_NAME_EARNED_CREDIT_CONVERSION)
  private Double earnedCreditConversion;

  public static final String SERIALIZED_NAME_EARNED_CREDITS = "earnedCredits";
  @SerializedName(SERIALIZED_NAME_EARNED_CREDITS)
  private Double earnedCredits;

  public static final String SERIALIZED_NAME_EARNED_CREDIT_TYPE_DESCRIPTOR = "earnedCreditTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_EARNED_CREDIT_TYPE_DESCRIPTOR)
  private String earnedCreditTypeDescriptor;

  public static final String SERIALIZED_NAME_FINAL_LETTER_GRADE_EARNED = "finalLetterGradeEarned";
  @SerializedName(SERIALIZED_NAME_FINAL_LETTER_GRADE_EARNED)
  private String finalLetterGradeEarned;

  public static final String SERIALIZED_NAME_FINAL_NUMERIC_GRADE_EARNED = "finalNumericGradeEarned";
  @SerializedName(SERIALIZED_NAME_FINAL_NUMERIC_GRADE_EARNED)
  private Double finalNumericGradeEarned;

  public static final String SERIALIZED_NAME_METHOD_CREDIT_EARNED_DESCRIPTOR = "methodCreditEarnedDescriptor";
  @SerializedName(SERIALIZED_NAME_METHOD_CREDIT_EARNED_DESCRIPTOR)
  private String methodCreditEarnedDescriptor;

  public static final String SERIALIZED_NAME_WHEN_TAKEN_GRADE_LEVEL_DESCRIPTOR = "whenTakenGradeLevelDescriptor";
  @SerializedName(SERIALIZED_NAME_WHEN_TAKEN_GRADE_LEVEL_DESCRIPTOR)
  private String whenTakenGradeLevelDescriptor;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiCourseTranscript() { 
  }

  public EdFiCourseTranscript id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiCourseTranscript courseAttemptResultDescriptor(String courseAttemptResultDescriptor) {
    
    this.courseAttemptResultDescriptor = courseAttemptResultDescriptor;
    return this;
  }

   /**
   * The result from the student&#39;s attempt to take the course, for example:         Pass         Fail         Incomplete         Withdrawn.
   * @return courseAttemptResultDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The result from the student's attempt to take the course, for example:         Pass         Fail         Incomplete         Withdrawn.")

  public String getCourseAttemptResultDescriptor() {
    return courseAttemptResultDescriptor;
  }


  public void setCourseAttemptResultDescriptor(String courseAttemptResultDescriptor) {
    this.courseAttemptResultDescriptor = courseAttemptResultDescriptor;
  }


  public EdFiCourseTranscript courseReference(EdFiCourseReference courseReference) {
    
    this.courseReference = courseReference;
    return this;
  }

   /**
   * Get courseReference
   * @return courseReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiCourseReference getCourseReference() {
    return courseReference;
  }


  public void setCourseReference(EdFiCourseReference courseReference) {
    this.courseReference = courseReference;
  }


  public EdFiCourseTranscript externalEducationOrganizationReference(EdFiEducationOrganizationReference externalEducationOrganizationReference) {
    
    this.externalEducationOrganizationReference = externalEducationOrganizationReference;
    return this;
  }

   /**
   * Get externalEducationOrganizationReference
   * @return externalEducationOrganizationReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiEducationOrganizationReference getExternalEducationOrganizationReference() {
    return externalEducationOrganizationReference;
  }


  public void setExternalEducationOrganizationReference(EdFiEducationOrganizationReference externalEducationOrganizationReference) {
    this.externalEducationOrganizationReference = externalEducationOrganizationReference;
  }


  public EdFiCourseTranscript studentAcademicRecordReference(EdFiStudentAcademicRecordReference studentAcademicRecordReference) {
    
    this.studentAcademicRecordReference = studentAcademicRecordReference;
    return this;
  }

   /**
   * Get studentAcademicRecordReference
   * @return studentAcademicRecordReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStudentAcademicRecordReference getStudentAcademicRecordReference() {
    return studentAcademicRecordReference;
  }


  public void setStudentAcademicRecordReference(EdFiStudentAcademicRecordReference studentAcademicRecordReference) {
    this.studentAcademicRecordReference = studentAcademicRecordReference;
  }


  public EdFiCourseTranscript academicSubjects(List<EdFiCourseTranscriptAcademicSubject> academicSubjects) {
    
    this.academicSubjects = academicSubjects;
    return this;
  }

  public EdFiCourseTranscript addAcademicSubjectsItem(EdFiCourseTranscriptAcademicSubject academicSubjectsItem) {
    if (this.academicSubjects == null) {
      this.academicSubjects = new ArrayList<EdFiCourseTranscriptAcademicSubject>();
    }
    this.academicSubjects.add(academicSubjectsItem);
    return this;
  }

   /**
   * An unordered collection of courseTranscriptAcademicSubjects. The subject area for the course transcript credits awarded in the course transcript.
   * @return academicSubjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of courseTranscriptAcademicSubjects. The subject area for the course transcript credits awarded in the course transcript.")

  public List<EdFiCourseTranscriptAcademicSubject> getAcademicSubjects() {
    return academicSubjects;
  }


  public void setAcademicSubjects(List<EdFiCourseTranscriptAcademicSubject> academicSubjects) {
    this.academicSubjects = academicSubjects;
  }


  public EdFiCourseTranscript alternativeCourseCode(String alternativeCourseCode) {
    
    this.alternativeCourseCode = alternativeCourseCode;
    return this;
  }

   /**
   * The local code assigned by the school that identifies the course offering, the code from an external educational organization, or other alternate course code.
   * @return alternativeCourseCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The local code assigned by the school that identifies the course offering, the code from an external educational organization, or other alternate course code.")

  public String getAlternativeCourseCode() {
    return alternativeCourseCode;
  }


  public void setAlternativeCourseCode(String alternativeCourseCode) {
    this.alternativeCourseCode = alternativeCourseCode;
  }


  public EdFiCourseTranscript alternativeCourseIdentificationCodes(List<EdFiCourseTranscriptAlternativeCourseIdentificationCode> alternativeCourseIdentificationCodes) {
    
    this.alternativeCourseIdentificationCodes = alternativeCourseIdentificationCodes;
    return this;
  }

  public EdFiCourseTranscript addAlternativeCourseIdentificationCodesItem(EdFiCourseTranscriptAlternativeCourseIdentificationCode alternativeCourseIdentificationCodesItem) {
    if (this.alternativeCourseIdentificationCodes == null) {
      this.alternativeCourseIdentificationCodes = new ArrayList<EdFiCourseTranscriptAlternativeCourseIdentificationCode>();
    }
    this.alternativeCourseIdentificationCodes.add(alternativeCourseIdentificationCodesItem);
    return this;
  }

   /**
   * An unordered collection of courseTranscriptAlternativeCourseIdentificationCodes. The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.
   * @return alternativeCourseIdentificationCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of courseTranscriptAlternativeCourseIdentificationCodes. The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.")

  public List<EdFiCourseTranscriptAlternativeCourseIdentificationCode> getAlternativeCourseIdentificationCodes() {
    return alternativeCourseIdentificationCodes;
  }


  public void setAlternativeCourseIdentificationCodes(List<EdFiCourseTranscriptAlternativeCourseIdentificationCode> alternativeCourseIdentificationCodes) {
    this.alternativeCourseIdentificationCodes = alternativeCourseIdentificationCodes;
  }


  public EdFiCourseTranscript alternativeCourseTitle(String alternativeCourseTitle) {
    
    this.alternativeCourseTitle = alternativeCourseTitle;
    return this;
  }

   /**
   * The descriptive name given to a course of study offered in the school, if different from the CourseTitle.
   * @return alternativeCourseTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The descriptive name given to a course of study offered in the school, if different from the CourseTitle.")

  public String getAlternativeCourseTitle() {
    return alternativeCourseTitle;
  }


  public void setAlternativeCourseTitle(String alternativeCourseTitle) {
    this.alternativeCourseTitle = alternativeCourseTitle;
  }


  public EdFiCourseTranscript assigningOrganizationIdentificationCode(String assigningOrganizationIdentificationCode) {
    
    this.assigningOrganizationIdentificationCode = assigningOrganizationIdentificationCode;
    return this;
  }

   /**
   * The organization code or name assigning the course identification code.
   * @return assigningOrganizationIdentificationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The organization code or name assigning the course identification code.")

  public String getAssigningOrganizationIdentificationCode() {
    return assigningOrganizationIdentificationCode;
  }


  public void setAssigningOrganizationIdentificationCode(String assigningOrganizationIdentificationCode) {
    this.assigningOrganizationIdentificationCode = assigningOrganizationIdentificationCode;
  }


  public EdFiCourseTranscript attemptedCreditConversion(Double attemptedCreditConversion) {
    
    this.attemptedCreditConversion = attemptedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return attemptedCreditConversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")

  public Double getAttemptedCreditConversion() {
    return attemptedCreditConversion;
  }


  public void setAttemptedCreditConversion(Double attemptedCreditConversion) {
    this.attemptedCreditConversion = attemptedCreditConversion;
  }


  public EdFiCourseTranscript attemptedCredits(Double attemptedCredits) {
    
    this.attemptedCredits = attemptedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return attemptedCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of credits or units of value awarded for the completion of a course.")

  public Double getAttemptedCredits() {
    return attemptedCredits;
  }


  public void setAttemptedCredits(Double attemptedCredits) {
    this.attemptedCredits = attemptedCredits;
  }


  public EdFiCourseTranscript attemptedCreditTypeDescriptor(String attemptedCreditTypeDescriptor) {
    
    this.attemptedCreditTypeDescriptor = attemptedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return attemptedCreditTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of credits or units of value awarded for the completion of a course.")

  public String getAttemptedCreditTypeDescriptor() {
    return attemptedCreditTypeDescriptor;
  }


  public void setAttemptedCreditTypeDescriptor(String attemptedCreditTypeDescriptor) {
    this.attemptedCreditTypeDescriptor = attemptedCreditTypeDescriptor;
  }


  public EdFiCourseTranscript courseCatalogURL(String courseCatalogURL) {
    
    this.courseCatalogURL = courseCatalogURL;
    return this;
  }

   /**
   * The URL for the course catalog that defines the course identification code.
   * @return courseCatalogURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL for the course catalog that defines the course identification code.")

  public String getCourseCatalogURL() {
    return courseCatalogURL;
  }


  public void setCourseCatalogURL(String courseCatalogURL) {
    this.courseCatalogURL = courseCatalogURL;
  }


  public EdFiCourseTranscript courseRepeatCodeDescriptor(String courseRepeatCodeDescriptor) {
    
    this.courseRepeatCodeDescriptor = courseRepeatCodeDescriptor;
    return this;
  }

   /**
   * Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student&#39;s academic grade average.
   * @return courseRepeatCodeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student's academic grade average.")

  public String getCourseRepeatCodeDescriptor() {
    return courseRepeatCodeDescriptor;
  }


  public void setCourseRepeatCodeDescriptor(String courseRepeatCodeDescriptor) {
    this.courseRepeatCodeDescriptor = courseRepeatCodeDescriptor;
  }


  public EdFiCourseTranscript courseTitle(String courseTitle) {
    
    this.courseTitle = courseTitle;
    return this;
  }

   /**
   * The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).
   * @return courseTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).")

  public String getCourseTitle() {
    return courseTitle;
  }


  public void setCourseTitle(String courseTitle) {
    this.courseTitle = courseTitle;
  }


  public EdFiCourseTranscript creditCategories(List<EdFiCourseTranscriptCreditCategory> creditCategories) {
    
    this.creditCategories = creditCategories;
    return this;
  }

  public EdFiCourseTranscript addCreditCategoriesItem(EdFiCourseTranscriptCreditCategory creditCategoriesItem) {
    if (this.creditCategories == null) {
      this.creditCategories = new ArrayList<EdFiCourseTranscriptCreditCategory>();
    }
    this.creditCategories.add(creditCategoriesItem);
    return this;
  }

   /**
   * An unordered collection of courseTranscriptCreditCategories. A categorization for the course transcript credits awarded in the course transcript.
   * @return creditCategories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of courseTranscriptCreditCategories. A categorization for the course transcript credits awarded in the course transcript.")

  public List<EdFiCourseTranscriptCreditCategory> getCreditCategories() {
    return creditCategories;
  }


  public void setCreditCategories(List<EdFiCourseTranscriptCreditCategory> creditCategories) {
    this.creditCategories = creditCategories;
  }


  public EdFiCourseTranscript earnedAdditionalCredits(List<EdFiCourseTranscriptEarnedAdditionalCredits> earnedAdditionalCredits) {
    
    this.earnedAdditionalCredits = earnedAdditionalCredits;
    return this;
  }

  public EdFiCourseTranscript addEarnedAdditionalCreditsItem(EdFiCourseTranscriptEarnedAdditionalCredits earnedAdditionalCreditsItem) {
    if (this.earnedAdditionalCredits == null) {
      this.earnedAdditionalCredits = new ArrayList<EdFiCourseTranscriptEarnedAdditionalCredits>();
    }
    this.earnedAdditionalCredits.add(earnedAdditionalCreditsItem);
    return this;
  }

   /**
   * An unordered collection of courseTranscriptEarnedAdditionalCredits. The number of additional credits a student attempted and could earn for successfully completing a given course (e.g., dual credit, AP, IB).
   * @return earnedAdditionalCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of courseTranscriptEarnedAdditionalCredits. The number of additional credits a student attempted and could earn for successfully completing a given course (e.g., dual credit, AP, IB).")

  public List<EdFiCourseTranscriptEarnedAdditionalCredits> getEarnedAdditionalCredits() {
    return earnedAdditionalCredits;
  }


  public void setEarnedAdditionalCredits(List<EdFiCourseTranscriptEarnedAdditionalCredits> earnedAdditionalCredits) {
    this.earnedAdditionalCredits = earnedAdditionalCredits;
  }


  public EdFiCourseTranscript earnedCreditConversion(Double earnedCreditConversion) {
    
    this.earnedCreditConversion = earnedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return earnedCreditConversion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")

  public Double getEarnedCreditConversion() {
    return earnedCreditConversion;
  }


  public void setEarnedCreditConversion(Double earnedCreditConversion) {
    this.earnedCreditConversion = earnedCreditConversion;
  }


  public EdFiCourseTranscript earnedCredits(Double earnedCredits) {
    
    this.earnedCredits = earnedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return earnedCredits
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The value of credits or units of value awarded for the completion of a course.")

  public Double getEarnedCredits() {
    return earnedCredits;
  }


  public void setEarnedCredits(Double earnedCredits) {
    this.earnedCredits = earnedCredits;
  }


  public EdFiCourseTranscript earnedCreditTypeDescriptor(String earnedCreditTypeDescriptor) {
    
    this.earnedCreditTypeDescriptor = earnedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return earnedCreditTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of credits or units of value awarded for the completion of a course.")

  public String getEarnedCreditTypeDescriptor() {
    return earnedCreditTypeDescriptor;
  }


  public void setEarnedCreditTypeDescriptor(String earnedCreditTypeDescriptor) {
    this.earnedCreditTypeDescriptor = earnedCreditTypeDescriptor;
  }


  public EdFiCourseTranscript finalLetterGradeEarned(String finalLetterGradeEarned) {
    
    this.finalLetterGradeEarned = finalLetterGradeEarned;
    return this;
  }

   /**
   * The final indicator of student performance in a class as submitted by the instructor.
   * @return finalLetterGradeEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The final indicator of student performance in a class as submitted by the instructor.")

  public String getFinalLetterGradeEarned() {
    return finalLetterGradeEarned;
  }


  public void setFinalLetterGradeEarned(String finalLetterGradeEarned) {
    this.finalLetterGradeEarned = finalLetterGradeEarned;
  }


  public EdFiCourseTranscript finalNumericGradeEarned(Double finalNumericGradeEarned) {
    
    this.finalNumericGradeEarned = finalNumericGradeEarned;
    return this;
  }

   /**
   * The final indicator of student performance in a class as submitted by the instructor.
   * @return finalNumericGradeEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The final indicator of student performance in a class as submitted by the instructor.")

  public Double getFinalNumericGradeEarned() {
    return finalNumericGradeEarned;
  }


  public void setFinalNumericGradeEarned(Double finalNumericGradeEarned) {
    this.finalNumericGradeEarned = finalNumericGradeEarned;
  }


  public EdFiCourseTranscript methodCreditEarnedDescriptor(String methodCreditEarnedDescriptor) {
    
    this.methodCreditEarnedDescriptor = methodCreditEarnedDescriptor;
    return this;
  }

   /**
   * The method the credits were earned (e.g., Classroom, Examination, Transfer).
   * @return methodCreditEarnedDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The method the credits were earned (e.g., Classroom, Examination, Transfer).")

  public String getMethodCreditEarnedDescriptor() {
    return methodCreditEarnedDescriptor;
  }


  public void setMethodCreditEarnedDescriptor(String methodCreditEarnedDescriptor) {
    this.methodCreditEarnedDescriptor = methodCreditEarnedDescriptor;
  }


  public EdFiCourseTranscript whenTakenGradeLevelDescriptor(String whenTakenGradeLevelDescriptor) {
    
    this.whenTakenGradeLevelDescriptor = whenTakenGradeLevelDescriptor;
    return this;
  }

   /**
   * Student&#39;s grade level at time of course.
   * @return whenTakenGradeLevelDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Student's grade level at time of course.")

  public String getWhenTakenGradeLevelDescriptor() {
    return whenTakenGradeLevelDescriptor;
  }


  public void setWhenTakenGradeLevelDescriptor(String whenTakenGradeLevelDescriptor) {
    this.whenTakenGradeLevelDescriptor = whenTakenGradeLevelDescriptor;
  }


  public EdFiCourseTranscript etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiCourseTranscript edFiCourseTranscript = (EdFiCourseTranscript) o;
    return Objects.equals(this.id, edFiCourseTranscript.id) &&
        Objects.equals(this.courseAttemptResultDescriptor, edFiCourseTranscript.courseAttemptResultDescriptor) &&
        Objects.equals(this.courseReference, edFiCourseTranscript.courseReference) &&
        Objects.equals(this.externalEducationOrganizationReference, edFiCourseTranscript.externalEducationOrganizationReference) &&
        Objects.equals(this.studentAcademicRecordReference, edFiCourseTranscript.studentAcademicRecordReference) &&
        Objects.equals(this.academicSubjects, edFiCourseTranscript.academicSubjects) &&
        Objects.equals(this.alternativeCourseCode, edFiCourseTranscript.alternativeCourseCode) &&
        Objects.equals(this.alternativeCourseIdentificationCodes, edFiCourseTranscript.alternativeCourseIdentificationCodes) &&
        Objects.equals(this.alternativeCourseTitle, edFiCourseTranscript.alternativeCourseTitle) &&
        Objects.equals(this.assigningOrganizationIdentificationCode, edFiCourseTranscript.assigningOrganizationIdentificationCode) &&
        Objects.equals(this.attemptedCreditConversion, edFiCourseTranscript.attemptedCreditConversion) &&
        Objects.equals(this.attemptedCredits, edFiCourseTranscript.attemptedCredits) &&
        Objects.equals(this.attemptedCreditTypeDescriptor, edFiCourseTranscript.attemptedCreditTypeDescriptor) &&
        Objects.equals(this.courseCatalogURL, edFiCourseTranscript.courseCatalogURL) &&
        Objects.equals(this.courseRepeatCodeDescriptor, edFiCourseTranscript.courseRepeatCodeDescriptor) &&
        Objects.equals(this.courseTitle, edFiCourseTranscript.courseTitle) &&
        Objects.equals(this.creditCategories, edFiCourseTranscript.creditCategories) &&
        Objects.equals(this.earnedAdditionalCredits, edFiCourseTranscript.earnedAdditionalCredits) &&
        Objects.equals(this.earnedCreditConversion, edFiCourseTranscript.earnedCreditConversion) &&
        Objects.equals(this.earnedCredits, edFiCourseTranscript.earnedCredits) &&
        Objects.equals(this.earnedCreditTypeDescriptor, edFiCourseTranscript.earnedCreditTypeDescriptor) &&
        Objects.equals(this.finalLetterGradeEarned, edFiCourseTranscript.finalLetterGradeEarned) &&
        Objects.equals(this.finalNumericGradeEarned, edFiCourseTranscript.finalNumericGradeEarned) &&
        Objects.equals(this.methodCreditEarnedDescriptor, edFiCourseTranscript.methodCreditEarnedDescriptor) &&
        Objects.equals(this.whenTakenGradeLevelDescriptor, edFiCourseTranscript.whenTakenGradeLevelDescriptor) &&
        Objects.equals(this.etag, edFiCourseTranscript.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, courseAttemptResultDescriptor, courseReference, externalEducationOrganizationReference, studentAcademicRecordReference, academicSubjects, alternativeCourseCode, alternativeCourseIdentificationCodes, alternativeCourseTitle, assigningOrganizationIdentificationCode, attemptedCreditConversion, attemptedCredits, attemptedCreditTypeDescriptor, courseCatalogURL, courseRepeatCodeDescriptor, courseTitle, creditCategories, earnedAdditionalCredits, earnedCreditConversion, earnedCredits, earnedCreditTypeDescriptor, finalLetterGradeEarned, finalNumericGradeEarned, methodCreditEarnedDescriptor, whenTakenGradeLevelDescriptor, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiCourseTranscript {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    courseAttemptResultDescriptor: ").append(toIndentedString(courseAttemptResultDescriptor)).append("\n");
    sb.append("    courseReference: ").append(toIndentedString(courseReference)).append("\n");
    sb.append("    externalEducationOrganizationReference: ").append(toIndentedString(externalEducationOrganizationReference)).append("\n");
    sb.append("    studentAcademicRecordReference: ").append(toIndentedString(studentAcademicRecordReference)).append("\n");
    sb.append("    academicSubjects: ").append(toIndentedString(academicSubjects)).append("\n");
    sb.append("    alternativeCourseCode: ").append(toIndentedString(alternativeCourseCode)).append("\n");
    sb.append("    alternativeCourseIdentificationCodes: ").append(toIndentedString(alternativeCourseIdentificationCodes)).append("\n");
    sb.append("    alternativeCourseTitle: ").append(toIndentedString(alternativeCourseTitle)).append("\n");
    sb.append("    assigningOrganizationIdentificationCode: ").append(toIndentedString(assigningOrganizationIdentificationCode)).append("\n");
    sb.append("    attemptedCreditConversion: ").append(toIndentedString(attemptedCreditConversion)).append("\n");
    sb.append("    attemptedCredits: ").append(toIndentedString(attemptedCredits)).append("\n");
    sb.append("    attemptedCreditTypeDescriptor: ").append(toIndentedString(attemptedCreditTypeDescriptor)).append("\n");
    sb.append("    courseCatalogURL: ").append(toIndentedString(courseCatalogURL)).append("\n");
    sb.append("    courseRepeatCodeDescriptor: ").append(toIndentedString(courseRepeatCodeDescriptor)).append("\n");
    sb.append("    courseTitle: ").append(toIndentedString(courseTitle)).append("\n");
    sb.append("    creditCategories: ").append(toIndentedString(creditCategories)).append("\n");
    sb.append("    earnedAdditionalCredits: ").append(toIndentedString(earnedAdditionalCredits)).append("\n");
    sb.append("    earnedCreditConversion: ").append(toIndentedString(earnedCreditConversion)).append("\n");
    sb.append("    earnedCredits: ").append(toIndentedString(earnedCredits)).append("\n");
    sb.append("    earnedCreditTypeDescriptor: ").append(toIndentedString(earnedCreditTypeDescriptor)).append("\n");
    sb.append("    finalLetterGradeEarned: ").append(toIndentedString(finalLetterGradeEarned)).append("\n");
    sb.append("    finalNumericGradeEarned: ").append(toIndentedString(finalNumericGradeEarned)).append("\n");
    sb.append("    methodCreditEarnedDescriptor: ").append(toIndentedString(methodCreditEarnedDescriptor)).append("\n");
    sb.append("    whenTakenGradeLevelDescriptor: ").append(toIndentedString(whenTakenGradeLevelDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

