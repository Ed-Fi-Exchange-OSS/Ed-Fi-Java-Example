/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiLearningStandardReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EdFiGradeLearningStandardGrade
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiGradeLearningStandardGrade {
  public static final String SERIALIZED_NAME_PERFORMANCE_BASE_CONVERSION_DESCRIPTOR = "performanceBaseConversionDescriptor";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_BASE_CONVERSION_DESCRIPTOR)
  private String performanceBaseConversionDescriptor;

  public static final String SERIALIZED_NAME_DIAGNOSTIC_STATEMENT = "diagnosticStatement";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTIC_STATEMENT)
  private String diagnosticStatement;

  public static final String SERIALIZED_NAME_LETTER_GRADE_EARNED = "letterGradeEarned";
  @SerializedName(SERIALIZED_NAME_LETTER_GRADE_EARNED)
  private String letterGradeEarned;

  public static final String SERIALIZED_NAME_NUMERIC_GRADE_EARNED = "numericGradeEarned";
  @SerializedName(SERIALIZED_NAME_NUMERIC_GRADE_EARNED)
  private Double numericGradeEarned;

  public static final String SERIALIZED_NAME_LEARNING_STANDARD_REFERENCE = "learningStandardReference";
  @SerializedName(SERIALIZED_NAME_LEARNING_STANDARD_REFERENCE)
  private EdFiLearningStandardReference learningStandardReference;

  public EdFiGradeLearningStandardGrade() { 
  }

  public EdFiGradeLearningStandardGrade performanceBaseConversionDescriptor(String performanceBaseConversionDescriptor) {
    
    this.performanceBaseConversionDescriptor = performanceBaseConversionDescriptor;
    return this;
  }

   /**
   * A performance level that describes the student proficiency.
   * @return performanceBaseConversionDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A performance level that describes the student proficiency.")

  public String getPerformanceBaseConversionDescriptor() {
    return performanceBaseConversionDescriptor;
  }


  public void setPerformanceBaseConversionDescriptor(String performanceBaseConversionDescriptor) {
    this.performanceBaseConversionDescriptor = performanceBaseConversionDescriptor;
  }


  public EdFiGradeLearningStandardGrade diagnosticStatement(String diagnosticStatement) {
    
    this.diagnosticStatement = diagnosticStatement;
    return this;
  }

   /**
   * A statement provided by the teacher that provides information in addition to the grade or assessment score.
   * @return diagnosticStatement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A statement provided by the teacher that provides information in addition to the grade or assessment score.")

  public String getDiagnosticStatement() {
    return diagnosticStatement;
  }


  public void setDiagnosticStatement(String diagnosticStatement) {
    this.diagnosticStatement = diagnosticStatement;
  }


  public EdFiGradeLearningStandardGrade letterGradeEarned(String letterGradeEarned) {
    
    this.letterGradeEarned = letterGradeEarned;
    return this;
  }

   /**
   * A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.
   * @return letterGradeEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.")

  public String getLetterGradeEarned() {
    return letterGradeEarned;
  }


  public void setLetterGradeEarned(String letterGradeEarned) {
    this.letterGradeEarned = letterGradeEarned;
  }


  public EdFiGradeLearningStandardGrade numericGradeEarned(Double numericGradeEarned) {
    
    this.numericGradeEarned = numericGradeEarned;
    return this;
  }

   /**
   * A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.
   * @return numericGradeEarned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.")

  public Double getNumericGradeEarned() {
    return numericGradeEarned;
  }


  public void setNumericGradeEarned(Double numericGradeEarned) {
    this.numericGradeEarned = numericGradeEarned;
  }


  public EdFiGradeLearningStandardGrade learningStandardReference(EdFiLearningStandardReference learningStandardReference) {
    
    this.learningStandardReference = learningStandardReference;
    return this;
  }

   /**
   * Get learningStandardReference
   * @return learningStandardReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiLearningStandardReference getLearningStandardReference() {
    return learningStandardReference;
  }


  public void setLearningStandardReference(EdFiLearningStandardReference learningStandardReference) {
    this.learningStandardReference = learningStandardReference;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiGradeLearningStandardGrade edFiGradeLearningStandardGrade = (EdFiGradeLearningStandardGrade) o;
    return Objects.equals(this.performanceBaseConversionDescriptor, edFiGradeLearningStandardGrade.performanceBaseConversionDescriptor) &&
        Objects.equals(this.diagnosticStatement, edFiGradeLearningStandardGrade.diagnosticStatement) &&
        Objects.equals(this.letterGradeEarned, edFiGradeLearningStandardGrade.letterGradeEarned) &&
        Objects.equals(this.numericGradeEarned, edFiGradeLearningStandardGrade.numericGradeEarned) &&
        Objects.equals(this.learningStandardReference, edFiGradeLearningStandardGrade.learningStandardReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(performanceBaseConversionDescriptor, diagnosticStatement, letterGradeEarned, numericGradeEarned, learningStandardReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiGradeLearningStandardGrade {\n");
    sb.append("    performanceBaseConversionDescriptor: ").append(toIndentedString(performanceBaseConversionDescriptor)).append("\n");
    sb.append("    diagnosticStatement: ").append(toIndentedString(diagnosticStatement)).append("\n");
    sb.append("    letterGradeEarned: ").append(toIndentedString(letterGradeEarned)).append("\n");
    sb.append("    numericGradeEarned: ").append(toIndentedString(numericGradeEarned)).append("\n");
    sb.append("    learningStandardReference: ").append(toIndentedString(learningStandardReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

