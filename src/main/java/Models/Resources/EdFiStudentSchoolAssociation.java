/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiCalendarReference;
import Models.Resources.EdFiGraduationPlanReference;
import Models.Resources.EdFiSchoolReference;
import Models.Resources.EdFiSchoolYearTypeReference;
import Models.Resources.EdFiStudentReference;
import Models.Resources.EdFiStudentSchoolAssociationAlternativeGraduationPlan;
import Models.Resources.EdFiStudentSchoolAssociationEducationPlan;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * EdFiStudentSchoolAssociation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiStudentSchoolAssociation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ENTRY_DATE = "entryDate";
  @SerializedName(SERIALIZED_NAME_ENTRY_DATE)
  private LocalDate entryDate;

  public static final String SERIALIZED_NAME_CALENDAR_REFERENCE = "calendarReference";
  @SerializedName(SERIALIZED_NAME_CALENDAR_REFERENCE)
  private EdFiCalendarReference calendarReference;

  public static final String SERIALIZED_NAME_CLASS_OF_SCHOOL_YEAR_TYPE_REFERENCE = "classOfSchoolYearTypeReference";
  @SerializedName(SERIALIZED_NAME_CLASS_OF_SCHOOL_YEAR_TYPE_REFERENCE)
  private EdFiSchoolYearTypeReference classOfSchoolYearTypeReference;

  public static final String SERIALIZED_NAME_GRADUATION_PLAN_REFERENCE = "graduationPlanReference";
  @SerializedName(SERIALIZED_NAME_GRADUATION_PLAN_REFERENCE)
  private EdFiGraduationPlanReference graduationPlanReference;

  public static final String SERIALIZED_NAME_SCHOOL_REFERENCE = "schoolReference";
  @SerializedName(SERIALIZED_NAME_SCHOOL_REFERENCE)
  private EdFiSchoolReference schoolReference;

  public static final String SERIALIZED_NAME_SCHOOL_YEAR_TYPE_REFERENCE = "schoolYearTypeReference";
  @SerializedName(SERIALIZED_NAME_SCHOOL_YEAR_TYPE_REFERENCE)
  private EdFiSchoolYearTypeReference schoolYearTypeReference;

  public static final String SERIALIZED_NAME_STUDENT_REFERENCE = "studentReference";
  @SerializedName(SERIALIZED_NAME_STUDENT_REFERENCE)
  private EdFiStudentReference studentReference;

  public static final String SERIALIZED_NAME_ALTERNATIVE_GRADUATION_PLANS = "alternativeGraduationPlans";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVE_GRADUATION_PLANS)
  private List<EdFiStudentSchoolAssociationAlternativeGraduationPlan> alternativeGraduationPlans = null;

  public static final String SERIALIZED_NAME_EDUCATION_PLANS = "educationPlans";
  @SerializedName(SERIALIZED_NAME_EDUCATION_PLANS)
  private List<EdFiStudentSchoolAssociationEducationPlan> educationPlans = null;

  public static final String SERIALIZED_NAME_EMPLOYED_WHILE_ENROLLED = "employedWhileEnrolled";
  @SerializedName(SERIALIZED_NAME_EMPLOYED_WHILE_ENROLLED)
  private Boolean employedWhileEnrolled;

  public static final String SERIALIZED_NAME_ENTRY_GRADE_LEVEL_DESCRIPTOR = "entryGradeLevelDescriptor";
  @SerializedName(SERIALIZED_NAME_ENTRY_GRADE_LEVEL_DESCRIPTOR)
  private String entryGradeLevelDescriptor;

  public static final String SERIALIZED_NAME_ENTRY_GRADE_LEVEL_REASON_DESCRIPTOR = "entryGradeLevelReasonDescriptor";
  @SerializedName(SERIALIZED_NAME_ENTRY_GRADE_LEVEL_REASON_DESCRIPTOR)
  private String entryGradeLevelReasonDescriptor;

  public static final String SERIALIZED_NAME_ENTRY_TYPE_DESCRIPTOR = "entryTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_ENTRY_TYPE_DESCRIPTOR)
  private String entryTypeDescriptor;

  public static final String SERIALIZED_NAME_EXIT_WITHDRAW_DATE = "exitWithdrawDate";
  @SerializedName(SERIALIZED_NAME_EXIT_WITHDRAW_DATE)
  private LocalDate exitWithdrawDate;

  public static final String SERIALIZED_NAME_EXIT_WITHDRAW_TYPE_DESCRIPTOR = "exitWithdrawTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_EXIT_WITHDRAW_TYPE_DESCRIPTOR)
  private String exitWithdrawTypeDescriptor;

  public static final String SERIALIZED_NAME_FULL_TIME_EQUIVALENCY = "fullTimeEquivalency";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_EQUIVALENCY)
  private Double fullTimeEquivalency;

  public static final String SERIALIZED_NAME_PRIMARY_SCHOOL = "primarySchool";
  @SerializedName(SERIALIZED_NAME_PRIMARY_SCHOOL)
  private Boolean primarySchool;

  public static final String SERIALIZED_NAME_REPEAT_GRADE_INDICATOR = "repeatGradeIndicator";
  @SerializedName(SERIALIZED_NAME_REPEAT_GRADE_INDICATOR)
  private Boolean repeatGradeIndicator;

  public static final String SERIALIZED_NAME_RESIDENCY_STATUS_DESCRIPTOR = "residencyStatusDescriptor";
  @SerializedName(SERIALIZED_NAME_RESIDENCY_STATUS_DESCRIPTOR)
  private String residencyStatusDescriptor;

  public static final String SERIALIZED_NAME_SCHOOL_CHOICE_TRANSFER = "schoolChoiceTransfer";
  @SerializedName(SERIALIZED_NAME_SCHOOL_CHOICE_TRANSFER)
  private Boolean schoolChoiceTransfer;

  public static final String SERIALIZED_NAME_TERM_COMPLETION_INDICATOR = "termCompletionIndicator";
  @SerializedName(SERIALIZED_NAME_TERM_COMPLETION_INDICATOR)
  private Boolean termCompletionIndicator;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiStudentSchoolAssociation() { 
  }

  public EdFiStudentSchoolAssociation id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiStudentSchoolAssociation entryDate(LocalDate entryDate) {
    
    this.entryDate = entryDate;
    return this;
  }

   /**
   * The month, day, and year on which an individual enters and begins to receive instructional services in a school.
   * @return entryDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The month, day, and year on which an individual enters and begins to receive instructional services in a school.")

  public LocalDate getEntryDate() {
    return entryDate;
  }


  public void setEntryDate(LocalDate entryDate) {
    this.entryDate = entryDate;
  }


  public EdFiStudentSchoolAssociation calendarReference(EdFiCalendarReference calendarReference) {
    
    this.calendarReference = calendarReference;
    return this;
  }

   /**
   * Get calendarReference
   * @return calendarReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiCalendarReference getCalendarReference() {
    return calendarReference;
  }


  public void setCalendarReference(EdFiCalendarReference calendarReference) {
    this.calendarReference = calendarReference;
  }


  public EdFiStudentSchoolAssociation classOfSchoolYearTypeReference(EdFiSchoolYearTypeReference classOfSchoolYearTypeReference) {
    
    this.classOfSchoolYearTypeReference = classOfSchoolYearTypeReference;
    return this;
  }

   /**
   * Get classOfSchoolYearTypeReference
   * @return classOfSchoolYearTypeReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiSchoolYearTypeReference getClassOfSchoolYearTypeReference() {
    return classOfSchoolYearTypeReference;
  }


  public void setClassOfSchoolYearTypeReference(EdFiSchoolYearTypeReference classOfSchoolYearTypeReference) {
    this.classOfSchoolYearTypeReference = classOfSchoolYearTypeReference;
  }


  public EdFiStudentSchoolAssociation graduationPlanReference(EdFiGraduationPlanReference graduationPlanReference) {
    
    this.graduationPlanReference = graduationPlanReference;
    return this;
  }

   /**
   * Get graduationPlanReference
   * @return graduationPlanReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiGraduationPlanReference getGraduationPlanReference() {
    return graduationPlanReference;
  }


  public void setGraduationPlanReference(EdFiGraduationPlanReference graduationPlanReference) {
    this.graduationPlanReference = graduationPlanReference;
  }


  public EdFiStudentSchoolAssociation schoolReference(EdFiSchoolReference schoolReference) {
    
    this.schoolReference = schoolReference;
    return this;
  }

   /**
   * Get schoolReference
   * @return schoolReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiSchoolReference getSchoolReference() {
    return schoolReference;
  }


  public void setSchoolReference(EdFiSchoolReference schoolReference) {
    this.schoolReference = schoolReference;
  }


  public EdFiStudentSchoolAssociation schoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    
    this.schoolYearTypeReference = schoolYearTypeReference;
    return this;
  }

   /**
   * Get schoolYearTypeReference
   * @return schoolYearTypeReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiSchoolYearTypeReference getSchoolYearTypeReference() {
    return schoolYearTypeReference;
  }


  public void setSchoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    this.schoolYearTypeReference = schoolYearTypeReference;
  }


  public EdFiStudentSchoolAssociation studentReference(EdFiStudentReference studentReference) {
    
    this.studentReference = studentReference;
    return this;
  }

   /**
   * Get studentReference
   * @return studentReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStudentReference getStudentReference() {
    return studentReference;
  }


  public void setStudentReference(EdFiStudentReference studentReference) {
    this.studentReference = studentReference;
  }


  public EdFiStudentSchoolAssociation alternativeGraduationPlans(List<EdFiStudentSchoolAssociationAlternativeGraduationPlan> alternativeGraduationPlans) {
    
    this.alternativeGraduationPlans = alternativeGraduationPlans;
    return this;
  }

  public EdFiStudentSchoolAssociation addAlternativeGraduationPlansItem(EdFiStudentSchoolAssociationAlternativeGraduationPlan alternativeGraduationPlansItem) {
    if (this.alternativeGraduationPlans == null) {
      this.alternativeGraduationPlans = new ArrayList<EdFiStudentSchoolAssociationAlternativeGraduationPlan>();
    }
    this.alternativeGraduationPlans.add(alternativeGraduationPlansItem);
    return this;
  }

   /**
   * An unordered collection of studentSchoolAssociationAlternativeGraduationPlans. The secondary graduation plan or plans associated with the student enrolled in the school.
   * @return alternativeGraduationPlans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of studentSchoolAssociationAlternativeGraduationPlans. The secondary graduation plan or plans associated with the student enrolled in the school.")

  public List<EdFiStudentSchoolAssociationAlternativeGraduationPlan> getAlternativeGraduationPlans() {
    return alternativeGraduationPlans;
  }


  public void setAlternativeGraduationPlans(List<EdFiStudentSchoolAssociationAlternativeGraduationPlan> alternativeGraduationPlans) {
    this.alternativeGraduationPlans = alternativeGraduationPlans;
  }


  public EdFiStudentSchoolAssociation educationPlans(List<EdFiStudentSchoolAssociationEducationPlan> educationPlans) {
    
    this.educationPlans = educationPlans;
    return this;
  }

  public EdFiStudentSchoolAssociation addEducationPlansItem(EdFiStudentSchoolAssociationEducationPlan educationPlansItem) {
    if (this.educationPlans == null) {
      this.educationPlans = new ArrayList<EdFiStudentSchoolAssociationEducationPlan>();
    }
    this.educationPlans.add(educationPlansItem);
    return this;
  }

   /**
   * An unordered collection of studentSchoolAssociationEducationPlans. The type of education plan(s) the student is following, if appropriate.
   * @return educationPlans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of studentSchoolAssociationEducationPlans. The type of education plan(s) the student is following, if appropriate.")

  public List<EdFiStudentSchoolAssociationEducationPlan> getEducationPlans() {
    return educationPlans;
  }


  public void setEducationPlans(List<EdFiStudentSchoolAssociationEducationPlan> educationPlans) {
    this.educationPlans = educationPlans;
  }


  public EdFiStudentSchoolAssociation employedWhileEnrolled(Boolean employedWhileEnrolled) {
    
    this.employedWhileEnrolled = employedWhileEnrolled;
    return this;
  }

   /**
   * An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.
   * @return employedWhileEnrolled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.")

  public Boolean getEmployedWhileEnrolled() {
    return employedWhileEnrolled;
  }


  public void setEmployedWhileEnrolled(Boolean employedWhileEnrolled) {
    this.employedWhileEnrolled = employedWhileEnrolled;
  }


  public EdFiStudentSchoolAssociation entryGradeLevelDescriptor(String entryGradeLevelDescriptor) {
    
    this.entryGradeLevelDescriptor = entryGradeLevelDescriptor;
    return this;
  }

   /**
   * The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.
   * @return entryGradeLevelDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.")

  public String getEntryGradeLevelDescriptor() {
    return entryGradeLevelDescriptor;
  }


  public void setEntryGradeLevelDescriptor(String entryGradeLevelDescriptor) {
    this.entryGradeLevelDescriptor = entryGradeLevelDescriptor;
  }


  public EdFiStudentSchoolAssociation entryGradeLevelReasonDescriptor(String entryGradeLevelReasonDescriptor) {
    
    this.entryGradeLevelReasonDescriptor = entryGradeLevelReasonDescriptor;
    return this;
  }

   /**
   * The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.
   * @return entryGradeLevelReasonDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.")

  public String getEntryGradeLevelReasonDescriptor() {
    return entryGradeLevelReasonDescriptor;
  }


  public void setEntryGradeLevelReasonDescriptor(String entryGradeLevelReasonDescriptor) {
    this.entryGradeLevelReasonDescriptor = entryGradeLevelReasonDescriptor;
  }


  public EdFiStudentSchoolAssociation entryTypeDescriptor(String entryTypeDescriptor) {
    
    this.entryTypeDescriptor = entryTypeDescriptor;
    return this;
  }

   /**
   * The process by which a student enters a school during a given academic session.
   * @return entryTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The process by which a student enters a school during a given academic session.")

  public String getEntryTypeDescriptor() {
    return entryTypeDescriptor;
  }


  public void setEntryTypeDescriptor(String entryTypeDescriptor) {
    this.entryTypeDescriptor = entryTypeDescriptor;
  }


  public EdFiStudentSchoolAssociation exitWithdrawDate(LocalDate exitWithdrawDate) {
    
    this.exitWithdrawDate = exitWithdrawDate;
    return this;
  }

   /**
   * The recorded exit or withdraw date for the student.
   * @return exitWithdrawDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The recorded exit or withdraw date for the student.")

  public LocalDate getExitWithdrawDate() {
    return exitWithdrawDate;
  }


  public void setExitWithdrawDate(LocalDate exitWithdrawDate) {
    this.exitWithdrawDate = exitWithdrawDate;
  }


  public EdFiStudentSchoolAssociation exitWithdrawTypeDescriptor(String exitWithdrawTypeDescriptor) {
    
    this.exitWithdrawTypeDescriptor = exitWithdrawTypeDescriptor;
    return this;
  }

   /**
   * The circumstances under which the student exited from membership in an educational institution.
   * @return exitWithdrawTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The circumstances under which the student exited from membership in an educational institution.")

  public String getExitWithdrawTypeDescriptor() {
    return exitWithdrawTypeDescriptor;
  }


  public void setExitWithdrawTypeDescriptor(String exitWithdrawTypeDescriptor) {
    this.exitWithdrawTypeDescriptor = exitWithdrawTypeDescriptor;
  }


  public EdFiStudentSchoolAssociation fullTimeEquivalency(Double fullTimeEquivalency) {
    
    this.fullTimeEquivalency = fullTimeEquivalency;
    return this;
  }

   /**
   * The full-time equivalent ratio for the student s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.
   * @return fullTimeEquivalency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The full-time equivalent ratio for the student s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.")

  public Double getFullTimeEquivalency() {
    return fullTimeEquivalency;
  }


  public void setFullTimeEquivalency(Double fullTimeEquivalency) {
    this.fullTimeEquivalency = fullTimeEquivalency;
  }


  public EdFiStudentSchoolAssociation primarySchool(Boolean primarySchool) {
    
    this.primarySchool = primarySchool;
    return this;
  }

   /**
   * Indicates if a given enrollment record should be considered the primary record for a student.
   * @return primarySchool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if a given enrollment record should be considered the primary record for a student.")

  public Boolean getPrimarySchool() {
    return primarySchool;
  }


  public void setPrimarySchool(Boolean primarySchool) {
    this.primarySchool = primarySchool;
  }


  public EdFiStudentSchoolAssociation repeatGradeIndicator(Boolean repeatGradeIndicator) {
    
    this.repeatGradeIndicator = repeatGradeIndicator;
    return this;
  }

   /**
   * An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.
   * @return repeatGradeIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.")

  public Boolean getRepeatGradeIndicator() {
    return repeatGradeIndicator;
  }


  public void setRepeatGradeIndicator(Boolean repeatGradeIndicator) {
    this.repeatGradeIndicator = repeatGradeIndicator;
  }


  public EdFiStudentSchoolAssociation residencyStatusDescriptor(String residencyStatusDescriptor) {
    
    this.residencyStatusDescriptor = residencyStatusDescriptor;
    return this;
  }

   /**
   * An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.
   * @return residencyStatusDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.")

  public String getResidencyStatusDescriptor() {
    return residencyStatusDescriptor;
  }


  public void setResidencyStatusDescriptor(String residencyStatusDescriptor) {
    this.residencyStatusDescriptor = residencyStatusDescriptor;
  }


  public EdFiStudentSchoolAssociation schoolChoiceTransfer(Boolean schoolChoiceTransfer) {
    
    this.schoolChoiceTransfer = schoolChoiceTransfer;
    return this;
  }

   /**
   * An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.
   * @return schoolChoiceTransfer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.")

  public Boolean getSchoolChoiceTransfer() {
    return schoolChoiceTransfer;
  }


  public void setSchoolChoiceTransfer(Boolean schoolChoiceTransfer) {
    this.schoolChoiceTransfer = schoolChoiceTransfer;
  }


  public EdFiStudentSchoolAssociation termCompletionIndicator(Boolean termCompletionIndicator) {
    
    this.termCompletionIndicator = termCompletionIndicator;
    return this;
  }

   /**
   * Idicates whether or not a student completed the most recent school term.
   * @return termCompletionIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Idicates whether or not a student completed the most recent school term.")

  public Boolean getTermCompletionIndicator() {
    return termCompletionIndicator;
  }


  public void setTermCompletionIndicator(Boolean termCompletionIndicator) {
    this.termCompletionIndicator = termCompletionIndicator;
  }


  public EdFiStudentSchoolAssociation etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStudentSchoolAssociation edFiStudentSchoolAssociation = (EdFiStudentSchoolAssociation) o;
    return Objects.equals(this.id, edFiStudentSchoolAssociation.id) &&
        Objects.equals(this.entryDate, edFiStudentSchoolAssociation.entryDate) &&
        Objects.equals(this.calendarReference, edFiStudentSchoolAssociation.calendarReference) &&
        Objects.equals(this.classOfSchoolYearTypeReference, edFiStudentSchoolAssociation.classOfSchoolYearTypeReference) &&
        Objects.equals(this.graduationPlanReference, edFiStudentSchoolAssociation.graduationPlanReference) &&
        Objects.equals(this.schoolReference, edFiStudentSchoolAssociation.schoolReference) &&
        Objects.equals(this.schoolYearTypeReference, edFiStudentSchoolAssociation.schoolYearTypeReference) &&
        Objects.equals(this.studentReference, edFiStudentSchoolAssociation.studentReference) &&
        Objects.equals(this.alternativeGraduationPlans, edFiStudentSchoolAssociation.alternativeGraduationPlans) &&
        Objects.equals(this.educationPlans, edFiStudentSchoolAssociation.educationPlans) &&
        Objects.equals(this.employedWhileEnrolled, edFiStudentSchoolAssociation.employedWhileEnrolled) &&
        Objects.equals(this.entryGradeLevelDescriptor, edFiStudentSchoolAssociation.entryGradeLevelDescriptor) &&
        Objects.equals(this.entryGradeLevelReasonDescriptor, edFiStudentSchoolAssociation.entryGradeLevelReasonDescriptor) &&
        Objects.equals(this.entryTypeDescriptor, edFiStudentSchoolAssociation.entryTypeDescriptor) &&
        Objects.equals(this.exitWithdrawDate, edFiStudentSchoolAssociation.exitWithdrawDate) &&
        Objects.equals(this.exitWithdrawTypeDescriptor, edFiStudentSchoolAssociation.exitWithdrawTypeDescriptor) &&
        Objects.equals(this.fullTimeEquivalency, edFiStudentSchoolAssociation.fullTimeEquivalency) &&
        Objects.equals(this.primarySchool, edFiStudentSchoolAssociation.primarySchool) &&
        Objects.equals(this.repeatGradeIndicator, edFiStudentSchoolAssociation.repeatGradeIndicator) &&
        Objects.equals(this.residencyStatusDescriptor, edFiStudentSchoolAssociation.residencyStatusDescriptor) &&
        Objects.equals(this.schoolChoiceTransfer, edFiStudentSchoolAssociation.schoolChoiceTransfer) &&
        Objects.equals(this.termCompletionIndicator, edFiStudentSchoolAssociation.termCompletionIndicator) &&
        Objects.equals(this.etag, edFiStudentSchoolAssociation.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, entryDate, calendarReference, classOfSchoolYearTypeReference, graduationPlanReference, schoolReference, schoolYearTypeReference, studentReference, alternativeGraduationPlans, educationPlans, employedWhileEnrolled, entryGradeLevelDescriptor, entryGradeLevelReasonDescriptor, entryTypeDescriptor, exitWithdrawDate, exitWithdrawTypeDescriptor, fullTimeEquivalency, primarySchool, repeatGradeIndicator, residencyStatusDescriptor, schoolChoiceTransfer, termCompletionIndicator, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStudentSchoolAssociation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    entryDate: ").append(toIndentedString(entryDate)).append("\n");
    sb.append("    calendarReference: ").append(toIndentedString(calendarReference)).append("\n");
    sb.append("    classOfSchoolYearTypeReference: ").append(toIndentedString(classOfSchoolYearTypeReference)).append("\n");
    sb.append("    graduationPlanReference: ").append(toIndentedString(graduationPlanReference)).append("\n");
    sb.append("    schoolReference: ").append(toIndentedString(schoolReference)).append("\n");
    sb.append("    schoolYearTypeReference: ").append(toIndentedString(schoolYearTypeReference)).append("\n");
    sb.append("    studentReference: ").append(toIndentedString(studentReference)).append("\n");
    sb.append("    alternativeGraduationPlans: ").append(toIndentedString(alternativeGraduationPlans)).append("\n");
    sb.append("    educationPlans: ").append(toIndentedString(educationPlans)).append("\n");
    sb.append("    employedWhileEnrolled: ").append(toIndentedString(employedWhileEnrolled)).append("\n");
    sb.append("    entryGradeLevelDescriptor: ").append(toIndentedString(entryGradeLevelDescriptor)).append("\n");
    sb.append("    entryGradeLevelReasonDescriptor: ").append(toIndentedString(entryGradeLevelReasonDescriptor)).append("\n");
    sb.append("    entryTypeDescriptor: ").append(toIndentedString(entryTypeDescriptor)).append("\n");
    sb.append("    exitWithdrawDate: ").append(toIndentedString(exitWithdrawDate)).append("\n");
    sb.append("    exitWithdrawTypeDescriptor: ").append(toIndentedString(exitWithdrawTypeDescriptor)).append("\n");
    sb.append("    fullTimeEquivalency: ").append(toIndentedString(fullTimeEquivalency)).append("\n");
    sb.append("    primarySchool: ").append(toIndentedString(primarySchool)).append("\n");
    sb.append("    repeatGradeIndicator: ").append(toIndentedString(repeatGradeIndicator)).append("\n");
    sb.append("    residencyStatusDescriptor: ").append(toIndentedString(residencyStatusDescriptor)).append("\n");
    sb.append("    schoolChoiceTransfer: ").append(toIndentedString(schoolChoiceTransfer)).append("\n");
    sb.append("    termCompletionIndicator: ").append(toIndentedString(termCompletionIndicator)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

