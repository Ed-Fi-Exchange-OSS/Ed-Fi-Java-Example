/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiEducationOrganizationReference;
import Models.Resources.EdFiProgramCharacteristic;
import Models.Resources.EdFiProgramLearningObjective;
import Models.Resources.EdFiProgramLearningStandard;
import Models.Resources.EdFiProgramService;
import Models.Resources.EdFiProgramSponsor;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EdFiProgram
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiProgram {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PROGRAM_NAME = "programName";
  @SerializedName(SERIALIZED_NAME_PROGRAM_NAME)
  private String programName;

  public static final String SERIALIZED_NAME_PROGRAM_TYPE_DESCRIPTOR = "programTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_PROGRAM_TYPE_DESCRIPTOR)
  private String programTypeDescriptor;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE = "educationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference educationOrganizationReference;

  public static final String SERIALIZED_NAME_CHARACTERISTICS = "characteristics";
  @SerializedName(SERIALIZED_NAME_CHARACTERISTICS)
  private List<EdFiProgramCharacteristic> characteristics = null;

  public static final String SERIALIZED_NAME_LEARNING_OBJECTIVES = "learningObjectives";
  @SerializedName(SERIALIZED_NAME_LEARNING_OBJECTIVES)
  private List<EdFiProgramLearningObjective> learningObjectives = null;

  public static final String SERIALIZED_NAME_LEARNING_STANDARDS = "learningStandards";
  @SerializedName(SERIALIZED_NAME_LEARNING_STANDARDS)
  private List<EdFiProgramLearningStandard> learningStandards = null;

  public static final String SERIALIZED_NAME_PROGRAM_ID = "programId";
  @SerializedName(SERIALIZED_NAME_PROGRAM_ID)
  private String programId;

  public static final String SERIALIZED_NAME_SERVICES = "services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private List<EdFiProgramService> services = null;

  public static final String SERIALIZED_NAME_SPONSORS = "sponsors";
  @SerializedName(SERIALIZED_NAME_SPONSORS)
  private List<EdFiProgramSponsor> sponsors = null;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiProgram() { 
  }

  public EdFiProgram id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiProgram programName(String programName) {
    
    this.programName = programName;
    return this;
  }

   /**
   * The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.
   * @return programName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.")

  public String getProgramName() {
    return programName;
  }


  public void setProgramName(String programName) {
    this.programName = programName;
  }


  public EdFiProgram programTypeDescriptor(String programTypeDescriptor) {
    
    this.programTypeDescriptor = programTypeDescriptor;
    return this;
  }

   /**
   * The type of program.
   * @return programTypeDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of program.")

  public String getProgramTypeDescriptor() {
    return programTypeDescriptor;
  }


  public void setProgramTypeDescriptor(String programTypeDescriptor) {
    this.programTypeDescriptor = programTypeDescriptor;
  }


  public EdFiProgram educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }


  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }


  public EdFiProgram characteristics(List<EdFiProgramCharacteristic> characteristics) {
    
    this.characteristics = characteristics;
    return this;
  }

  public EdFiProgram addCharacteristicsItem(EdFiProgramCharacteristic characteristicsItem) {
    if (this.characteristics == null) {
      this.characteristics = new ArrayList<EdFiProgramCharacteristic>();
    }
    this.characteristics.add(characteristicsItem);
    return this;
  }

   /**
   * An unordered collection of programCharacteristics. Reflects important characteristics of the Program, such as categories or particular indications.
   * @return characteristics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of programCharacteristics. Reflects important characteristics of the Program, such as categories or particular indications.")

  public List<EdFiProgramCharacteristic> getCharacteristics() {
    return characteristics;
  }


  public void setCharacteristics(List<EdFiProgramCharacteristic> characteristics) {
    this.characteristics = characteristics;
  }


  public EdFiProgram learningObjectives(List<EdFiProgramLearningObjective> learningObjectives) {
    
    this.learningObjectives = learningObjectives;
    return this;
  }

  public EdFiProgram addLearningObjectivesItem(EdFiProgramLearningObjective learningObjectivesItem) {
    if (this.learningObjectives == null) {
      this.learningObjectives = new ArrayList<EdFiProgramLearningObjective>();
    }
    this.learningObjectives.add(learningObjectivesItem);
    return this;
  }

   /**
   * An unordered collection of programLearningObjectives. References the LearningObjective(s) with which the Program is associated.
   * @return learningObjectives
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of programLearningObjectives. References the LearningObjective(s) with which the Program is associated.")

  public List<EdFiProgramLearningObjective> getLearningObjectives() {
    return learningObjectives;
  }


  public void setLearningObjectives(List<EdFiProgramLearningObjective> learningObjectives) {
    this.learningObjectives = learningObjectives;
  }


  public EdFiProgram learningStandards(List<EdFiProgramLearningStandard> learningStandards) {
    
    this.learningStandards = learningStandards;
    return this;
  }

  public EdFiProgram addLearningStandardsItem(EdFiProgramLearningStandard learningStandardsItem) {
    if (this.learningStandards == null) {
      this.learningStandards = new ArrayList<EdFiProgramLearningStandard>();
    }
    this.learningStandards.add(learningStandardsItem);
    return this;
  }

   /**
   * An unordered collection of programLearningStandards. LearningStandard followed by this program.
   * @return learningStandards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of programLearningStandards. LearningStandard followed by this program.")

  public List<EdFiProgramLearningStandard> getLearningStandards() {
    return learningStandards;
  }


  public void setLearningStandards(List<EdFiProgramLearningStandard> learningStandards) {
    this.learningStandards = learningStandards;
  }


  public EdFiProgram programId(String programId) {
    
    this.programId = programId;
    return this;
  }

   /**
   * A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.
   * @return programId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.")

  public String getProgramId() {
    return programId;
  }


  public void setProgramId(String programId) {
    this.programId = programId;
  }


  public EdFiProgram services(List<EdFiProgramService> services) {
    
    this.services = services;
    return this;
  }

  public EdFiProgram addServicesItem(EdFiProgramService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<EdFiProgramService>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * An unordered collection of programServices. Defines the services this program provides to students.
   * @return services
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of programServices. Defines the services this program provides to students.")

  public List<EdFiProgramService> getServices() {
    return services;
  }


  public void setServices(List<EdFiProgramService> services) {
    this.services = services;
  }


  public EdFiProgram sponsors(List<EdFiProgramSponsor> sponsors) {
    
    this.sponsors = sponsors;
    return this;
  }

  public EdFiProgram addSponsorsItem(EdFiProgramSponsor sponsorsItem) {
    if (this.sponsors == null) {
      this.sponsors = new ArrayList<EdFiProgramSponsor>();
    }
    this.sponsors.add(sponsorsItem);
    return this;
  }

   /**
   * An unordered collection of programSponsors. Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual&#39;s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).
   * @return sponsors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of programSponsors. Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual's participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).")

  public List<EdFiProgramSponsor> getSponsors() {
    return sponsors;
  }


  public void setSponsors(List<EdFiProgramSponsor> sponsors) {
    this.sponsors = sponsors;
  }


  public EdFiProgram etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiProgram edFiProgram = (EdFiProgram) o;
    return Objects.equals(this.id, edFiProgram.id) &&
        Objects.equals(this.programName, edFiProgram.programName) &&
        Objects.equals(this.programTypeDescriptor, edFiProgram.programTypeDescriptor) &&
        Objects.equals(this.educationOrganizationReference, edFiProgram.educationOrganizationReference) &&
        Objects.equals(this.characteristics, edFiProgram.characteristics) &&
        Objects.equals(this.learningObjectives, edFiProgram.learningObjectives) &&
        Objects.equals(this.learningStandards, edFiProgram.learningStandards) &&
        Objects.equals(this.programId, edFiProgram.programId) &&
        Objects.equals(this.services, edFiProgram.services) &&
        Objects.equals(this.sponsors, edFiProgram.sponsors) &&
        Objects.equals(this.etag, edFiProgram.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, programName, programTypeDescriptor, educationOrganizationReference, characteristics, learningObjectives, learningStandards, programId, services, sponsors, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiProgram {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    programName: ").append(toIndentedString(programName)).append("\n");
    sb.append("    programTypeDescriptor: ").append(toIndentedString(programTypeDescriptor)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    characteristics: ").append(toIndentedString(characteristics)).append("\n");
    sb.append("    learningObjectives: ").append(toIndentedString(learningObjectives)).append("\n");
    sb.append("    learningStandards: ").append(toIndentedString(learningStandards)).append("\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    sponsors: ").append(toIndentedString(sponsors)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

