/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiStaffReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * EdFiStaffLeave
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiStaffLeave {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_BEGIN_DATE = "beginDate";
  @SerializedName(SERIALIZED_NAME_BEGIN_DATE)
  private LocalDate beginDate;

  public static final String SERIALIZED_NAME_STAFF_LEAVE_EVENT_CATEGORY_DESCRIPTOR = "staffLeaveEventCategoryDescriptor";
  @SerializedName(SERIALIZED_NAME_STAFF_LEAVE_EVENT_CATEGORY_DESCRIPTOR)
  private String staffLeaveEventCategoryDescriptor;

  public static final String SERIALIZED_NAME_STAFF_REFERENCE = "staffReference";
  @SerializedName(SERIALIZED_NAME_STAFF_REFERENCE)
  private EdFiStaffReference staffReference;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_SUBSTITUTE_ASSIGNED = "substituteAssigned";
  @SerializedName(SERIALIZED_NAME_SUBSTITUTE_ASSIGNED)
  private Boolean substituteAssigned;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiStaffLeave() { 
  }

  public EdFiStaffLeave id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiStaffLeave beginDate(LocalDate beginDate) {
    
    this.beginDate = beginDate;
    return this;
  }

   /**
   * The begin date of the staff leave.
   * @return beginDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The begin date of the staff leave.")

  public LocalDate getBeginDate() {
    return beginDate;
  }


  public void setBeginDate(LocalDate beginDate) {
    this.beginDate = beginDate;
  }


  public EdFiStaffLeave staffLeaveEventCategoryDescriptor(String staffLeaveEventCategoryDescriptor) {
    
    this.staffLeaveEventCategoryDescriptor = staffLeaveEventCategoryDescriptor;
    return this;
  }

   /**
   * The code describing the type of leave taken, for example: Sick, Personal, Vacation.
   * @return staffLeaveEventCategoryDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The code describing the type of leave taken, for example: Sick, Personal, Vacation.")

  public String getStaffLeaveEventCategoryDescriptor() {
    return staffLeaveEventCategoryDescriptor;
  }


  public void setStaffLeaveEventCategoryDescriptor(String staffLeaveEventCategoryDescriptor) {
    this.staffLeaveEventCategoryDescriptor = staffLeaveEventCategoryDescriptor;
  }


  public EdFiStaffLeave staffReference(EdFiStaffReference staffReference) {
    
    this.staffReference = staffReference;
    return this;
  }

   /**
   * Get staffReference
   * @return staffReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStaffReference getStaffReference() {
    return staffReference;
  }


  public void setStaffReference(EdFiStaffReference staffReference) {
    this.staffReference = staffReference;
  }


  public EdFiStaffLeave endDate(LocalDate endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The end date of the staff leave.
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The end date of the staff leave.")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  public EdFiStaffLeave reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Expanded reason for the staff leave.
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expanded reason for the staff leave.")

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public EdFiStaffLeave substituteAssigned(Boolean substituteAssigned) {
    
    this.substituteAssigned = substituteAssigned;
    return this;
  }

   /**
   * Indicator of whether a substitute was assigned during the period of staff leave.
   * @return substituteAssigned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicator of whether a substitute was assigned during the period of staff leave.")

  public Boolean getSubstituteAssigned() {
    return substituteAssigned;
  }


  public void setSubstituteAssigned(Boolean substituteAssigned) {
    this.substituteAssigned = substituteAssigned;
  }


  public EdFiStaffLeave etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStaffLeave edFiStaffLeave = (EdFiStaffLeave) o;
    return Objects.equals(this.id, edFiStaffLeave.id) &&
        Objects.equals(this.beginDate, edFiStaffLeave.beginDate) &&
        Objects.equals(this.staffLeaveEventCategoryDescriptor, edFiStaffLeave.staffLeaveEventCategoryDescriptor) &&
        Objects.equals(this.staffReference, edFiStaffLeave.staffReference) &&
        Objects.equals(this.endDate, edFiStaffLeave.endDate) &&
        Objects.equals(this.reason, edFiStaffLeave.reason) &&
        Objects.equals(this.substituteAssigned, edFiStaffLeave.substituteAssigned) &&
        Objects.equals(this.etag, edFiStaffLeave.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, beginDate, staffLeaveEventCategoryDescriptor, staffReference, endDate, reason, substituteAssigned, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStaffLeave {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    beginDate: ").append(toIndentedString(beginDate)).append("\n");
    sb.append("    staffLeaveEventCategoryDescriptor: ").append(toIndentedString(staffLeaveEventCategoryDescriptor)).append("\n");
    sb.append("    staffReference: ").append(toIndentedString(staffReference)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    substituteAssigned: ").append(toIndentedString(substituteAssigned)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

