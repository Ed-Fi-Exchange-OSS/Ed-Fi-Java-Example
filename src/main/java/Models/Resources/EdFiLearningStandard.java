/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiLearningStandardAcademicSubject;
import Models.Resources.EdFiLearningStandardContentStandard;
import Models.Resources.EdFiLearningStandardGradeLevel;
import Models.Resources.EdFiLearningStandardIdentificationCode;
import Models.Resources.EdFiLearningStandardPrerequisiteLearningStandard;
import Models.Resources.EdFiLearningStandardReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EdFiLearningStandard
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiLearningStandard {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ACADEMIC_SUBJECTS = "academicSubjects";
  @SerializedName(SERIALIZED_NAME_ACADEMIC_SUBJECTS)
  private List<EdFiLearningStandardAcademicSubject> academicSubjects = new ArrayList<EdFiLearningStandardAcademicSubject>();

  public static final String SERIALIZED_NAME_GRADE_LEVELS = "gradeLevels";
  @SerializedName(SERIALIZED_NAME_GRADE_LEVELS)
  private List<EdFiLearningStandardGradeLevel> gradeLevels = new ArrayList<EdFiLearningStandardGradeLevel>();

  public static final String SERIALIZED_NAME_LEARNING_STANDARD_ID = "learningStandardId";
  @SerializedName(SERIALIZED_NAME_LEARNING_STANDARD_ID)
  private String learningStandardId;

  public static final String SERIALIZED_NAME_PARENT_LEARNING_STANDARD_REFERENCE = "parentLearningStandardReference";
  @SerializedName(SERIALIZED_NAME_PARENT_LEARNING_STANDARD_REFERENCE)
  private EdFiLearningStandardReference parentLearningStandardReference;

  public static final String SERIALIZED_NAME_CONTENT_STANDARD = "contentStandard";
  @SerializedName(SERIALIZED_NAME_CONTENT_STANDARD)
  private EdFiLearningStandardContentStandard contentStandard;

  public static final String SERIALIZED_NAME_COURSE_TITLE = "courseTitle";
  @SerializedName(SERIALIZED_NAME_COURSE_TITLE)
  private String courseTitle;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IDENTIFICATION_CODES = "identificationCodes";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATION_CODES)
  private List<EdFiLearningStandardIdentificationCode> identificationCodes = null;

  public static final String SERIALIZED_NAME_LEARNING_STANDARD_CATEGORY_DESCRIPTOR = "learningStandardCategoryDescriptor";
  @SerializedName(SERIALIZED_NAME_LEARNING_STANDARD_CATEGORY_DESCRIPTOR)
  private String learningStandardCategoryDescriptor;

  public static final String SERIALIZED_NAME_LEARNING_STANDARD_ITEM_CODE = "learningStandardItemCode";
  @SerializedName(SERIALIZED_NAME_LEARNING_STANDARD_ITEM_CODE)
  private String learningStandardItemCode;

  public static final String SERIALIZED_NAME_LEARNING_STANDARD_SCOPE_DESCRIPTOR = "learningStandardScopeDescriptor";
  @SerializedName(SERIALIZED_NAME_LEARNING_STANDARD_SCOPE_DESCRIPTOR)
  private String learningStandardScopeDescriptor;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_PREREQUISITE_LEARNING_STANDARDS = "prerequisiteLearningStandards";
  @SerializedName(SERIALIZED_NAME_PREREQUISITE_LEARNING_STANDARDS)
  private List<EdFiLearningStandardPrerequisiteLearningStandard> prerequisiteLearningStandards = null;

  public static final String SERIALIZED_NAME_SUCCESS_CRITERIA = "successCriteria";
  @SerializedName(SERIALIZED_NAME_SUCCESS_CRITERIA)
  private String successCriteria;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public EdFiLearningStandard() { 
  }

  public EdFiLearningStandard id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiLearningStandard academicSubjects(List<EdFiLearningStandardAcademicSubject> academicSubjects) {
    
    this.academicSubjects = academicSubjects;
    return this;
  }

  public EdFiLearningStandard addAcademicSubjectsItem(EdFiLearningStandardAcademicSubject academicSubjectsItem) {
    this.academicSubjects.add(academicSubjectsItem);
    return this;
  }

   /**
   * An unordered collection of learningStandardAcademicSubjects. Subject area for the LearningStandard.
   * @return academicSubjects
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An unordered collection of learningStandardAcademicSubjects. Subject area for the LearningStandard.")

  public List<EdFiLearningStandardAcademicSubject> getAcademicSubjects() {
    return academicSubjects;
  }


  public void setAcademicSubjects(List<EdFiLearningStandardAcademicSubject> academicSubjects) {
    this.academicSubjects = academicSubjects;
  }


  public EdFiLearningStandard gradeLevels(List<EdFiLearningStandardGradeLevel> gradeLevels) {
    
    this.gradeLevels = gradeLevels;
    return this;
  }

  public EdFiLearningStandard addGradeLevelsItem(EdFiLearningStandardGradeLevel gradeLevelsItem) {
    this.gradeLevels.add(gradeLevelsItem);
    return this;
  }

   /**
   * An unordered collection of learningStandardGradeLevels. The grade levels for the specific learning standard.
   * @return gradeLevels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An unordered collection of learningStandardGradeLevels. The grade levels for the specific learning standard.")

  public List<EdFiLearningStandardGradeLevel> getGradeLevels() {
    return gradeLevels;
  }


  public void setGradeLevels(List<EdFiLearningStandardGradeLevel> gradeLevels) {
    this.gradeLevels = gradeLevels;
  }


  public EdFiLearningStandard learningStandardId(String learningStandardId) {
    
    this.learningStandardId = learningStandardId;
    return this;
  }

   /**
   * The identifier for the specific learning standard (e.g., 111.15.3.1.A).
   * @return learningStandardId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier for the specific learning standard (e.g., 111.15.3.1.A).")

  public String getLearningStandardId() {
    return learningStandardId;
  }


  public void setLearningStandardId(String learningStandardId) {
    this.learningStandardId = learningStandardId;
  }


  public EdFiLearningStandard parentLearningStandardReference(EdFiLearningStandardReference parentLearningStandardReference) {
    
    this.parentLearningStandardReference = parentLearningStandardReference;
    return this;
  }

   /**
   * Get parentLearningStandardReference
   * @return parentLearningStandardReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiLearningStandardReference getParentLearningStandardReference() {
    return parentLearningStandardReference;
  }


  public void setParentLearningStandardReference(EdFiLearningStandardReference parentLearningStandardReference) {
    this.parentLearningStandardReference = parentLearningStandardReference;
  }


  public EdFiLearningStandard contentStandard(EdFiLearningStandardContentStandard contentStandard) {
    
    this.contentStandard = contentStandard;
    return this;
  }

   /**
   * Get contentStandard
   * @return contentStandard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiLearningStandardContentStandard getContentStandard() {
    return contentStandard;
  }


  public void setContentStandard(EdFiLearningStandardContentStandard contentStandard) {
    this.contentStandard = contentStandard;
  }


  public EdFiLearningStandard courseTitle(String courseTitle) {
    
    this.courseTitle = courseTitle;
    return this;
  }

   /**
   * The official Course Title with which this learning standard is associated.
   * @return courseTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The official Course Title with which this learning standard is associated.")

  public String getCourseTitle() {
    return courseTitle;
  }


  public void setCourseTitle(String courseTitle) {
    this.courseTitle = courseTitle;
  }


  public EdFiLearningStandard description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The text of the statement. The textual content that either describes a specific competency such as \&quot;Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions.\&quot; or describes a less granular group of competencies within the taxonomy of the standards document, e.g. \&quot;Understand and apply the Pythagorean Theorem,\&quot; or \&quot;Geometry\&quot;.
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The text of the statement. The textual content that either describes a specific competency such as \"Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions.\" or describes a less granular group of competencies within the taxonomy of the standards document, e.g. \"Understand and apply the Pythagorean Theorem,\" or \"Geometry\".")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public EdFiLearningStandard identificationCodes(List<EdFiLearningStandardIdentificationCode> identificationCodes) {
    
    this.identificationCodes = identificationCodes;
    return this;
  }

  public EdFiLearningStandard addIdentificationCodesItem(EdFiLearningStandardIdentificationCode identificationCodesItem) {
    if (this.identificationCodes == null) {
      this.identificationCodes = new ArrayList<EdFiLearningStandardIdentificationCode>();
    }
    this.identificationCodes.add(identificationCodesItem);
    return this;
  }

   /**
   * An unordered collection of learningStandardIdentificationCodes. A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.
   * @return identificationCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of learningStandardIdentificationCodes. A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.")

  public List<EdFiLearningStandardIdentificationCode> getIdentificationCodes() {
    return identificationCodes;
  }


  public void setIdentificationCodes(List<EdFiLearningStandardIdentificationCode> identificationCodes) {
    this.identificationCodes = identificationCodes;
  }


  public EdFiLearningStandard learningStandardCategoryDescriptor(String learningStandardCategoryDescriptor) {
    
    this.learningStandardCategoryDescriptor = learningStandardCategoryDescriptor;
    return this;
  }

   /**
   * An additional classification of the type of a specific learning standard.
   * @return learningStandardCategoryDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An additional classification of the type of a specific learning standard.")

  public String getLearningStandardCategoryDescriptor() {
    return learningStandardCategoryDescriptor;
  }


  public void setLearningStandardCategoryDescriptor(String learningStandardCategoryDescriptor) {
    this.learningStandardCategoryDescriptor = learningStandardCategoryDescriptor;
  }


  public EdFiLearningStandard learningStandardItemCode(String learningStandardItemCode) {
    
    this.learningStandardItemCode = learningStandardItemCode;
    return this;
  }

   /**
   * A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).
   * @return learningStandardItemCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).")

  public String getLearningStandardItemCode() {
    return learningStandardItemCode;
  }


  public void setLearningStandardItemCode(String learningStandardItemCode) {
    this.learningStandardItemCode = learningStandardItemCode;
  }


  public EdFiLearningStandard learningStandardScopeDescriptor(String learningStandardScopeDescriptor) {
    
    this.learningStandardScopeDescriptor = learningStandardScopeDescriptor;
    return this;
  }

   /**
   * Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.
   * @return learningStandardScopeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.")

  public String getLearningStandardScopeDescriptor() {
    return learningStandardScopeDescriptor;
  }


  public void setLearningStandardScopeDescriptor(String learningStandardScopeDescriptor) {
    this.learningStandardScopeDescriptor = learningStandardScopeDescriptor;
  }


  public EdFiLearningStandard namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.
   * @return namespace
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public EdFiLearningStandard prerequisiteLearningStandards(List<EdFiLearningStandardPrerequisiteLearningStandard> prerequisiteLearningStandards) {
    
    this.prerequisiteLearningStandards = prerequisiteLearningStandards;
    return this;
  }

  public EdFiLearningStandard addPrerequisiteLearningStandardsItem(EdFiLearningStandardPrerequisiteLearningStandard prerequisiteLearningStandardsItem) {
    if (this.prerequisiteLearningStandards == null) {
      this.prerequisiteLearningStandards = new ArrayList<EdFiLearningStandardPrerequisiteLearningStandard>();
    }
    this.prerequisiteLearningStandards.add(prerequisiteLearningStandardsItem);
    return this;
  }

   /**
   * An unordered collection of learningStandardPrerequisiteLearningStandards. The unique identifier of a prerequisite learning standard item, a competency needed prior to learning this one. (Some items may have no prerequisites others may have one or more prerequisites. This should only be used to represent the immediate predecessors in a competency-based pathway, i.e. not prerequisites of prerequisites).
   * @return prerequisiteLearningStandards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of learningStandardPrerequisiteLearningStandards. The unique identifier of a prerequisite learning standard item, a competency needed prior to learning this one. (Some items may have no prerequisites others may have one or more prerequisites. This should only be used to represent the immediate predecessors in a competency-based pathway, i.e. not prerequisites of prerequisites).")

  public List<EdFiLearningStandardPrerequisiteLearningStandard> getPrerequisiteLearningStandards() {
    return prerequisiteLearningStandards;
  }


  public void setPrerequisiteLearningStandards(List<EdFiLearningStandardPrerequisiteLearningStandard> prerequisiteLearningStandards) {
    this.prerequisiteLearningStandards = prerequisiteLearningStandards;
  }


  public EdFiLearningStandard successCriteria(String successCriteria) {
    
    this.successCriteria = successCriteria;
    return this;
  }

   /**
   * One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningStandard.
   * @return successCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningStandard.")

  public String getSuccessCriteria() {
    return successCriteria;
  }


  public void setSuccessCriteria(String successCriteria) {
    this.successCriteria = successCriteria;
  }


  public EdFiLearningStandard uri(String uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * An unambiguous reference to the statement using a network-resolvable URI.
   * @return uri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unambiguous reference to the statement using a network-resolvable URI.")

  public String getUri() {
    return uri;
  }


  public void setUri(String uri) {
    this.uri = uri;
  }


  public EdFiLearningStandard etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiLearningStandard edFiLearningStandard = (EdFiLearningStandard) o;
    return Objects.equals(this.id, edFiLearningStandard.id) &&
        Objects.equals(this.academicSubjects, edFiLearningStandard.academicSubjects) &&
        Objects.equals(this.gradeLevels, edFiLearningStandard.gradeLevels) &&
        Objects.equals(this.learningStandardId, edFiLearningStandard.learningStandardId) &&
        Objects.equals(this.parentLearningStandardReference, edFiLearningStandard.parentLearningStandardReference) &&
        Objects.equals(this.contentStandard, edFiLearningStandard.contentStandard) &&
        Objects.equals(this.courseTitle, edFiLearningStandard.courseTitle) &&
        Objects.equals(this.description, edFiLearningStandard.description) &&
        Objects.equals(this.identificationCodes, edFiLearningStandard.identificationCodes) &&
        Objects.equals(this.learningStandardCategoryDescriptor, edFiLearningStandard.learningStandardCategoryDescriptor) &&
        Objects.equals(this.learningStandardItemCode, edFiLearningStandard.learningStandardItemCode) &&
        Objects.equals(this.learningStandardScopeDescriptor, edFiLearningStandard.learningStandardScopeDescriptor) &&
        Objects.equals(this.namespace, edFiLearningStandard.namespace) &&
        Objects.equals(this.prerequisiteLearningStandards, edFiLearningStandard.prerequisiteLearningStandards) &&
        Objects.equals(this.successCriteria, edFiLearningStandard.successCriteria) &&
        Objects.equals(this.uri, edFiLearningStandard.uri) &&
        Objects.equals(this.etag, edFiLearningStandard.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, academicSubjects, gradeLevels, learningStandardId, parentLearningStandardReference, contentStandard, courseTitle, description, identificationCodes, learningStandardCategoryDescriptor, learningStandardItemCode, learningStandardScopeDescriptor, namespace, prerequisiteLearningStandards, successCriteria, uri, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiLearningStandard {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    academicSubjects: ").append(toIndentedString(academicSubjects)).append("\n");
    sb.append("    gradeLevels: ").append(toIndentedString(gradeLevels)).append("\n");
    sb.append("    learningStandardId: ").append(toIndentedString(learningStandardId)).append("\n");
    sb.append("    parentLearningStandardReference: ").append(toIndentedString(parentLearningStandardReference)).append("\n");
    sb.append("    contentStandard: ").append(toIndentedString(contentStandard)).append("\n");
    sb.append("    courseTitle: ").append(toIndentedString(courseTitle)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    identificationCodes: ").append(toIndentedString(identificationCodes)).append("\n");
    sb.append("    learningStandardCategoryDescriptor: ").append(toIndentedString(learningStandardCategoryDescriptor)).append("\n");
    sb.append("    learningStandardItemCode: ").append(toIndentedString(learningStandardItemCode)).append("\n");
    sb.append("    learningStandardScopeDescriptor: ").append(toIndentedString(learningStandardScopeDescriptor)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    prerequisiteLearningStandards: ").append(toIndentedString(prerequisiteLearningStandards)).append("\n");
    sb.append("    successCriteria: ").append(toIndentedString(successCriteria)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

