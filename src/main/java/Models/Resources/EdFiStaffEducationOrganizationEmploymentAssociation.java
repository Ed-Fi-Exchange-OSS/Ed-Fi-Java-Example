/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.Resources;

import java.util.Objects;
import java.util.Arrays;
import Models.Resources.EdFiCredentialReference;
import Models.Resources.EdFiEducationOrganizationReference;
import Models.Resources.EdFiStaffReference;
import Models.Resources.StaffEducationOrganizationEmploymentAssociationExtensions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * EdFiStaffEducationOrganizationEmploymentAssociation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:32.034-05:00[America/Mexico_City]")
public class EdFiStaffEducationOrganizationEmploymentAssociation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_EMPLOYMENT_STATUS_DESCRIPTOR = "employmentStatusDescriptor";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_STATUS_DESCRIPTOR)
  private String employmentStatusDescriptor;

  public static final String SERIALIZED_NAME_HIRE_DATE = "hireDate";
  @SerializedName(SERIALIZED_NAME_HIRE_DATE)
  private LocalDate hireDate;

  public static final String SERIALIZED_NAME_CREDENTIAL_REFERENCE = "credentialReference";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_REFERENCE)
  private EdFiCredentialReference credentialReference;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE = "educationOrganizationReference";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_REFERENCE)
  private EdFiEducationOrganizationReference educationOrganizationReference;

  public static final String SERIALIZED_NAME_STAFF_REFERENCE = "staffReference";
  @SerializedName(SERIALIZED_NAME_STAFF_REFERENCE)
  private EdFiStaffReference staffReference;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_FULL_TIME_EQUIVALENCY = "fullTimeEquivalency";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_EQUIVALENCY)
  private Double fullTimeEquivalency;

  public static final String SERIALIZED_NAME_HOURLY_WAGE = "hourlyWage";
  @SerializedName(SERIALIZED_NAME_HOURLY_WAGE)
  private Double hourlyWage;

  public static final String SERIALIZED_NAME_OFFER_DATE = "offerDate";
  @SerializedName(SERIALIZED_NAME_OFFER_DATE)
  private LocalDate offerDate;

  public static final String SERIALIZED_NAME_SEPARATION_DESCRIPTOR = "separationDescriptor";
  @SerializedName(SERIALIZED_NAME_SEPARATION_DESCRIPTOR)
  private String separationDescriptor;

  public static final String SERIALIZED_NAME_SEPARATION_REASON_DESCRIPTOR = "separationReasonDescriptor";
  @SerializedName(SERIALIZED_NAME_SEPARATION_REASON_DESCRIPTOR)
  private String separationReasonDescriptor;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXT = "_ext";
  @SerializedName(SERIALIZED_NAME_EXT)
  private StaffEducationOrganizationEmploymentAssociationExtensions ext;

  public EdFiStaffEducationOrganizationEmploymentAssociation() { 
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation employmentStatusDescriptor(String employmentStatusDescriptor) {
    
    this.employmentStatusDescriptor = employmentStatusDescriptor;
    return this;
  }

   /**
   * Reflects the type of employment or contract; for example:         Probationary         Contractual         Substitute/temporary         Tenured or permanent         Volunteer/no contract         ...
   * @return employmentStatusDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Reflects the type of employment or contract; for example:         Probationary         Contractual         Substitute/temporary         Tenured or permanent         Volunteer/no contract         ...")

  public String getEmploymentStatusDescriptor() {
    return employmentStatusDescriptor;
  }


  public void setEmploymentStatusDescriptor(String employmentStatusDescriptor) {
    this.employmentStatusDescriptor = employmentStatusDescriptor;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation hireDate(LocalDate hireDate) {
    
    this.hireDate = hireDate;
    return this;
  }

   /**
   * The month, day, and year on which an individual was hired for a position.
   * @return hireDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The month, day, and year on which an individual was hired for a position.")

  public LocalDate getHireDate() {
    return hireDate;
  }


  public void setHireDate(LocalDate hireDate) {
    this.hireDate = hireDate;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation credentialReference(EdFiCredentialReference credentialReference) {
    
    this.credentialReference = credentialReference;
    return this;
  }

   /**
   * Get credentialReference
   * @return credentialReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EdFiCredentialReference getCredentialReference() {
    return credentialReference;
  }


  public void setCredentialReference(EdFiCredentialReference credentialReference) {
    this.credentialReference = credentialReference;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }


  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation staffReference(EdFiStaffReference staffReference) {
    
    this.staffReference = staffReference;
    return this;
  }

   /**
   * Get staffReference
   * @return staffReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EdFiStaffReference getStaffReference() {
    return staffReference;
  }


  public void setStaffReference(EdFiStaffReference staffReference) {
    this.staffReference = staffReference;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation department(String department) {
    
    this.department = department;
    return this;
  }

   /**
   * The department or suborganization the employee/contractor is associated with in the EducationOrganization.
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The department or suborganization the employee/contractor is associated with in the EducationOrganization.")

  public String getDepartment() {
    return department;
  }


  public void setDepartment(String department) {
    this.department = department;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation endDate(LocalDate endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation fullTimeEquivalency(Double fullTimeEquivalency) {
    
    this.fullTimeEquivalency = fullTimeEquivalency;
    return this;
  }

   /**
   * The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.
   * @return fullTimeEquivalency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.")

  public Double getFullTimeEquivalency() {
    return fullTimeEquivalency;
  }


  public void setFullTimeEquivalency(Double fullTimeEquivalency) {
    this.fullTimeEquivalency = fullTimeEquivalency;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation hourlyWage(Double hourlyWage) {
    
    this.hourlyWage = hourlyWage;
    return this;
  }

   /**
   * Hourly wage associated with the employment position being reported.
   * @return hourlyWage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hourly wage associated with the employment position being reported.")

  public Double getHourlyWage() {
    return hourlyWage;
  }


  public void setHourlyWage(Double hourlyWage) {
    this.hourlyWage = hourlyWage;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation offerDate(LocalDate offerDate) {
    
    this.offerDate = offerDate;
    return this;
  }

   /**
   * Date at which the staff member was made an official offer for this employment.
   * @return offerDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date at which the staff member was made an official offer for this employment.")

  public LocalDate getOfferDate() {
    return offerDate;
  }


  public void setOfferDate(LocalDate offerDate) {
    this.offerDate = offerDate;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation separationDescriptor(String separationDescriptor) {
    
    this.separationDescriptor = separationDescriptor;
    return this;
  }

   /**
   * Type of employment separation; for example: Voluntary separation, Involuntary separation,         Mutual agreement         Other, etc.
   * @return separationDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of employment separation; for example: Voluntary separation, Involuntary separation,         Mutual agreement         Other, etc.")

  public String getSeparationDescriptor() {
    return separationDescriptor;
  }


  public void setSeparationDescriptor(String separationDescriptor) {
    this.separationDescriptor = separationDescriptor;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation separationReasonDescriptor(String separationReasonDescriptor) {
    
    this.separationReasonDescriptor = separationReasonDescriptor;
    return this;
  }

   /**
   * Reason for terminating the employment; for example:         Employment in education         Employment outside of education         Retirement         Family/personal relocation         Change of assignment.
   * @return separationReasonDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for terminating the employment; for example:         Employment in education         Employment outside of education         Retirement         Family/personal relocation         Change of assignment.")

  public String getSeparationReasonDescriptor() {
    return separationReasonDescriptor;
  }


  public void setSeparationReasonDescriptor(String separationReasonDescriptor) {
    this.separationReasonDescriptor = separationReasonDescriptor;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  public EdFiStaffEducationOrganizationEmploymentAssociation ext(StaffEducationOrganizationEmploymentAssociationExtensions ext) {
    
    this.ext = ext;
    return this;
  }

   /**
   * Get ext
   * @return ext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StaffEducationOrganizationEmploymentAssociationExtensions getExt() {
    return ext;
  }


  public void setExt(StaffEducationOrganizationEmploymentAssociationExtensions ext) {
    this.ext = ext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStaffEducationOrganizationEmploymentAssociation edFiStaffEducationOrganizationEmploymentAssociation = (EdFiStaffEducationOrganizationEmploymentAssociation) o;
    return Objects.equals(this.id, edFiStaffEducationOrganizationEmploymentAssociation.id) &&
        Objects.equals(this.employmentStatusDescriptor, edFiStaffEducationOrganizationEmploymentAssociation.employmentStatusDescriptor) &&
        Objects.equals(this.hireDate, edFiStaffEducationOrganizationEmploymentAssociation.hireDate) &&
        Objects.equals(this.credentialReference, edFiStaffEducationOrganizationEmploymentAssociation.credentialReference) &&
        Objects.equals(this.educationOrganizationReference, edFiStaffEducationOrganizationEmploymentAssociation.educationOrganizationReference) &&
        Objects.equals(this.staffReference, edFiStaffEducationOrganizationEmploymentAssociation.staffReference) &&
        Objects.equals(this.department, edFiStaffEducationOrganizationEmploymentAssociation.department) &&
        Objects.equals(this.endDate, edFiStaffEducationOrganizationEmploymentAssociation.endDate) &&
        Objects.equals(this.fullTimeEquivalency, edFiStaffEducationOrganizationEmploymentAssociation.fullTimeEquivalency) &&
        Objects.equals(this.hourlyWage, edFiStaffEducationOrganizationEmploymentAssociation.hourlyWage) &&
        Objects.equals(this.offerDate, edFiStaffEducationOrganizationEmploymentAssociation.offerDate) &&
        Objects.equals(this.separationDescriptor, edFiStaffEducationOrganizationEmploymentAssociation.separationDescriptor) &&
        Objects.equals(this.separationReasonDescriptor, edFiStaffEducationOrganizationEmploymentAssociation.separationReasonDescriptor) &&
        Objects.equals(this.etag, edFiStaffEducationOrganizationEmploymentAssociation.etag) &&
        Objects.equals(this.ext, edFiStaffEducationOrganizationEmploymentAssociation.ext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, employmentStatusDescriptor, hireDate, credentialReference, educationOrganizationReference, staffReference, department, endDate, fullTimeEquivalency, hourlyWage, offerDate, separationDescriptor, separationReasonDescriptor, etag, ext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStaffEducationOrganizationEmploymentAssociation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employmentStatusDescriptor: ").append(toIndentedString(employmentStatusDescriptor)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    credentialReference: ").append(toIndentedString(credentialReference)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    staffReference: ").append(toIndentedString(staffReference)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    fullTimeEquivalency: ").append(toIndentedString(fullTimeEquivalency)).append("\n");
    sb.append("    hourlyWage: ").append(toIndentedString(hourlyWage)).append("\n");
    sb.append("    offerDate: ").append(toIndentedString(offerDate)).append("\n");
    sb.append("    separationDescriptor: ").append(toIndentedString(separationDescriptor)).append("\n");
    sb.append("    separationReasonDescriptor: ").append(toIndentedString(separationReasonDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

