/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.EnrollmentComposites;

import java.util.Objects;
import java.util.Arrays;
import Models.EnrollmentComposites.SchoolEducationOrganizationAddress;
import Models.EnrollmentComposites.SchoolEducationOrganizationCategory;
import Models.EnrollmentComposites.SchoolEducationOrganizationIdentificationCode;
import Models.EnrollmentComposites.SchoolEducationOrganizationInstitutionTelephone;
import Models.EnrollmentComposites.SchoolLocalEducationAgency;
import Models.EnrollmentComposites.SchoolSchoolCategory;
import Models.EnrollmentComposites.SchoolSchoolGradeLevel;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * School
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:13.622-05:00[America/Mexico_City]")
public class School {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_EDUCATION_ORGANIZATION_CATEGORIES = "educationOrganizationCategories";
  @SerializedName(SERIALIZED_NAME_EDUCATION_ORGANIZATION_CATEGORIES)
  private List<SchoolEducationOrganizationCategory> educationOrganizationCategories = new ArrayList<SchoolEducationOrganizationCategory>();

  public static final String SERIALIZED_NAME_GRADE_LEVELS = "gradeLevels";
  @SerializedName(SERIALIZED_NAME_GRADE_LEVELS)
  private List<SchoolSchoolGradeLevel> gradeLevels = new ArrayList<SchoolSchoolGradeLevel>();

  public static final String SERIALIZED_NAME_SCHOOL_ID = "schoolId";
  @SerializedName(SERIALIZED_NAME_SCHOOL_ID)
  private Integer schoolId;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<SchoolEducationOrganizationAddress> addresses = null;

  public static final String SERIALIZED_NAME_IDENTIFICATION_CODES = "identificationCodes";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATION_CODES)
  private List<SchoolEducationOrganizationIdentificationCode> identificationCodes = null;

  public static final String SERIALIZED_NAME_INSTITUTION_TELEPHONES = "institutionTelephones";
  @SerializedName(SERIALIZED_NAME_INSTITUTION_TELEPHONES)
  private List<SchoolEducationOrganizationInstitutionTelephone> institutionTelephones = null;

  public static final String SERIALIZED_NAME_LOCAL_EDUCATION_AGENCY = "localEducationAgency";
  @SerializedName(SERIALIZED_NAME_LOCAL_EDUCATION_AGENCY)
  private SchoolLocalEducationAgency localEducationAgency;

  public static final String SERIALIZED_NAME_NAME_OF_INSTITUTION = "nameOfInstitution";
  @SerializedName(SERIALIZED_NAME_NAME_OF_INSTITUTION)
  private String nameOfInstitution;

  public static final String SERIALIZED_NAME_SCHOOL_CATEGORIES = "schoolCategories";
  @SerializedName(SERIALIZED_NAME_SCHOOL_CATEGORIES)
  private List<SchoolSchoolCategory> schoolCategories = null;

  public static final String SERIALIZED_NAME_SCHOOL_TYPE_DESCRIPTOR = "schoolTypeDescriptor";
  @SerializedName(SERIALIZED_NAME_SCHOOL_TYPE_DESCRIPTOR)
  private String schoolTypeDescriptor;

  public static final String SERIALIZED_NAME_SHORT_NAME_OF_INSTITUTION = "shortNameOfInstitution";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME_OF_INSTITUTION)
  private String shortNameOfInstitution;

  public static final String SERIALIZED_NAME_WEB_SITE = "webSite";
  @SerializedName(SERIALIZED_NAME_WEB_SITE)
  private String webSite;

  public static final String SERIALIZED_NAME_ETAG = "_etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public School() { 
  }

  public School id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public School educationOrganizationCategories(List<SchoolEducationOrganizationCategory> educationOrganizationCategories) {
    
    this.educationOrganizationCategories = educationOrganizationCategories;
    return this;
  }

  public School addEducationOrganizationCategoriesItem(SchoolEducationOrganizationCategory educationOrganizationCategoriesItem) {
    this.educationOrganizationCategories.add(educationOrganizationCategoriesItem);
    return this;
  }

   /**
   * An unordered collection of educationOrganizationCategories. 
   * @return educationOrganizationCategories
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An unordered collection of educationOrganizationCategories. ")

  public List<SchoolEducationOrganizationCategory> getEducationOrganizationCategories() {
    return educationOrganizationCategories;
  }


  public void setEducationOrganizationCategories(List<SchoolEducationOrganizationCategory> educationOrganizationCategories) {
    this.educationOrganizationCategories = educationOrganizationCategories;
  }


  public School gradeLevels(List<SchoolSchoolGradeLevel> gradeLevels) {
    
    this.gradeLevels = gradeLevels;
    return this;
  }

  public School addGradeLevelsItem(SchoolSchoolGradeLevel gradeLevelsItem) {
    this.gradeLevels.add(gradeLevelsItem);
    return this;
  }

   /**
   * An unordered collection of schoolGradeLevels. 
   * @return gradeLevels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An unordered collection of schoolGradeLevels. ")

  public List<SchoolSchoolGradeLevel> getGradeLevels() {
    return gradeLevels;
  }


  public void setGradeLevels(List<SchoolSchoolGradeLevel> gradeLevels) {
    this.gradeLevels = gradeLevels;
  }


  public School schoolId(Integer schoolId) {
    
    this.schoolId = schoolId;
    return this;
  }

   /**
   * The identifier assigned to a school.
   * @return schoolId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier assigned to a school.")

  public Integer getSchoolId() {
    return schoolId;
  }


  public void setSchoolId(Integer schoolId) {
    this.schoolId = schoolId;
  }


  public School addresses(List<SchoolEducationOrganizationAddress> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public School addAddressesItem(SchoolEducationOrganizationAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<SchoolEducationOrganizationAddress>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * An unordered collection of educationOrganizationAddresses. 
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of educationOrganizationAddresses. ")

  public List<SchoolEducationOrganizationAddress> getAddresses() {
    return addresses;
  }


  public void setAddresses(List<SchoolEducationOrganizationAddress> addresses) {
    this.addresses = addresses;
  }


  public School identificationCodes(List<SchoolEducationOrganizationIdentificationCode> identificationCodes) {
    
    this.identificationCodes = identificationCodes;
    return this;
  }

  public School addIdentificationCodesItem(SchoolEducationOrganizationIdentificationCode identificationCodesItem) {
    if (this.identificationCodes == null) {
      this.identificationCodes = new ArrayList<SchoolEducationOrganizationIdentificationCode>();
    }
    this.identificationCodes.add(identificationCodesItem);
    return this;
  }

   /**
   * An unordered collection of educationOrganizationIdentificationCodes. 
   * @return identificationCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of educationOrganizationIdentificationCodes. ")

  public List<SchoolEducationOrganizationIdentificationCode> getIdentificationCodes() {
    return identificationCodes;
  }


  public void setIdentificationCodes(List<SchoolEducationOrganizationIdentificationCode> identificationCodes) {
    this.identificationCodes = identificationCodes;
  }


  public School institutionTelephones(List<SchoolEducationOrganizationInstitutionTelephone> institutionTelephones) {
    
    this.institutionTelephones = institutionTelephones;
    return this;
  }

  public School addInstitutionTelephonesItem(SchoolEducationOrganizationInstitutionTelephone institutionTelephonesItem) {
    if (this.institutionTelephones == null) {
      this.institutionTelephones = new ArrayList<SchoolEducationOrganizationInstitutionTelephone>();
    }
    this.institutionTelephones.add(institutionTelephonesItem);
    return this;
  }

   /**
   * An unordered collection of educationOrganizationInstitutionTelephones. 
   * @return institutionTelephones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of educationOrganizationInstitutionTelephones. ")

  public List<SchoolEducationOrganizationInstitutionTelephone> getInstitutionTelephones() {
    return institutionTelephones;
  }


  public void setInstitutionTelephones(List<SchoolEducationOrganizationInstitutionTelephone> institutionTelephones) {
    this.institutionTelephones = institutionTelephones;
  }


  public School localEducationAgency(SchoolLocalEducationAgency localEducationAgency) {
    
    this.localEducationAgency = localEducationAgency;
    return this;
  }

   /**
   * Get localEducationAgency
   * @return localEducationAgency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SchoolLocalEducationAgency getLocalEducationAgency() {
    return localEducationAgency;
  }


  public void setLocalEducationAgency(SchoolLocalEducationAgency localEducationAgency) {
    this.localEducationAgency = localEducationAgency;
  }


  public School nameOfInstitution(String nameOfInstitution) {
    
    this.nameOfInstitution = nameOfInstitution;
    return this;
  }

   /**
   * The full, legally accepted name of the institution.
   * @return nameOfInstitution
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The full, legally accepted name of the institution.")

  public String getNameOfInstitution() {
    return nameOfInstitution;
  }


  public void setNameOfInstitution(String nameOfInstitution) {
    this.nameOfInstitution = nameOfInstitution;
  }


  public School schoolCategories(List<SchoolSchoolCategory> schoolCategories) {
    
    this.schoolCategories = schoolCategories;
    return this;
  }

  public School addSchoolCategoriesItem(SchoolSchoolCategory schoolCategoriesItem) {
    if (this.schoolCategories == null) {
      this.schoolCategories = new ArrayList<SchoolSchoolCategory>();
    }
    this.schoolCategories.add(schoolCategoriesItem);
    return this;
  }

   /**
   * An unordered collection of schoolCategories. 
   * @return schoolCategories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An unordered collection of schoolCategories. ")

  public List<SchoolSchoolCategory> getSchoolCategories() {
    return schoolCategories;
  }


  public void setSchoolCategories(List<SchoolSchoolCategory> schoolCategories) {
    this.schoolCategories = schoolCategories;
  }


  public School schoolTypeDescriptor(String schoolTypeDescriptor) {
    
    this.schoolTypeDescriptor = schoolTypeDescriptor;
    return this;
  }

   /**
   * The type of education institution as classified by its primary focus.
   * @return schoolTypeDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of education institution as classified by its primary focus.")

  public String getSchoolTypeDescriptor() {
    return schoolTypeDescriptor;
  }


  public void setSchoolTypeDescriptor(String schoolTypeDescriptor) {
    this.schoolTypeDescriptor = schoolTypeDescriptor;
  }


  public School shortNameOfInstitution(String shortNameOfInstitution) {
    
    this.shortNameOfInstitution = shortNameOfInstitution;
    return this;
  }

   /**
   * A short name for the institution.
   * @return shortNameOfInstitution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A short name for the institution.")

  public String getShortNameOfInstitution() {
    return shortNameOfInstitution;
  }


  public void setShortNameOfInstitution(String shortNameOfInstitution) {
    this.shortNameOfInstitution = shortNameOfInstitution;
  }


  public School webSite(String webSite) {
    
    this.webSite = webSite;
    return this;
  }

   /**
   * The public web site address (URL) for the EducationOrganization.
   * @return webSite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The public web site address (URL) for the EducationOrganization.")

  public String getWebSite() {
    return webSite;
  }


  public void setWebSite(String webSite) {
    this.webSite = webSite;
  }


  public School etag(String etag) {
    
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique system-generated value that identifies the version of the resource.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    School school = (School) o;
    return Objects.equals(this.id, school.id) &&
        Objects.equals(this.educationOrganizationCategories, school.educationOrganizationCategories) &&
        Objects.equals(this.gradeLevels, school.gradeLevels) &&
        Objects.equals(this.schoolId, school.schoolId) &&
        Objects.equals(this.addresses, school.addresses) &&
        Objects.equals(this.identificationCodes, school.identificationCodes) &&
        Objects.equals(this.institutionTelephones, school.institutionTelephones) &&
        Objects.equals(this.localEducationAgency, school.localEducationAgency) &&
        Objects.equals(this.nameOfInstitution, school.nameOfInstitution) &&
        Objects.equals(this.schoolCategories, school.schoolCategories) &&
        Objects.equals(this.schoolTypeDescriptor, school.schoolTypeDescriptor) &&
        Objects.equals(this.shortNameOfInstitution, school.shortNameOfInstitution) &&
        Objects.equals(this.webSite, school.webSite) &&
        Objects.equals(this.etag, school.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, educationOrganizationCategories, gradeLevels, schoolId, addresses, identificationCodes, institutionTelephones, localEducationAgency, nameOfInstitution, schoolCategories, schoolTypeDescriptor, shortNameOfInstitution, webSite, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class School {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    educationOrganizationCategories: ").append(toIndentedString(educationOrganizationCategories)).append("\n");
    sb.append("    gradeLevels: ").append(toIndentedString(gradeLevels)).append("\n");
    sb.append("    schoolId: ").append(toIndentedString(schoolId)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    identificationCodes: ").append(toIndentedString(identificationCodes)).append("\n");
    sb.append("    institutionTelephones: ").append(toIndentedString(institutionTelephones)).append("\n");
    sb.append("    localEducationAgency: ").append(toIndentedString(localEducationAgency)).append("\n");
    sb.append("    nameOfInstitution: ").append(toIndentedString(nameOfInstitution)).append("\n");
    sb.append("    schoolCategories: ").append(toIndentedString(schoolCategories)).append("\n");
    sb.append("    schoolTypeDescriptor: ").append(toIndentedString(schoolTypeDescriptor)).append("\n");
    sb.append("    shortNameOfInstitution: ").append(toIndentedString(shortNameOfInstitution)).append("\n");
    sb.append("    webSite: ").append(toIndentedString(webSite)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

