/*
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Models.EnrollmentComposites;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * SectionSession
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T14:58:13.622-05:00[America/Mexico_City]")
public class SectionSession {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SCHOOL_ID = "schoolId";
  @SerializedName(SERIALIZED_NAME_SCHOOL_ID)
  private Integer schoolId;

  public static final String SERIALIZED_NAME_SCHOOL_YEAR = "schoolYear";
  @SerializedName(SERIALIZED_NAME_SCHOOL_YEAR)
  private Integer schoolYear;

  public static final String SERIALIZED_NAME_TERM_DESCRIPTOR = "termDescriptor";
  @SerializedName(SERIALIZED_NAME_TERM_DESCRIPTOR)
  private String termDescriptor;

  public static final String SERIALIZED_NAME_SESSION_NAME = "sessionName";
  @SerializedName(SERIALIZED_NAME_SESSION_NAME)
  private String sessionName;

  public static final String SERIALIZED_NAME_BEGIN_DATE = "beginDate";
  @SerializedName(SERIALIZED_NAME_BEGIN_DATE)
  private LocalDate beginDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_TOTAL_INSTRUCTIONAL_DAYS = "totalInstructionalDays";
  @SerializedName(SERIALIZED_NAME_TOTAL_INSTRUCTIONAL_DAYS)
  private Integer totalInstructionalDays;

  public SectionSession() { 
  }

  public SectionSession id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SectionSession schoolId(Integer schoolId) {
    
    this.schoolId = schoolId;
    return this;
  }

   /**
   * The identifier assigned to a school.
   * @return schoolId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier assigned to a school.")

  public Integer getSchoolId() {
    return schoolId;
  }


  public void setSchoolId(Integer schoolId) {
    this.schoolId = schoolId;
  }


  public SectionSession schoolYear(Integer schoolYear) {
    
    this.schoolYear = schoolYear;
    return this;
  }

   /**
   * The identifier for the school year.
   * @return schoolYear
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier for the school year.")

  public Integer getSchoolYear() {
    return schoolYear;
  }


  public void setSchoolYear(Integer schoolYear) {
    this.schoolYear = schoolYear;
  }


  public SectionSession termDescriptor(String termDescriptor) {
    
    this.termDescriptor = termDescriptor;
    return this;
  }

   /**
   * An descriptor value indicating the term (e.g. &#39;Semester&#39;, &#39;Quarter&#39;, etc.).
   * @return termDescriptor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An descriptor value indicating the term (e.g. 'Semester', 'Quarter', etc.).")

  public String getTermDescriptor() {
    return termDescriptor;
  }


  public void setTermDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
  }


  public SectionSession sessionName(String sessionName) {
    
    this.sessionName = sessionName;
    return this;
  }

   /**
   * The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).
   * @return sessionName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).")

  public String getSessionName() {
    return sessionName;
  }


  public void setSessionName(String sessionName) {
    this.sessionName = sessionName;
  }


  public SectionSession beginDate(LocalDate beginDate) {
    
    this.beginDate = beginDate;
    return this;
  }

   /**
   * Month, day, and year of the first day of the Session.
   * @return beginDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Month, day, and year of the first day of the Session.")

  public LocalDate getBeginDate() {
    return beginDate;
  }


  public void setBeginDate(LocalDate beginDate) {
    this.beginDate = beginDate;
  }


  public SectionSession endDate(LocalDate endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Month, day and year of the last day of the Session.
   * @return endDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Month, day and year of the last day of the Session.")

  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  public SectionSession totalInstructionalDays(Integer totalInstructionalDays) {
    
    this.totalInstructionalDays = totalInstructionalDays;
    return this;
  }

   /**
   * The total number of instructional days in the school calendar.
   * @return totalInstructionalDays
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The total number of instructional days in the school calendar.")

  public Integer getTotalInstructionalDays() {
    return totalInstructionalDays;
  }


  public void setTotalInstructionalDays(Integer totalInstructionalDays) {
    this.totalInstructionalDays = totalInstructionalDays;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SectionSession sectionSession = (SectionSession) o;
    return Objects.equals(this.id, sectionSession.id) &&
        Objects.equals(this.schoolId, sectionSession.schoolId) &&
        Objects.equals(this.schoolYear, sectionSession.schoolYear) &&
        Objects.equals(this.termDescriptor, sectionSession.termDescriptor) &&
        Objects.equals(this.sessionName, sectionSession.sessionName) &&
        Objects.equals(this.beginDate, sectionSession.beginDate) &&
        Objects.equals(this.endDate, sectionSession.endDate) &&
        Objects.equals(this.totalInstructionalDays, sectionSession.totalInstructionalDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, schoolId, schoolYear, termDescriptor, sessionName, beginDate, endDate, totalInstructionalDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SectionSession {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    schoolId: ").append(toIndentedString(schoolId)).append("\n");
    sb.append("    schoolYear: ").append(toIndentedString(schoolYear)).append("\n");
    sb.append("    termDescriptor: ").append(toIndentedString(termDescriptor)).append("\n");
    sb.append("    sessionName: ").append(toIndentedString(sessionName)).append("\n");
    sb.append("    beginDate: ").append(toIndentedString(beginDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    totalInstructionalDays: ").append(toIndentedString(totalInstructionalDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

